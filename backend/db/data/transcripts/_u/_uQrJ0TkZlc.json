{
  "video_id": "_uQrJ0TkZlc",
  "created_at": "2025-07-26T18:58:39.593201",
  "segment_count": 4530,
  "metadata": {
    "video_id": "_uQrJ0TkZlc",
    "language": "en",
    "segment_count": 4530
  },
  "transcript": [
    {
      "text": "Hi, my name is Mosh, and I'm going to be your instructor in this Python course.",
      "start": 0.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this course, you're going to learn everything you need to get started programming in Python.",
      "start": 4.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python is one of the most popular programming languages, and every day people use it to do",
      "start": 8.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "cool things like automation, they use it in AI, as well as",
      "start": 12.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "building applications and websites like Instagram and Dropbox. So if you're looking",
      "start": 16.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for a job, Python is for you. In this course I'm going to teach you everything",
      "start": 20.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you need to get started with Python. We're going to talk about all the core concepts",
      "start": 24.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in Python, and then we're going to build three Python projects together.",
      "start": 28.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Here's the first project we're going to build. We're going to learn how to create this beautiful website",
      "start": 32.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for an imaginary grocery store. Here on the homepage we can see all",
      "start": 36.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of the products in the shop, and we also have an admin area for managing the",
      "start": 40.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "stock. We're going to build this using a popular Python framework called Django.",
      "start": 44.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now if you have never built a website before, don't worry, I will teach you everything from scratch.",
      "start": 48.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "You're also going to learn how to use Python in machine learning, or artificial intelligence.",
      "start": 52.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So you will learn how to write a Python programming that will predict",
      "start": 56.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the music that people like based on their profile. Just like how YouTube",
      "start": 60.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "recommends videos based on the videos you have watched before. I will also show you",
      "start": 64.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python to automate boring repetitive tasks that waste your time.",
      "start": 68.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "You will write a Python program that will process thousands of spreadsheets",
      "start": 72.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in under a second. I've designed this Python course for anyone who wants to learn",
      "start": 76.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python. If you're a beginner, don't worry, I will hold your hand through this entire course.",
      "start": 80.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "You're not too old or too young, and Python is super easy to learn. You can write your first",
      "start": 84.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python program in literally seconds. Plus I'm going to give you plenty",
      "start": 88.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of exercises to help you build your confidence writing cool Python programs.",
      "start": 92.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "My name is Mosh, I'm a software engineer with two decades of experience",
      "start": 96.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and I've taught over 3 million people how to code. I'm super excited to be teaching you",
      "start": 100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python in this course. So I hope you stick around and learn this beautiful",
      "start": 104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "powerful programming language.",
      "start": 108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to show you how to download",
      "start": 112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and install Python on your computer. So the first thing I want you to do,",
      "start": 116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is open up your browser and head over to Python",
      "start": 120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".org. On this page click on downloads,",
      "start": 124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here you can see the latest version of Python currently, at the time of recording this video",
      "start": 128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the latest version is python 3.7.2.",
      "start": 132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Chances are in the future, when you are watching this tutorial, there is a newer",
      "start": 136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "version of Python available, don't worry, all the materials you're going to learn in this course",
      "start": 140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will apply to the latest version of Python as well. So let's go ahead",
      "start": 144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and download Python 3, alright now,",
      "start": 148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "look at your downloads folder, here, we should have Python 3 installer",
      "start": 152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "simply double click that, if you're on Windows",
      "start": 156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you're going to see this check box here, add Python to",
      "start": 160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python, this is really important, make sure to tick this box, otherwise you're not going to be able to",
      "start": 164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "follow this tutorial. If you're on a Mac,",
      "start": 168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you're going to see an installer like this, with this setup wizard we're going to install Python 3",
      "start": 172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on our computer. So simply click continue, and again,",
      "start": 176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and again, and agree with the license agreement, and",
      "start": 180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "install it, this is going to take a few seconds so I'm going",
      "start": 184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to pause the recording.",
      "start": 188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, we have successfully installed Python 3 on our computer.",
      "start": 192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's close this. Alright, next we need to install",
      "start": 196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a code editor, we se a code editor to write our code, just like",
      "start": 200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "how we use Microsoft Word to write documents, we use a code editor to write",
      "start": 204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code. Now there are so many code editors out there, the one that I'm going to show you in this",
      "start": 208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tutorial is PyCharm. That is one of the most popular code editors",
      "start": 212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for writing Python code. You can get it from jetbrains.com",
      "start": 216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "/pycharm. Now more accurately pycharm",
      "start": 220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is considered an IDE, which is short for integrated development",
      "start": 224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "environment. And that's basically a code editor on steroids,",
      "start": 228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it has some additional features that makes it really easy to write code. So",
      "start": 232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's go ahead and download PyCharm. Now here on the",
      "start": 236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "download page, you can see two versions of PyCharm, one is the professional addition",
      "start": 240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "which has additional features and you have to pay for them. The other is the",
      "start": 244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "community edition, that is absolutely free, and that's what we're going to use in this tutorial.",
      "start": 248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, go ahead and download this as well.",
      "start": 252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, once again look at your downloads folder, once again you should have pycharm",
      "start": 256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so double click this, now if you're",
      "start": 260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in Windows you're going to see an installation wizard, simply click next, next, next",
      "start": 264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "until you install pycharm. If you're on Mac you need to drag and drop this icon",
      "start": 268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "onto the applications folder, so drag and drop,",
      "start": 272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "alright, now let's double click this to run it,",
      "start": 276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the first time we run pycharm we're going to get this warning, because this is an application",
      "start": 280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that we download from the internet. So let's go ahead and open it,",
      "start": 284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "next you're going to see this dialogue box for importing some settings, leave this to",
      "start": 288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "do not import settings, it doesn't really matter. Okay,",
      "start": 292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "On this page, select I've never used PyCharm you can see some keyword",
      "start": 296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shortcuts that might be useful in the future, just accept this, and down at the bottom,",
      "start": 300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "click the next button. And then next again,",
      "start": 304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one more time, and then finally start using pycharm.",
      "start": 308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So here's the main page of PyCharm every time you open",
      "start": 312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it, click on create new project,",
      "start": 316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is the location for our project, let's call our project Hello",
      "start": 320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "World. Now before click and create, expand",
      "start": 324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this item here, make sure that base interpreter is set to Python",
      "start": 328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3. Python interpreter is basically a program",
      "start": 332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that knows how to execute Python code, it will know how to interpret",
      "start": 336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or translate Python instructions into instructions a computer can understand.",
      "start": 340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, Mac computers, by default come with an older",
      "start": 344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "installation of Python, that's Python 2, it's considered legacy",
      "start": 348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "which means it's no longer maintained or supported. So earlier we downloaded",
      "start": 352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python 3, make sure that this is set to Python 3, if not",
      "start": 356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from this list, select Python 3.7.",
      "start": 360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, now let's go ahead and create this project,",
      "start": 364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now here right click on",
      "start": 372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Hello World folder and go to new",
      "start": 376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python file, call this file app.py.",
      "start": 380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So by convention, all Python files should have this",
      "start": 384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "py extension. Alright, let's go ahead,",
      "start": 388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now let's collapse this project panel by clicking here and write our",
      "start": 392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first python program. Simply type print, pr",
      "start": 396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "int, all in lowercase, open and close parenthesis,",
      "start": 400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and inside these parenthesis, add quotations we",
      "start": 404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "can either use single quotes or double quotes, now",
      "start": 408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in between the codes write your name. I am Mosh Hamedani, so",
      "start": 412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here, so this is your first Python programming. With these piece of code",
      "start": 416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you can print your name on the screen. Now to run this, go",
      "start": 420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on the top, under the run menu, click run,",
      "start": 424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "also note that there is a shortcut associated with this command, when",
      "start": 428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I program I always use shortcuts because that increases my productivity.",
      "start": 432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So here on a Mac computer, the shortcut is control, option, and",
      "start": 436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "R. On Windows it's different. So let's do that, now",
      "start": 440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's asking where you want to run this, click on app,",
      "start": 444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "down below, you should see this little terminal window, this",
      "start": 448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is a little window into our program, so here you can see our results for",
      "start": 452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "output for our program. In the future as you learn more Python, you'll be",
      "start": 456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "able to build applications that have a graphical user interface, or gooey.",
      "start": 460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "That is a little bit complicated, so for now we're going to use this little",
      "start": 464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "terminal window to see the results of our program. So as you can see my name is",
      "start": 468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "printed here, now as you print code, this window might get in the way so",
      "start": 472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "always resize it or minimize itty putting this",
      "start": 476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "icon here, so this was our first python program. Now",
      "start": 480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you didn't see the result I showed you in this video, use the comment box below and",
      "start": 484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tell me what error you encountered, I'll do my best to help you move forward.",
      "start": 488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this Python tutorial, we're gong to take this program to the next level and make it more interesting.",
      "start": 496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So I'm going to show you how to draw a dog hair. Now as part of",
      "start": 500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this tutorial you will learn how Python code gets executed and you will also learn",
      "start": 504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "about a few programming terms. So press enter, and",
      "start": 508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on line 2 write another print statement, so print, open and close",
      "start": 512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "parenthesis, add a quotation, now here you want to draw a dog.",
      "start": 516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, add an o, that is the head of our dog, followed by",
      "start": 520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "4 hyphens. So this is the body.",
      "start": 524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "alright, now one more time another print statement with",
      "start": 528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "quotations, now we need to draw the legs. So add a space.",
      "start": 532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Follow it by 4 vertical bars. So, like this,",
      "start": 536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so here's a little imaginary dot. Now let's",
      "start": 540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run this program and see what we get. So on the top right corner you should see this play button,",
      "start": 544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "click that, there you go, so we have our name and",
      "start": 548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "right below that we have our imaginary dog. Now what you need to understand",
      "start": 552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here, is that our python code gets executed line by line",
      "start": 556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from the top. So earlier I told you about Python interpreter",
      "start": 560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that is the program that knows how to translate or interpret",
      "start": 564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our Python code into instructions that a computer can understand.",
      "start": 568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So when we run this program by clicking this program here,",
      "start": 572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python interpreter starts executing or running our program",
      "start": 576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "line by line from the top. So first it executes line 1,",
      "start": 580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then, moves onto line 2, and so on. So this is how python",
      "start": 584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "programs get executed. Now let me show you something cool. Let's add",
      "start": 588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another print statement, with quotations now",
      "start": 592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in between the quotations, add a star or an asterisk, like",
      "start": 596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this. Now after the quotation and before the parenthesis,",
      "start": 600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add a space, once again, add an asterisk,",
      "start": 604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "space, 10. What is going on here? Well,",
      "start": 608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "anywhere we have quotations like here or here",
      "start": 612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're defining a string, a string is a programming term which means",
      "start": 616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a series of characters so here we have a string, we also have",
      "start": 620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a string on line 3, as well as line 2 and line 1.",
      "start": 624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now here, we're multiplying the string by",
      "start": 628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "number 10. So this is the multiplication operator, just like the multiplication",
      "start": 632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "operator we have in math. So with this piece of code we can",
      "start": 636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "draw 10 asterisks on the terminal, let me show you. So let's run this",
      "start": 640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program one more time, there you go. So we have 10",
      "start": 644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "asterisks. Now what we have here, this piece of code here,",
      "start": 648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is called an expression. An expression is a piece of",
      "start": 652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code that produces a value. So when Python interpreter",
      "start": 656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tries to execute line 4, first it will evaluate",
      "start": 660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the code that we put in between parenthesis, so we could evaluate our expressions",
      "start": 664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Our expression will produce 10 asterisks and then",
      "start": 668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "those asterisks will be printed on the terminal. Now as an exercise",
      "start": 672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you can use these print statements to draw another shape, you can draw a heart, a",
      "start": 676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ball, whatever you like. I will see you in the next tutorial.",
      "start": 680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "One of the questions I get a lot on my channel is",
      "start": 684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "how long does it take to learn Python and become job ready? Well there is no single",
      "start": 688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "answer. It really depends on you and how much effort and commitment you want to put",
      "start": 692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "into this. But I would say if you spend 2 hours every day",
      "start": 696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "consistently, after about 3 months you should be able to write",
      "start": 700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "basic python programs, but quite honestly, that doesn't get you a job.",
      "start": 704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In order to get a job, you need to specialize in one area,",
      "start": 708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what do you want to use python for? Do you want to build web applications or",
      "start": 712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "desktop applications? Or do you want to use it in machine learning and artificial intelligence?",
      "start": 716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So whatever you want to do you need to take additional courses.",
      "start": 720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example if you want to become a web developer in addition to learning",
      "start": 724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python, you should also learn about html, some css, some",
      "start": 728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "JavaScript and Django which is a popular Python framework",
      "start": 732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for building web applications. Learning all these things would take you another",
      "start": 736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "6 months, so in total you need 9-12 months to become",
      "start": 740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "job ready. At that point you can get a junior developer job with a",
      "start": 744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "salary of about 50-60 thousand dollars a year. Now as you work more",
      "start": 748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as you do more Python projects, your resume starts to build and",
      "start": 752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you can ask for $100,000 a year, or 120,000 dollars",
      "start": 756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a year, depending on where you are, what company, what geographical area,",
      "start": 760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it really depends, there is no single answer. So are you excited to",
      "start": 764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "learn Python and get started on this career path? If you are, I would encourage you",
      "start": 768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to make a commitment and spend 2 hours every day practicing",
      "start": 772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python. And use the comment box below and let me know why you are learning",
      "start": 776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python, what do you want to do with it? What's your dream job? I would love to hear your story.",
      "start": 780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this Python tutorial, you're going to learn about variables, which are one of the most fundamental",
      "start": 788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "concepts in programming, they're not specific to Python, they exist",
      "start": 792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in pretty much every programming language out there. We use variables",
      "start": 796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to temporarily store data in a computer's memory. Here's an example,",
      "start": 800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's type price = 10, when Python",
      "start": 804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "interpreter executes this code, it will allocate some memory, then it will store",
      "start": 808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the number 10 in that memory, and finally it will attach this",
      "start": 812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "price label in that memory location. As a metahor",
      "start": 816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "imagine we have a box. In that box, we have number 10",
      "start": 820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and price is the label that we put on the box. Now we can use this label",
      "start": 824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "anywhere in our program to access the value that we have in that box.",
      "start": 828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This is a very simplified explanation. So now, let's",
      "start": 832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print price on the terminal. Print, now this time we're not going to",
      "start": 836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add quotations, because if we put quotations here, we will see the text",
      "start": 840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "price on the terminal. Now the value of the price variable.",
      "start": 844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, put it in quotations, and type price,",
      "start": 848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now, let's run this program one more time, there you go. So we see 10,",
      "start": 852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on the terminal. So this is how we define variables, we",
      "start": 856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "start with an identifier which is the name of our variable, then,",
      "start": 860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an equal sign and finally a value. Now more accurately, when",
      "start": 864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this number 10 is about to be stored in the memory, first it will",
      "start": 868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "get converted to this binary for presentation. So this number 10,",
      "start": 872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is in the decimal system which has all the digits from 0 to 9.",
      "start": 876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Computers don't understand all these digits, they only understand",
      "start": 880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "0s and 1s. So when we store the number 10 in the computer's memory",
      "start": 884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first it will get converted to it's binary representation which will be",
      "start": 888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a bunch of 0's and 1's, like 001, 001, whatever",
      "start": 892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I don't know. Then it will get stored in the computer's memory. So,",
      "start": 896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's take this program to the next level. On the second line we can",
      "start": 900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "update the value of this price variable, so we can reset it",
      "start": 904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to a new value like 20, now when we run our program,",
      "start": 908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we should see 20, because as I told you before Python interpreter executes our",
      "start": 912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code line by line from the top. So first we set",
      "start": 916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the price to 10, then we reset it to 20, and finally we",
      "start": 920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print it on the terminal, let's run the terminal, there you go, so,",
      "start": 924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we see 20 here, okay? Now these",
      "start": 928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "numbers that we have here are whole numbers without a decimal point.",
      "start": 932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In programming, we refer to these numbers as integers.",
      "start": 936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But integer is a number without a decimal point. We can also use",
      "start": 940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "numbers with a decimal point for example on line 2, we can define",
      "start": 944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another variable called rating and set it to number",
      "start": 948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "4.9. Now in programming, we refer to this kind of number as",
      "start": 952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a floating point number of float for short. So we have integers",
      "start": 956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and floats. We can also define a variable and set",
      "start": 960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it to a string, for example, name equals",
      "start": 964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Mosh, we also have another kind of value which is called boolean,",
      "start": 968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "which can be true or false. They are line yes and no in English.",
      "start": 972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Here is an example, I'm going to define a variable, is underline",
      "start": 976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "published so we use an underscore to separate",
      "start": 980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "multiple words in our variables name. We set this to",
      "start": 984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "true, or false. These are",
      "start": 988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "boolean values. now note that Python is a case",
      "start": 992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sensitive language, which means it's sensitive to lower case and upper case letters.",
      "start": 996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So when defining variables we should always use",
      "start": 1000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "lowercase letters, but here false and true are special keywords in the",
      "start": 1004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "language, so if we spell it with a lowercase f, Python doesn't",
      "start": 1008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "understand it. You can see we have a red underline here, which indicates an error.",
      "start": 1012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Make sure to spell this with a capital F, or if you want to set this to true,",
      "start": 1016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "make sure the T is capital, so in this",
      "start": 1020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program, you're storing simple values in our computer's memory. Simple",
      "start": 1024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "values can be numbers, which can be integers or floats",
      "start": 1028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or they can be strings or booleans. But in Python",
      "start": 1032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can also store complex values like lists and values. And that's what I'm going to show you",
      "start": 1036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the future. So before going any further, I want you",
      "start": 1040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to do a little exercise. Imagine we're going to write a program for a hospital.",
      "start": 1044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we check on a patient named John Smith. He's",
      "start": 1048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "20 years old and is a new patient. I want you to define 3 variables here,",
      "start": 1052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for his name, his age, and another variable",
      "start": 1056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for if this is a new or an existing patient. So pause the video and spend one",
      "start": 1060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "minute on this exercise. When you're done, come back, continue and see my solution.",
      "start": 1064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, so here we need",
      "start": 1068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "three variables, the first one is the patient's name,",
      "start": 1072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we set that to John Smith. We can also",
      "start": 1076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call this full name, these are both valid names for our variables.",
      "start": 1080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The second variable is for the age of our patient. So age",
      "start": 1084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is 20, and finally we need a variable to tell if this is a new",
      "start": 1088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or existing patient. That's where we can use a boolean value.",
      "start": 1092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we define a variable, is new and",
      "start": 1096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we set it to true.",
      "start": 1100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, you have learned how to print",
      "start": 1104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "messages on the terminal window. In this tutorial, I'm going to show you how to",
      "start": 1108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "receive input from the user. So we're going to write a small program that asks",
      "start": 1112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the user's name and then we'll print a greeting message customized",
      "start": 1116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for that user. So instead of print we're going to use",
      "start": 1120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "input. Now both these input and print",
      "start": 1124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "are functions that are built into Python. As a metaphor think",
      "start": 1128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of the remote control of the TV. On this remote control we have a bunch of",
      "start": 1132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "buttons, these are the functions built into your tv, you can turn it on,",
      "start": 1136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "turn it off, change the volume and so on. In Python we also have",
      "start": 1140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "functions for common tasks such as printing messages, receiving input,",
      "start": 1144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and so on. So we're going to use the input function, now whenever we",
      "start": 1148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have these parenthesis, we're going to say we're calling or executing",
      "start": 1152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that function, it's like pressing a button on a remote control. So we're",
      "start": 1156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "going to call the input function and in between parenthesis",
      "start": 1160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we want to add a string to print something on the terminal,",
      "start": 1164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what is your name? With a question mark followed by",
      "start": 1168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a space. You will see why in a second. So this input function",
      "start": 1172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will print this message on the terminal, and then it will wait for the user to",
      "start": 1176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "enter a value. Whatever the user enters this input function will",
      "start": 1180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "return. So now we can get that value and store it in the memory using a variable.",
      "start": 1184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we get the result and put it in a variable called",
      "start": 1188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "name. Okay? Now on the second line",
      "start": 1192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we want to print a message like Hi John or Hi Mosh or whatever, so,",
      "start": 1196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print, quotations Hi with a space,",
      "start": 1200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now after the quotation we want to dynamically print",
      "start": 1204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what we have in the name variable. So we had",
      "start": 1208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a plus sign and then name. So here we have",
      "start": 1212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Hi which is a string, we're concatenating or",
      "start": 1216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "combining the string with another string, that is what we have",
      "start": 1220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the name variable. So here's another example of",
      "start": 1224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an expression. Remember what is an expression? It's a piece of code that",
      "start": 1228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "uses a value. So this expression concatenates or combines",
      "start": 1232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2 strings. Let's run this program and see what happens. So run",
      "start": 1236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "okay, here is a question, what is your name? Mosh,",
      "start": 1240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now note that earlier we added a space after the question mark, we",
      "start": 1244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "did this, so here in the terminal window the cursor is",
      "start": 1248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "separated from the question mark, otherwise it would be so close. So let's type",
      "start": 1252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "whatever here, plus enter, now we get this message, Hi, Mosh.",
      "start": 1256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now here's a little exercise for you. I want you to extend this program",
      "start": 1260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and ask two questions. First all the person's name and then",
      "start": 1264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "their favorite color. And then print a message like Mosh likes",
      "start": 1268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "blue. So pause the video, do this exercise and then come back and continue watching.",
      "start": 1272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, so here's the first question right after that,",
      "start": 1280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the input functions one more time, this time we're going to ask a different question.",
      "start": 1284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "What is your favorite color?",
      "start": 1288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, we get the new value and store it in the variable",
      "start": 1292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "called color, or you could call it favorite underline.",
      "start": 1296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "color. Either works. And finally we're going to change",
      "start": 1300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what we pass to the print function, so first we print the name",
      "start": 1304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we concatenate this with a string, here we're going to",
      "start": 1308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "type likes, we also put one space before and",
      "start": 1312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "after likes, and once again we concatenate this.",
      "start": 1316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "With the favorite color. So, favorite color,",
      "start": 1320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now let's run this program, so what is your name",
      "start": 1324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Mosh enter, favorite color, blue, enter,",
      "start": 1328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get this message, Mosh likes blue.",
      "start": 1332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Hey guys Mosh here, I just wanted to let you know that",
      "start": 1336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you really don't have to memorize anything in this course because I've put together a cheat sheet",
      "start": 1340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with summary notes. So you can quickly review the materials in this course.",
      "start": 1344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The link is below this video. So I have done my best to create",
      "start": 1348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the best possible Python course on Youtube. And I really appreciate",
      "start": 1352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it if you support my hard work by liking this video and sharing it with",
      "start": 1356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "others, so they can learn as well. And be sure to subscribe to my channel, for more",
      "start": 1360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tutorials like this. Alright, now, let's move onto the next tutorial.",
      "start": 1364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this Python tutorial, we're going to write a program that will ask the year that we were born",
      "start": 1372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in, and then it will calculate our age and print it on the terminal.",
      "start": 1376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let's start with our input function, input",
      "start": 1380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's print birth here, followed by a colon,",
      "start": 1384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and a space. Now let's get the return value and store it in a variable,",
      "start": 1388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "called birth_year.",
      "start": 1392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So as I told you before, we use an underscore to separate multiple words",
      "start": 1396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Next, we need to calculate the age, so we define another",
      "start": 1400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "variable called age, and here we do some basic math,",
      "start": 1404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "currently we are in 2019, so let's write an expression",
      "start": 1408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like this. 2019 - birth",
      "start": 1412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "year. Now finally let's print",
      "start": 1416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "age on the terminal. Let's run our program and see what happens.",
      "start": 1420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, my birth year is 1982, enter,",
      "start": 1424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "oops, we got an error, what is going on here? So",
      "start": 1428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "whenever you see this message, that means there is something wrong with your program. With the information",
      "start": 1432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here, we can find exactly where the error occurred. So,",
      "start": 1436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "next to the file you can see the file that generated this error, in this case",
      "start": 1440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that is app.py. So",
      "start": 1444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "currently our program only has a single file, but real complex programs often",
      "start": 1448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have hundreds or even thousands of files. So in this file,",
      "start": 1452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on line 2, this is where we got this error, and right",
      "start": 1456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "below that we can see the piece of code that generated this error.",
      "start": 1460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So that is where we're calculating the age, and right below",
      "start": 1464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that you can see the type of error. In this case, we have a type error, and here's the",
      "start": 1468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "message. Unsupported operand types for",
      "start": 1472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "subtraction. Int and str.",
      "start": 1476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So int is short for integer and that represents a whole number",
      "start": 1480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and str is short for string, so here we're subtracting",
      "start": 1484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a string from an integer, and Python doesn't know what to do with it.",
      "start": 1488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let me explain. So I'm going to close the terminal window. So after",
      "start": 1492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the first line we executed we have this birth year variable set",
      "start": 1496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to a string, so whatever we type in the terminal is always",
      "start": 1500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "treated as a string, even if you type the number, in other words,",
      "start": 1504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when we run this program, this birth year variable will be set",
      "start": 1508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to a string, with four characters.",
      "start": 1512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1982. This string is different from the actual number",
      "start": 1516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1982. One is an integer and the other is a string.",
      "start": 1520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Right? So, back to line 2, where this",
      "start": 1524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "error occurred. At run time, which means when we run our program",
      "start": 1528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this expression on the right side of the assignment operator",
      "start": 1532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is going to look like this. 2019 -",
      "start": 1536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "string 1982. Python doesn't know how to",
      "start": 1540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "interpret or how to evaluate this expression. To fix this problem",
      "start": 1544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to convert this 1982 into an integer",
      "start": 1548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then we'll be able to subtract it from 2019 and that",
      "start": 1552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is easy. So far you have learned about two built in functions",
      "start": 1556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one is print the other is input. We have a few other functions",
      "start": 1560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for converting values into different types. So we have",
      "start": 1564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "int for converting a string into an integer, we also have",
      "start": 1568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "float for converting a string into a float, or a number",
      "start": 1572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with a decimal point. And we also have bool for converting a string",
      "start": 1576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "into a  boolean value. So to fix this problem,",
      "start": 1580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to go back on line 2,",
      "start": 1584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and pass this birth year variable to the int function like this.",
      "start": 1588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "int parenthesis, like this",
      "start": 1592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we pass this string to the int function, int will convert it into an itneger",
      "start": 1596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then Python interpreter will be able to evaluate this expression.",
      "start": 1600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now let's run this program one more time, so birth",
      "start": 1604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "year is 1982 enter so I am",
      "start": 1608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "37 years old. In Python we have a useful function",
      "start": 1612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for getting the type of variables, for example, let's print the type",
      "start": 1616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of birth year, so right after line 1,",
      "start": 1620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's print, now here we're going to call another built in function,",
      "start": 1624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "called type, and now let's pass birth",
      "start": 1628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "year, okay, now similarly after line",
      "start": 1632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3, let's also print the type of age, so",
      "start": 1636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print type of age.",
      "start": 1640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay? So let's run our program, so birth year one more",
      "start": 1644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "time, 1982, okay, here's the result",
      "start": 1648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so the type of birth year as you can see is a class",
      "start": 1652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of str or strings, we look at classes in the future so",
      "start": 1656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for now don't worry about them, and also below them you cans ee the type of",
      "start": 1660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the age variable is int or integer. So",
      "start": 1664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here's what you need to take away. Whenever you use the input function,",
      "start": 1668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you always get a string, so if you're expecting a numerical value",
      "start": 1672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you should always convert that string into an integer or",
      "start": 1676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a float. So here's a little exercise for you. I want you to write a program",
      "start": 1680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ask the user their weight and then convert it to kilograms and print it",
      "start": 1684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on a terminal. So pause the video, do the exercise and when you're ready come back",
      "start": 1688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to watch it.",
      "start": 1692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright so let's use our input function and ask",
      "start": 1696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for the weight in pounds",
      "start": 1700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here we get the weight in lbs or pounds",
      "start": 1704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we need to convert this into kilograms, it's very easy so",
      "start": 1708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we defined another variable weight_kg",
      "start": 1712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we set this to weight_lbs",
      "start": 1716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "times 0.45.",
      "start": 1720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And finally let's print weight underline",
      "start": 1724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "kg. Let's run this Python program and see what happens. So",
      "start": 1728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "my weight is 160, alright once again we got an error,",
      "start": 1732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "can't multiply sequence by non int of type",
      "start": 1736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "float. So as I told you before, this input function returns",
      "start": 1740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a string, so we cannot multiply a string by a float.",
      "start": 1744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python doesn't know what to do with it. So in this case, we should convert this number",
      "start": 1748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "by an integer or float and then multiply by 0.45.",
      "start": 1752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let's call the int function.",
      "start": 1756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And pass weight underline lbs.",
      "start": 1760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And run our program one more time, 160",
      "start": 1764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "okay, so I am 72 kg's.",
      "start": 1768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial, you're going to learn more about Python strings.",
      "start": 1776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So I've defined this course variable and set it to Python for beginners",
      "start": 1780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now earlier I told you you could use both single and double quotes",
      "start": 1784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to define a string, but there are times you have to use a specific form,",
      "start": 1788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "otherwise you're going to run into issues. Here's an example. Imagine you wanted to",
      "start": 1792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "change this string into Pythons course for Beginners.",
      "start": 1796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we want to add an apostrophe, like this,",
      "start": 1800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Course for Beginners. You can immediately say this is going",
      "start": 1804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "crazy, because our string starts here and then terminates here,",
      "start": 1808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all these characters that we have here after the second apostrophe",
      "start": 1812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python interpreter doesn't know what they are. So to solve this problem",
      "start": 1816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to use double quotes to define our string so we can have",
      "start": 1820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a single quote in the middle of the string. So let's change this",
      "start": 1824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to double quotes, now you can see it adds another double quote to close it,",
      "start": 1828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you have to manually remove this, and also one more time",
      "start": 1832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "at the beginning of the string, we need to add another double quote. Now",
      "start": 1836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you can see error is gone, so if you print course",
      "start": 1840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we see Python course for beginners.",
      "start": 1844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Beautiful. Now let's say we don't want this apostrophe here, so we have",
      "start": 1848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python for Beginners, but we want to put Beginners in",
      "start": 1852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "double quotes. Once again, if you add a double quote here Python interpreter gets",
      "start": 1856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "confused because it assumes the second double quote indicates that",
      "start": 1860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "end of the string, so it doesn't know what these characters are, so to solve this",
      "start": 1864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to change our double quotes to single quotes",
      "start": 1868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like this. And then we can add double quotes in the middle",
      "start": 1872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of the string. Now let's run this program, there you go.",
      "start": 1876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we get Python for Beginners. So these are the cases",
      "start": 1880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for using single or double quotes. Now in all the examples",
      "start": 1884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I've shown you so far we only deal with short strings, but what if you wanted to define",
      "start": 1888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a string that is multiple lengths? For example, what if you wanted to define a string",
      "start": 1892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for the message that we send in an email. In that case we need to use",
      "start": 1896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "triple quotes. So. We delete this.",
      "start": 1900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now we add three quotes, so 1, 2, 3, there you go,",
      "start": 1904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we have three quotes to start our string and three",
      "start": 1908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to terminate it. Again these quotes can be single or double quotes.",
      "start": 1912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay? Now, with this we can define a string that spans",
      "start": 1916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "multiple lines. For example, we can say Hi Jon",
      "start": 1920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here is our first email to you. Thank you,",
      "start": 1924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The Support Team. Like that.",
      "start": 1928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, let's run this program and here's the",
      "start": 1932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "result. So, we get this beautiful multi line",
      "start": 1936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "string. Now let's change this back to something simple",
      "start": 1940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, we can look at other characteristics of strings and Python.",
      "start": 1944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So I'm going to use single quotes and set the course name to Python",
      "start": 1948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for Beginners. Now here we're going to use square",
      "start": 1952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "brackets to get a character and a given index in this string.",
      "start": 1956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let me show you. So to get the first character we use square brackets",
      "start": 1960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and type 0. So the index of the first character",
      "start": 1964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the string is 0. In other words, this is how Python",
      "start": 1968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "strings are indexed. 0, 1, 2, 3, 4, etc.",
      "start": 1972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So the index of the first character is 0, the second character is",
      "start": 1976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1, and so on. So let me delete this and run this program",
      "start": 1980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get p. We can also use a negative",
      "start": 1984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "index here. And this is one of the features that we don't have in other programming languages",
      "start": 1988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as far as I know. So we have negative index we can get the characters",
      "start": 1992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "started from the end. So if I pass negative 1 here,",
      "start": 1996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Assuming that 0 is the index of the first character",
      "start": 2000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "negative 1 is the index of the last character. So when we run",
      "start": 2004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this program we should see s. Let's run it, there you go,",
      "start": 2008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get s, if we pass negative 2, this will return",
      "start": 2012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the second character from the end. Let's run it one more time,",
      "start": 2016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we get R because that is the second character from the end.",
      "start": 2020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay? So place close attention to this square brackets syntax",
      "start": 2024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "because quite often it's the topic for online Python tests",
      "start": 2028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or university exams, so if you're preparing for a python test,",
      "start": 2032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "make sure to watch this tutorial one more time and understand exactly how",
      "start": 2036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this square brackets syntax works, we can also use a similar",
      "start": 2040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "syntax to extract a few characters instead of 1 character.",
      "start": 2044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example, if we type 0,",
      "start": 2048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "colon 3, Python interpreter will return all the characters",
      "start": 2052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "starting with this index all the way to this",
      "start": 2056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "second index, but it does not return the character at this index.",
      "start": 2060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In other words, back to these indexes",
      "start": 2064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so you have 0, 1, 2, 3, and so on. When you run this program.",
      "start": 2068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python interpreter will return the characters starting from the",
      "start": 2072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "index 0 all the way to index 3,",
      "start": 2076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but excludes the character and index 3,",
      "start": 2080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so when we run this Python program we're going to see pint (?). Let me show you, so we're going to",
      "start": 2084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "delete this line, run this program, there you go.",
      "start": 2088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We get pint. Now here we also have default values for",
      "start": 2092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the start and end index. So if we don't supply",
      "start": 2096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the end index, Python will return all the characters to the end of the string.",
      "start": 2100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's take a look. So run this program, there you go,",
      "start": 2104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python for Beginners. But if you change the start index to 1,",
      "start": 2108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this will exclude the first character so when we",
      "start": 2112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run this program, we see ython so p is removed.",
      "start": 2116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay? Now similarly we have a default value for the",
      "start": 2120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "start index, so if we don't supply the start index",
      "start": 2124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but add an end index like 5. Python interpreter will assume",
      "start": 2128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "0 as the start index, so, let's run",
      "start": 2132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this program, there you go, we get pytho.",
      "start": 2136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now what if we leave both the start and end",
      "start": 2140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "index? Well, I told you? Now in this case 0 will be assumed",
      "start": 2144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as the start index, and the length of the string will assume",
      "start": 2148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as the end index. So with this syntax, you can basically copy",
      "start": 2152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or clone a string. In other words, if I define",
      "start": 2156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another variable here, let's call it another and set it to course",
      "start": 2160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "square brackets with just a colon, now this expression will",
      "start": 2164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "return all the characters in the course variable so",
      "start": 2168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "variable will be copy of our first variable. Let's take a look, so,",
      "start": 2172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's print another, and load our",
      "start": 2176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program there you go, we get Python for beginners. So once again",
      "start": 2180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the square bracket syntax is pretty important if you're preparing for online",
      "start": 2184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python tests, or college exams, make sure to watch this tutorial again.",
      "start": 2188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now here's a little exercise for you. I'm going to delete all this code",
      "start": 2192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "define a variable, called name, and set it to Jennifer.",
      "start": 2196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now when we print name",
      "start": 2200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of 1: negative 1",
      "start": 2204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what do you think we're going to see on the terminal? I want you to use your knowledge",
      "start": 2208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to tell what we're going to see on the terminal, we're now running this program. So",
      "start": 2212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pause the video, think about it for a few seconds, then come back and continue watching.",
      "start": 2216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this expression will return the characters starting from",
      "start": 2224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "index 1 which is the second character",
      "start": 2228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the way to the first character from the end, but excluding",
      "start": 2232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the character at this index. In this case, the first character from the",
      "start": 2236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in is r, so r will be excluded, in other words we're going to see",
      "start": 2240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the characters starting from e all the way",
      "start": 2244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to the second e. Let's take a look. So I'm going to run this program",
      "start": 2248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go. This is what we get,",
      "start": 2252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I hope you guessed it right.",
      "start": 2256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial, we're going to look at",
      "start": 2260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "formatted strings in Python programming language. Formatted strings are",
      "start": 2264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "particularly useful in situations where you dynamically generate some",
      "start": 2268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "text with your variables. Let me show you. Let's say we have two variables",
      "start": 2272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first name and last name. So first we set this to",
      "start": 2276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "John, and last we set this to Smith. Now it's better",
      "start": 2280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to call these variables first name and last name, because they're more",
      "start": 2284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "descriptive. But here I'm using shorter names because I want you to see the entire code on display",
      "start": 2288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "screen. So let's say with these two variables, we want to generate",
      "start": 2292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "some text like this. Jon, in square brackets",
      "start": 2296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Smith is a coder. Let's say we want to print this on",
      "start": 2300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the terminal. How do we do this? Well, we define another variable",
      "start": 2304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like message, now here we add the first name,",
      "start": 2308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we need to concatenate this, with a string that contains a space",
      "start": 2312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and a square bracket next we need to add a last name,",
      "start": 2316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we need to add a string that contains",
      "start": 2320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the closing square brackets followed by is a coder",
      "start": 2324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "okay? So, then,",
      "start": 2328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you print message and run this program",
      "start": 2332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to see John Smith is a coder, right? Now,",
      "start": 2336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "while this approach perfectly works, it's not ideal",
      "start": 2340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "because as our text gets more complicated it becomes harder to",
      "start": 2344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "visualize the output. So someone else reading this code, they have to",
      "start": 2348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "visualize all the string concatenations in their head. This is where we use",
      "start": 2352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "formatted strings, they make it easier for us to visualize the output. So,",
      "start": 2356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I'm going to define another variable, let's say",
      "start": 2360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "msg short for message, and set this to a formatted string. A formatted",
      "start": 2364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "string is one that is prefixed with an f. So f,",
      "start": 2368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "quotes. Now in between the quotes, first we want to add",
      "start": 2372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the value of the first name variable, so,",
      "start": 2376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we add curly braces and here we type first.",
      "start": 2380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Next we add a space, we add our square brackets, in between the square",
      "start": 2384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "brackets, we want to display the last name so once again we add curly",
      "start": 2388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "braces, and type last, and finally here we type",
      "start": 2392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is a coder. So this is what we call the formatted",
      "start": 2396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "string. With these curly braces, we're defining place holders",
      "start": 2400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or holes in our string, and when we run our program these holes",
      "start": 2404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will be filled with the value of our variables. So here we have two place holders",
      "start": 2408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or two holes in our string. One is for the value of our first name",
      "start": 2412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "variable and the other is for the value of the last name variable.",
      "start": 2416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But compare this formatted string with string",
      "start": 2420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "concatenation. With this formatted string we can easily visualize",
      "start": 2424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what the output looks like, right? Now let's print this other",
      "start": 2428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "terminal to make sure we get the same exact output. So, let's print message",
      "start": 2432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go. So Jon",
      "start": 2436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Smith is a coder. So to define formatted strings,",
      "start": 2440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "prefix your strings with an F and then use curly braces",
      "start": 2444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to dynamically insert values into your strings.",
      "start": 2448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this Python tutorial, I'm going to show you some really cool things you can do with Python",
      "start": 2456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "strings. So let's start by defining a variable,",
      "start": 2460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "course and we set that to Python for",
      "start": 2464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "beginners. Now to calculate the number",
      "start": 2468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of characters in this string, you can use a built in function called len.",
      "start": 2472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So len we give it this course variable, and then,",
      "start": 2476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can print the result. Let's run this program,",
      "start": 2480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so as you can see we have 20 characters in this string, this is",
      "start": 2484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "particularly useful when you receive input from the user. For example you have",
      "start": 2488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "noticed that when you fill out a form online, each input field",
      "start": 2492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "often has a limit. For example, you might have 50 characters for your name,",
      "start": 2496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so using this len function we can enforce a limit on the number of characters",
      "start": 2500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in an input field. If the user types in more characters than we allow,",
      "start": 2504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can display an error, now, this,",
      "start": 2508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "len function is another function built into Python, it's",
      "start": 2512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a general purpose function, so it's not limited to counting the number of characters in a",
      "start": 2516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "string, in the future when we look at lists, I want to show you that we can use this",
      "start": 2520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "function to count the number of items in a list. So it's a general purpose",
      "start": 2524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "function. Now we also have functions specifically for strings",
      "start": 2528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for example we have functions for converting all these characters to upper case",
      "start": 2532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or lower case. To access these functions we use the dot operator.",
      "start": 2536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let me show you. So first we type course,",
      "start": 2540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then dot look these are all the functions",
      "start": 2544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that are specific to strings. Now in more accurate terms,",
      "start": 2548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you refer to these function as methods, this is a term",
      "start": 2552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in object oriented programming that we want to look at in the future, but for now, what I want you to take away,",
      "start": 2556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is that when a function belongs to something else, or is specific",
      "start": 2560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to some kind of object, we refer to that function as a method.",
      "start": 2564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example, here we have this function, upper, for converting the string",
      "start": 2568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "into upper case, now more accurately because this function",
      "start": 2572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is specific to a string, we refer to this as a method. In contrast",
      "start": 2576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "len and print are general purpose functions, they don't belong",
      "start": 2580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to strings or numbers or other kinds of objects.",
      "start": 2584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is the difference between functions and methods. Now let's take  look at this",
      "start": 2588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "upper method. So, let's print the results",
      "start": 2592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and we run our program, there you go,",
      "start": 2596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you get all these characters displayed in uppercase. Now note this method",
      "start": 2600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "does not change or modify our original string, in fact",
      "start": 2604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it creates a new string and returns it. So,",
      "start": 2608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if we print our course variable right after we",
      "start": 2612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call the upper method, we can see that our course variable still",
      "start": 2616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "has it's original form, so let's run this program one more time, there you",
      "start": 2620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "go. Look, here is our original course variable, it's not modified.",
      "start": 2624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now similar to the upper method we have another method",
      "start": 2628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for converting a string into lower case. So let me show you.",
      "start": 2632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Print, course.lower.",
      "start": 2636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, let's run the program, so on the second line you can see,",
      "start": 2640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all characters are in lower case. Now there are times",
      "start": 2644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that you want to find a character or a sequence of characters in a string.",
      "start": 2648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In those situations you can use the find method. So let me delete",
      "start": 2652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these few lines. Call course.",
      "start": 2656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "find here we pass a character, let's say",
      "start": 2660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "p, and this will return the index of the first occurrence",
      "start": 2664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of that character, let me show you. So let's print the result",
      "start": 2668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get 0, because the",
      "start": 2672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "index of the first capital p in the string is 0.",
      "start": 2676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "As another example, if we pass a lower case o here,",
      "start": 2680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's see what we get, we get 4 because",
      "start": 2684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the index of this o here is 4. Now note that the",
      "start": 2688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "find method is case sensitive, so it's sensitive to",
      "start": 2692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "lower case and and upper case characters. As an example if you pass an upper case",
      "start": 2696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here and run this program, we get negative 1 because",
      "start": 2700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we don't have an upper case o anywhere in this string, okay?",
      "start": 2704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can also pass a sequence of characters, for example, we can pass",
      "start": 2708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "beginners with a capital B",
      "start": 2712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's run this program, we get 11 because",
      "start": 2716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "beginners starts with index 11, now we",
      "start": 2720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "also have method for replacing a character or a sequence of characters",
      "start": 2724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and that is called replace. So let's change find",
      "start": 2728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to replace let's say we want to replace beginners with",
      "start": 2732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "absolute beginners, so we add a comma to pass a second value",
      "start": 2736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to this function, or more accurately this method. We add a string,",
      "start": 2740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here I'm going to pass absolute beginners.",
      "start": 2744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay, now let's run this program,",
      "start": 2748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, we get python for absolute beginners.",
      "start": 2752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Again, this method like the find method is case sensitive so",
      "start": 2756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you pass beginners all in lowercase, this method is",
      "start": 2760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "not going to find this exact word in our string, so it's not going to",
      "start": 2764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "place it with absolute beginners. Let's take a look. So I'm going to run the program",
      "start": 2768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "One more time, look, we still get python for beginners.",
      "start": 2772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can also replace a single character, for example we can replace",
      "start": 2776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "capital p with let's say capital",
      "start": 2780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "j. Now when we run this program we get",
      "start": 2784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "jython for beginners. So these are the find and replace methods",
      "start": 2788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and one last things I want to show you in this tutorial. There are",
      "start": 2792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "times that you want to check the existence of a character or sequence of characters in your",
      "start": 2796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "string. In those situations you use the in operator,",
      "start": 2800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so let's say you want to know if this string contains the word python.",
      "start": 2804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can write an expression like this. String",
      "start": 2808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python space in space course.",
      "start": 2812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we're checking to see if python is in",
      "start": 2816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "course variable. And this is an expression that produces a boolean",
      "start": 2820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "value, and I get true or false, so we refer to this expression",
      "start": 2824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as a boolean expression, now if we print this on the terminal,",
      "start": 2828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we should get true, and by the way",
      "start": 2832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I'm going to delete the second line, we don't need it anymore, so run the program",
      "start": 2836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get true, but if I change this capitol p to a lower case",
      "start": 2840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "p and run the program we get false because we don't have",
      "start": 2844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is exact sequence of characters in our strings.",
      "start": 2848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now note that the difference between the in operator and the find method",
      "start": 2852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is that our find method returns the index of",
      "start": 2856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "character or sequence of characters but the in operator",
      "start": 2860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "produces a boolean value. Do we have this or not?",
      "start": 2864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So that's the difference. Now let's recap all the cool things you learned",
      "start": 2868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to do with strings in this tutorial. We can use the len function",
      "start": 2872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to count the number of characters in a string, this is the general",
      "start": 2876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "purpose function built into python, we also have specific functions",
      "start": 2880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for strings which we refer to as methods, these include",
      "start": 2884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "upper for converting a string into uppercase",
      "start": 2888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you also have lower and title methods,",
      "start": 2892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you learn about the find method which returns the index",
      "start": 2896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of a character or sequence of characters, we have",
      "start": 2900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the replace method for replacing characters and words in a string and finally",
      "start": 2904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you learned about the in operator. So some characters",
      "start": 2908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in a string.",
      "start": 2912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, you have learned that in Python programming language you have 2",
      "start": 2920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "types of numbers, integers which are whole numbers like 10, they don't have",
      "start": 2924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a decimal point, and floating point numbers or floats.",
      "start": 2928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Which are numbers with a decimal point. Now in this tutorial you're going to look",
      "start": 2932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "at the arithmetic operations supported in python language these are the",
      "start": 2936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "same arithmetic operations that we have in math, we can add numbers,",
      "start": 2940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "multiply them and so on. So let's look at a few examples,",
      "start": 2944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can print, 10 plus 3, so",
      "start": 2948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is the addition operator, we also have subtraction, we",
      "start": 2952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have multiplication, we have two kinds of division,",
      "start": 2956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here's one with a forward slash, let's run this program and see what we get.",
      "start": 2960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get a floating point number. But we also have",
      "start": 2964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another division operator for getting an integer. So",
      "start": 2968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if we add another slash here and run this program",
      "start": 2972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get an integer. We have",
      "start": 2976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another operator called modulis (?) which is a percent sign.",
      "start": 2980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And this returns the remainder of the division. So when we run this program",
      "start": 2984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we should get 1, there you go. And",
      "start": 2988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one last operator we have here is exponent which is the power.",
      "start": 2992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, that is indicated with 2 asterisks and this will return",
      "start": 2996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "10 to the power of 3. So let's run this program",
      "start": 3000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get 1000 so these are the arithmetic operators",
      "start": 3004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in python programming language. Now for all these operators that you learned",
      "start": 3008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we have an augmented assignment operator. That is",
      "start": 3012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "very useful, let me show you. So let's say we have a variable",
      "start": 3016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "called x we set it to 10, now we want to increment this by",
      "start": 3020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3, we'll have to write code like this. X we set this to",
      "start": 3024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x plus 3. So Python interpreter will add",
      "start": 3028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "10 to 3, the result is 13, and then it gets stored",
      "start": 3032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "into x again. So when we print x we should see",
      "start": 3036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "13, there you go. So this is how you can increment",
      "start": 3040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a number, right? Now augmented assignment operator is",
      "start": 3044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a way to write the same code but in a shorter form. This",
      "start": 3048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is how it works. We type x plus",
      "start": 3052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "equals 3. What we have on line 3 is exactly",
      "start": 3056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like what we have on line 2. So this is what we call",
      "start": 3060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the augmented assignment operator we have augmented or",
      "start": 3064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "enhanced the assignment operator. Now in this particular",
      "start": 3068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "case we are incremented a number using the augmented assignment operator,",
      "start": 3072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but we can also subtract or multiply a number by a given value",
      "start": 3076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for example, let's delete what we have on line 2,",
      "start": 3080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can type subtract equals 3. So here we",
      "start": 3084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "subtracted 3 from x. When we run this program we should see 7,",
      "start": 3088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go.",
      "start": 3092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now let me ask you a question, I'm going to clear all this code here to",
      "start": 3100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "define x and set it to 10 plus 3",
      "start": 3104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "times 2. What do you think is the result of this expression?",
      "start": 3108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is a very basic math question that unfortunately a lot of people fail to answer.",
      "start": 3112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The answer is 16. Because in math we have this",
      "start": 3116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "concept called operator precedence which means the order of",
      "start": 3120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "operations. So the multiplication operator has",
      "start": 3124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a higher precendence which means it's applied first which means 3 x",
      "start": 3128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2 is executed first, the result is 6 and then",
      "start": 3132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "its added to 10, that's why x showed up as 16 after",
      "start": 3136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we run this code, let's verify that. So, print x",
      "start": 3140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run the program, x is 16. So this is what we call",
      "start": 3144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "operator precedence, it's just a basic math concept.",
      "start": 3148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "It's not about python programming language. So all the other programming languages",
      "start": 3152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "behave the same way, so here's the order, first we have",
      "start": 3156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the exponentiation which is the power, like 2 to the power of 3,",
      "start": 3160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we have multiplication or division",
      "start": 3164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and finally we have addition or subtraction.",
      "start": 3168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This is the order of operations. Let me show you another example.",
      "start": 3172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Here I'm going to add the exponentiation operator, so,",
      "start": 3176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2 to the power of 2. Once again, what do you",
      "start": 3180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "think is the result of this expression? Pause the video and think about it for a few seconds.",
      "start": 3184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The answer is 22.",
      "start": 3188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Because the exponentiation operator takes precedence, so first",
      "start": 3192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2 to the power of 2 is executed, the result is 4,",
      "start": 3196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then 4 is multiplied by 3, that is 12,",
      "start": 3200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and finally 12 is added to 10. So x should be 22.",
      "start": 3204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let's run this program and verify this. So I'm going to",
      "start": 3208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "delete these lines here. Run the program, there you go. X",
      "start": 3212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is 22. Now let me bring back these rules here.",
      "start": 3216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can also use parenthesis to change the order of operations",
      "start": 3220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so if we have parenthesis we always",
      "start": 3224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "takes priority. In this case we can add parenthesis",
      "start": 3228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "around 10 + 3, so this piece of 3 will be",
      "start": 3232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "executed first, the result is 13, then the exponentiation",
      "start": 3236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "operator will be executed, so 2 to the power of 2 is 4,",
      "start": 3240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and finally 4 is multiplied by 13.",
      "start": 3244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now here is a little exercise for you. I'm going to set x to",
      "start": 3248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "parenthesis 2 + 3 x 10 minus",
      "start": 3252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3. What is the result of this? Pause the video and think about it for a few seconds.",
      "start": 3256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So you learned that parenthesis always",
      "start": 3264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "overrides the order, so this piece of code is executed first. The result",
      "start": 3268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of these 5. Then, between the multiplication and",
      "start": 3272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "subtraction, you know that multiplication takes precedence.",
      "start": 3276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So next, 5 will be multiplied by 10, the result is",
      "start": 3280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "50 and finally we have subtraction. So 50 minus",
      "start": 3284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3 will be 47. Let's verify this, print",
      "start": 3288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x, run the program there you go, I hope you guessed it right.",
      "start": 3292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is all bout operator precedence, it's a very important topic",
      "start": 3296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and I see it quite often in Python tests. So if you're preparing for a Python test",
      "start": 3300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "make sure to watch his tutorial one more time.",
      "start": 3304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial, we're going to look at a few useful functions for working with numbers",
      "start": 3312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's start by defining a variable like x and set it to 2",
      "start": 3316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".9. Now to round this number we can use the built in",
      "start": 3320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "round function, so we call the round function, give it x,",
      "start": 3324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then print the result. Let's run this program",
      "start": 3328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, we get 3, we have another useful built in function called",
      "start": 3332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "abs which is short for absolute, and this is the absolute function",
      "start": 3336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we have in math, we give it a value and it always returns",
      "start": 3340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the positive representation of this value, even if the value is negative.",
      "start": 3344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Here's an example. Let's call the abs function",
      "start": 3348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and give it negative 2.9 When we run this program",
      "start": 3352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're gong to see 2.9 on the terminal. So let's go ahead",
      "start": 3356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go. So absolute always returns a positive number.",
      "start": 3360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But technically in Python we have a handful of built in functions for performing",
      "start": 3364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "mathematical operations, if you want to write a program that involves complex",
      "start": 3368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "mathematical calculations, you need to import the math module.",
      "start": 3372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "A module in Python is a separate file with some reusable",
      "start": 3376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code. We use these modules to organize our code into different",
      "start": 3380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "files. As a metaphor think of a super market. When you go to a super market",
      "start": 3384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you see different sections for fruits and vegetables, cleaning products,",
      "start": 3388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "junk food and so on. Each section in the super market is like a module",
      "start": 3392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in Python. So in Python we have this math module which contains a bunch",
      "start": 3396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of rustable functions for performing mathematical calculations.",
      "start": 3400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let me show you how to use this module. On the top",
      "start": 3404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we type import, math, all in  lowercase",
      "start": 3408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with this we can import the math module. now math is",
      "start": 3412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an object like a string, so we can access it's functions or more accurately",
      "start": 3416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's methods using the dot operator. So if you type",
      "start": 3420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "math. look these are all the mathematical",
      "start": 3424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "functions available in this module. For example you can call the",
      "start": 3428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "seal method to get the sealing of a number. So if you pass 2.9 here",
      "start": 3432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then print the result we should see 3.",
      "start": 3436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let me delete all this other code here. Alright, let's run this program",
      "start": 3440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go. So we get 3. Another useful method is the",
      "start": 3444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "floor method, so let's give that a try, floor of 2.",
      "start": 3448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "9. What do you think we're going to get? We get",
      "start": 3452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2. Now there are so many functions built in this module and we don't really have time",
      "start": 3456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to go through all of them. But let me show you how we can learn about them on your own.",
      "start": 3460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Open up your browser and search for Python 3",
      "start": 3464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "math module. Make sure to add the version python 3.",
      "start": 3468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Because the math module in python 2 is slightly different from the math module in",
      "start": 3472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python 3. So python 3 math module,",
      "start": 3476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now here you can see the documentation of this kind of module",
      "start": 3480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's go let's have a look, if you scroll down,",
      "start": 3484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can see the list of all the functions and their explanation.",
      "start": 3488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So as an exercise I encourage you to have a quick look at this",
      "start": 3492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "documentation. See what functions are there for you in case you need them.",
      "start": 3496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial, I'm going to talk to you about if statements in Python",
      "start": 3504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if statements are extremely important in programming and they",
      "start": 3508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "allow us to build programs that can make decisions based on some condition.",
      "start": 3512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So if some conditions are true we're going to do certain things, otherwise we're going to do other",
      "start": 3516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "things. Here's an example. Over here I've got this text file with",
      "start": 3520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a bunch of rules for our program. If it's a hot day, perhaps we want to",
      "start": 3524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tell the user it's a hot day, so make sure to drink plenty of water.",
      "start": 3528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Otherwise, if it's cold, so here's another condition",
      "start": 3532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if this condition is true we're going to tell the user it's a cold day",
      "start": 3536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so where warm clothes. And otherwise if it's",
      "start": 3540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "either hot or cold, we want to tell the user it's a lovely day.",
      "start": 3544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let me show you how to write a program that simulates these rules. So,",
      "start": 3548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "back to our program here, we start by defining a boolean variable",
      "start": 3552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is underline hot. We set this to true.",
      "start": 3556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Next, we add an if statement, so if, here",
      "start": 3560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to add a condition, in this case we're going to use our boolean variable. So,",
      "start": 3564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is underline hot. So if this values to true.",
      "start": 3568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Then we're going to do certain things. In this case, we want to tell the user",
      "start": 3572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "hey it's a hot day, drink plenty of water. So, back to our program",
      "start": 3576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "after our condition we add a colon, now,",
      "start": 3580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "note that when I press enter pycharm automatically indents",
      "start": 3584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our cursor. Now any code that we write here will be executed",
      "start": 3588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if this condition is true, otherwise it will be ignored. Here",
      "start": 3592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is an example. Let's write a print statement, here I'm going to use",
      "start": 3596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "double quotes because I want to use an apostrophe in our string. So,",
      "start": 3600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's a hot day. Now let's press enter",
      "start": 3604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you can see the cursor is still indented, that means we can write more code",
      "start": 3608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that we executed if this condition is true, in this case let's say we don't want to",
      "start": 3612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "write any extra code, so to terminate this block",
      "start": 3616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to press shift and tab, now the cursor is at the beginning of the line",
      "start": 3620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so lets write a print statement with a message like",
      "start": 3624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "enjoy your day. Now when we run this program, because",
      "start": 3628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this condition is true, you're doing to say this message followed by",
      "start": 3632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this second message, take a look, so run, there you go, it's a hot day",
      "start": 3636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "enjoy your day. But if I go over here and",
      "start": 3640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "change this boolean value to false and run the program again, our",
      "start": 3644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first message disappears and we only see the second message, enjoy",
      "start": 3648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "your day. So this is how if statements work. Now back",
      "start": 3652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here we can add another print statement let's say",
      "start": 3656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "drink plenty of water.",
      "start": 3660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now because this spirant statement is also indented it will be",
      "start": 3664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "executed if this condition is true. So I'm going to revert is hot to true",
      "start": 3668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and run the program one more time. There you go, so",
      "start": 3672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's a hot day, drink plenty of water, and enjoy your",
      "start": 3676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "day. Alright now let's add a second rule here, if",
      "start": 3680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's hot we're going to execute these two lines, otherwise if it's not hot",
      "start": 3684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we want to print a different message. So here",
      "start": 3688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we are moving an indentation and typing els",
      "start": 3692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "colon. Now when we press enter once again our cursor",
      "start": 3696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "indented so the code that we write here will be executed if this",
      "start": 3700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "condition is not true. So here we can print",
      "start": 3704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's a cold day, print,",
      "start": 3708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "where warm clothes.",
      "start": 3712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now let's run our program one more time. So we get the message",
      "start": 3716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "about a hot day followed by enjoy your day. You don't see any message",
      "start": 3720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "about a cold day. Now if we go back here on the top.",
      "start": 3724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And change this boolean value to false and run our program",
      "start": 3728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we see different set of messages. It's a cold day",
      "start": 3732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "wear warm clothes and enjoy your day. But there's a problem with",
      "start": 3736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our program. If it's not hot it doesn't necessarily mean that it's cold, it means",
      "start": 3740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's a lovely day. So the absence of heat doesn't mean its cold.",
      "start": 3744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Back to our conditions, here on line 4 we have this rule that says",
      "start": 3748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if it's a cold day, then print these messages",
      "start": 3752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "otherwise if it's neither hot or cold say it's a lovely day.",
      "start": 3756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, to implement this rule we need to go back and put",
      "start": 3760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "py and define another variable. So let' say",
      "start": 3764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is underline cold we set this to",
      "start": 3768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "true. Now here we need to add a second condition. So after",
      "start": 3772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our first if statement, we can use an el if statement",
      "start": 3776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to define a second condition. So here's how it works. So,",
      "start": 3780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "el if which is short for els if or",
      "start": 3784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "otherwise if, now here we add another condition, so,",
      "start": 3788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is cold So if t's cold you want to",
      "start": 3792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "execute these few lines. So let's cut these",
      "start": 3796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from here, and move them under our second condition",
      "start": 3800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and finally if none of these conditions are true,",
      "start": 3804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you want to print a different message. It's a lovely",
      "start": 3808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "day. So, right now,",
      "start": 3812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is hot is false, is cold is true,",
      "start": 3816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so when we run this program, python interpreter is going to execute the first",
      "start": 3820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if statement, in this case because our condition is false, these two",
      "start": 3824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "lines will be ignored, then Python interpreter will look at",
      "start": 3828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "line 7, it will evaluate this condition, in this case is",
      "start": 3832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "cold is true so we're going to see these two messages on the terminal.",
      "start": 3836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, in this case, because one of these conditions was true, this els statement",
      "start": 3840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will be ignored, so we are not going to see this message, and finally",
      "start": 3844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as before, we are always going too see this message. So let's run our",
      "start": 3848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program, there you go. it's a cold day,",
      "start": 3852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "where warm clothes and and enjoy your day. Now,",
      "start": 3856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "back to the top, if we change is cold",
      "start": 3860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to false it's neither hot nor cold so it's going to be a lovely day.",
      "start": 3864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's run the program, and here you go, it's a lovely day",
      "start": 3868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "enjoy your day. So these are the basics of using if",
      "start": 3872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "statements. As you can see they are very useful in programming and with these",
      "start": 3876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can build all kinds of rules into our programs. Okay here's an",
      "start": 3880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "exercise or you. Imagine the price of a house is 1 million dollars.",
      "start": 3884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now if the buyer has good credit, they will need to put down 10 percent",
      "start": 3888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of the price of this property otherwise they need to put down 20 percent",
      "start": 3892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "write a program with these rules an display the down payment",
      "start": 3896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "card for a buyer with good credit. You will see my solution",
      "start": 3900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "next.",
      "start": 3904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright let's define a variable for the price of this house so price",
      "start": 3908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we set this to 1 million so 1 with 6 0s.",
      "start": 3912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Next we need a variable to tell if this buyer has good credit",
      "start": 3916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so has good credit,",
      "start": 3920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and we set this to true, now we need an if statement",
      "start": 3924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so if has good credit has true",
      "start": 3928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "colon, here we need to calculate a down payment so",
      "start": 3932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the down_payment should be equal to",
      "start": 3936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "0.1 x the price. That is 10 percent of the price of this",
      "start": 3940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "property. Otherwise colon",
      "start": 3944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the down payment should be 0.2",
      "start": 3948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "times price. Now finally we remove the",
      "start": 3952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "indentation and print here we can use a form",
      "start": 3956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of valid string, first we add a label, down payment",
      "start": 3960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "colon and right after that we add a placeholder",
      "start": 3964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or a hole for our down payment variable. So curly braces",
      "start": 3968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "down payment. Let's run this",
      "start": 3972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program, so down payment for a buyer with good credit",
      "start": 3976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is 100,000 dollars. Now let's improve this by adding a",
      "start": 3980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "dollar sign before this number. So back to our formatted string,",
      "start": 3984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "just before the curly brace I'm going to add a dollar sign let's",
      "start": 3988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run this one more time, that is better.",
      "start": 3992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to talk to you about the logical operators within Python.",
      "start": 4000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We use these operators in situations where we have multiple",
      "start": 4004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "conditions. Here is an example. Let' say we're building an application for",
      "start": 4008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "processing loans. If an applicant has high income",
      "start": 4012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and good credit, then they're eligible",
      "start": 4016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for a loan. So in this example we have two conditions, one is having",
      "start": 4020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "high income and the other is having good credit. So if both",
      "start": 4024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these conditions are true, then the applicant is eligible for a loan.",
      "start": 4028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is where we use the logical and operator.",
      "start": 4032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We use this operator to combine two conditions, and by the way",
      "start": 4036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is not specific to python programming language, pretty much any programming language",
      "start": 4040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that supports if statements also supports the logical operators.",
      "start": 4044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, back to our program, let's define two variables,",
      "start": 4048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "has high income, we set this to true.",
      "start": 4052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And another one has good",
      "start": 4056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "credit, we also set this to true, now our if statement",
      "start": 4060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if has high income has true,",
      "start": 4064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and has good credit is also true,",
      "start": 4068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we're going to print eligible",
      "start": 4072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for null. So this is where",
      "start": 4076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're using the and operator. So if both these conditions are true",
      "start": 4080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then this message will be printed. If one of them is false, we're not going to see",
      "start": 4084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this message. Let's try this out. So I'm going to run this program",
      "start": 4088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we see it eligible for loan, but if we change",
      "start": 4092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "either of these conditions to false, and run the program again",
      "start": 4096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "look, the message disappears.",
      "start": 4100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is the logical and operator. We also have the",
      "start": 4104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "logical or, and we want to use that in situations where we want to do certain things",
      "start": 4108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "at least one of the conditions is true, for example let's change",
      "start": 4112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the rule for this program, such that if the applicant has high income,",
      "start": 4116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or good credit, then they're eligible for a loan,",
      "start": 4120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so if either or both these conditions are true then the candidate is",
      "start": 4124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "eligible. Now back to our program we can",
      "start": 4128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "implement this rule by using the logical or operator. So we simply replace",
      "start": 4132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and with or, now when we run this program we're going to",
      "start": 4136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "see this message because at least one of our conditions is true,",
      "start": 4140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's take a look. So the applicant is eligible for a loan",
      "start": 4144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for a loan because they have good credit. If you change this to false",
      "start": 4148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but set the other condition to true, we still",
      "start": 4152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "see the same result, but if both these conditions are false",
      "start": 4156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we're not going to see this message anymore. So this is the difference",
      "start": 4160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "between these operators. With the logical and operator",
      "start": 4164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "both conditions should be true, with the logical",
      "start": 4168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or operator at least one condition should be true",
      "start": 4172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we also have another logical operator called not",
      "start": 4176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and that basically inverses any boolean value we give it, if we give it,",
      "start": 4180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we give it a true boolean value it converts it to false. For example",
      "start": 4184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's make up a new room, if applicant",
      "start": 4188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "has good credit and doesn't have",
      "start": 4192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a criminal record then",
      "start": 4196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "they're eligible for a loan. Let me show you how to implement this. So,",
      "start": 4200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we go back to our program, in this example we don't need a",
      "start": 4204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first variable for let's delete that. Let's set this variable to true",
      "start": 4208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we also define another variable like has criminal",
      "start": 4212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "record. We set this to false.",
      "start": 4216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, we want to check to see if this applicant has good credit and not",
      "start": 4220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a criminal record. This is where we use the not operator.",
      "start": 4224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, if they have good credit,",
      "start": 4228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and not criminal",
      "start": 4232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "record. So, in this example, has criminal",
      "start": 4236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "record is set to false, when we use the not operator this",
      "start": 4240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "basically gets changed to true, so we have two conditions that are true.",
      "start": 4244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Here's ones and here's another one. So our applicant is",
      "start": 4248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "eligible for a loan. And when we run this program we see",
      "start": 4252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this familiar message. However",
      "start": 4256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if an applicant has a criminal record, so let's change this to",
      "start": 4260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "true, now when we run this program we can see our applicant is",
      "start": 4264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "not eligible because when we apply then operator on this",
      "start": 4268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "variable, we'll get false. So true changes to false.",
      "start": 4272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And we'll end up with two conditions, one that's true",
      "start": 4276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and the other is false. And that's why this message is",
      "start": 4280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "not printed. So this is all about the logical operators in",
      "start": 4284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python.",
      "start": 4288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to talk to you guys about",
      "start": 4292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "comparison operators in Python. We use comparison operators",
      "start": 4296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in situations where we want to compare a variable with a value,",
      "start": 4300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for example, if temperature is greater than 30, then",
      "start": 4304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we want to print it's a hot day. Otherwise, if it's less",
      "start": 4308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then 10, it's a cold day, otherwise it it's neither hot",
      "start": 4312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "nor cold. And by the way I'm taking about celsius, not farenheit.",
      "start": 4316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, to build these rules into our program, we need to use comparison",
      "start": 4320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "operators. Back to app.py, I define this",
      "start": 4324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "temperature value, let's write an if statement, if temperature",
      "start": 4328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we want to check to see if this is greater than 30, so we use",
      "start": 4332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the greater than operator. If this is greater than 30,",
      "start": 4336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we want to print it's a hot day",
      "start": 4340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "otherwise, let's just print",
      "start": 4344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's not a hot day. Now,",
      "start": 4348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when we run this program, we're going to see this second message because 30",
      "start": 4352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is not greater than 30. So our first condition a value",
      "start": 4356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is to false. let's verify that. So run,",
      "start": 4360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's not a hot day. Now if you change",
      "start": 4364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the temperature to 35 and run this again,",
      "start": 4368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're going to see a different message, it's a hot day, so this is where we use",
      "start": 4372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "comparison operators. Now what we have here as you know is an expression",
      "start": 4376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "because it's a piece of code that produces a value. So more accurately this is",
      "start": 4380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a boolean expression. So this is the greater than operator,",
      "start": 4384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we also have greater than or equal to, we have",
      "start": 4388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "less then, less then or equal to,",
      "start": 4392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here's the equality operator, so if the temperature equals to 30,",
      "start": 4396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then you can say it's a hot day. Note that this is different from the assignment operator",
      "start": 4400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that has only one equals sign. You can see that if we use only one equal sign",
      "start": 4404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here we immediately get this red underline because this is simply",
      "start": 4408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an assignment statement. We're changing the value of the temperature.",
      "start": 4412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you are setting the value of",
      "start": 4416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "something else. So we don't have a boolean expression, you are not producing a",
      "start": 4420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "boolean value. Okay? So, our equality operator",
      "start": 4424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "has two equal signs and finally we have not",
      "start": 4428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "equal which is an exclamation followed by an equal sign.",
      "start": 4432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now here's an exercise for you. You have probably seen that when you fill out a",
      "start": 4436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "form online, sometimes the input fields have validation messages,",
      "start": 4440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for example, let's say we have an input field for the user to enter their name.",
      "start": 4444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now if the name is less then 3 characters wrong we want to display a validation",
      "start": 4448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "error, like name must be at least three characters,",
      "start": 4452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "otherwise, if the name is more then 50 characters long then we want",
      "start": 4456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to display a different validation error like name can be a maximum",
      "start": 4460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of 50 characters. Otherwise if the name is between 3 and 50 characters",
      "start": 4464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we just want to tell the user that name looks good.",
      "start": 4468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So go ahead, and write a plan to implement these rules.",
      "start": 4472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright let's define a variable called name and set it to",
      "start": 4480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's say j. So we're assuming this is what the user types into an input field.",
      "start": 4484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, we want to get the number of characters in this string.",
      "start": 4488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we use the len function, right? Len of name.",
      "start": 4492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "When we print this we get 1, right",
      "start": 4496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you have seen this before. Now here we want to use an if statement so",
      "start": 4500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if len of name is less then",
      "start": 4504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3, then we want to print",
      "start": 4508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "name must be at least 3 characters",
      "start": 4512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now here we need a second condition",
      "start": 4516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to check the upper limit. So el if",
      "start": 4520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "len of name is greater than 50,",
      "start": 4524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we want to print a different message, name,",
      "start": 4528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "must be a maximum",
      "start": 4532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of 50 characters.",
      "start": 4536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay? And otherwise if else",
      "start": 4540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "none of these conditions are true that means the name looks good. So,",
      "start": 4544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print, name looks good. Let's",
      "start": 4548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run our program. So in this case we get this message",
      "start": 4552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "because our name is too short. Now if you go back here and",
      "start": 4556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "type something really really long. And then",
      "start": 4560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we run our program we're going to see a different message name must be a",
      "start": 4564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "maximum of 50 characters and finally if",
      "start": 4568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we type a proper name here like John Smith",
      "start": 4572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and run our program we get name",
      "start": 4576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "looks good.",
      "start": 4580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Here's another good exercise that combines",
      "start": 4584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "many of the materials you have learned so far, so earlier you built a program to",
      "start": 4588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "convert someone's weight from pounds to kilograms. Now we want to extend this program",
      "start": 4592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and allow the user to enter their weight in either kilograms or",
      "start": 4596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pounds and then we will convert it to the other unit. Here's how our program",
      "start": 4600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is going to work. So I enter my weight in pounds so",
      "start": 4604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "100 and 60 now it's telling me if it's in pounds or",
      "start": 4608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "kilograms. So here I'm adding l to lbs or k for kilograms.",
      "start": 4612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And by the way, this program is not case sensitive so",
      "start": 4616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when I enter a capital l or lowercase l it takes",
      "start": 4620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it as pounds. Now it tells me ur set it to",
      "start": 4624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "kilos. Let's run this program one more time,",
      "start": 4628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this time I'm going to enter my weight in kilo's, so send it to",
      "start": 4632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is the weight and the unit is kilograms so k,",
      "start": 4636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and it says you are 160 pounds.",
      "start": 4640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So go ahead and spend a few minutes on this exercise, you will see my solution next.",
      "start": 4644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright first let's ask the user their weight. So we use the input",
      "start": 4652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "function, weight colon we get the return value",
      "start": 4656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and store it in the variable called weight.",
      "start": 4660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now the second question, so one more time we use the input function",
      "start": 4664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "el for pounds.",
      "start": 4668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Or k for kilograms. So,",
      "start": 4672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's get that too and store it in a variable called unit",
      "start": 4676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we need an if statement. So if unit",
      "start": 4680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "equals l then we need to convert this weight",
      "start": 4684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "into kilograms. However, with this implementation we are only allowing",
      "start": 4688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the user to enter a capitol l, if they enter a lowercase l",
      "start": 4692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this code is not going to work. So this is where we use the upper",
      "start": 4696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "method of string objects so this unit is a string because as I told you",
      "start": 4700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "before, the input function always returns a string.",
      "start": 4704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we can use the dot operator to access all it's methods or",
      "start": 4708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "functions, here we call the upper method, this",
      "start": 4712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will convert whatever the user enters to upper case and then we'll convert it",
      "start": 4716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to a capital l. Now, if this condition is true,",
      "start": 4720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we need to get the weight and multiply it by 0,",
      "start": 4724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".45 However, as you know this",
      "start": 4728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "weight is a string object, and we cannot multiply a string",
      "start": 4732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "by a floating point number, we talked about this earlier in this course.",
      "start": 4736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So first we need to convert this weight to a numerical value. So",
      "start": 4740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "right here, when we call the input function, we can get the return",
      "start": 4744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "value and pass it to the int function. So,",
      "start": 4748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we call the int function and give it",
      "start": 4752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the return value of the input function. Now, the",
      "start": 4756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in function will return an integer so we can store it in this weight",
      "start": 4760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "variable. So here's the converted weight, let's store it in",
      "start": 4764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a variable called converted,",
      "start": 4768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we print here we can use a formatted string, so",
      "start": 4772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we prefix this string with f ur",
      "start": 4776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we add curly braces to dynamically insert the value of",
      "start": 4780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "converted variable. And finally we add kilo.",
      "start": 4784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Otherwise, if the unit is kilograms.",
      "start": 4788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We need to divide the weight by 0.45. q",
      "start": 4792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, weight divided by 0.45 and",
      "start": 4800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "just to refresh your memory, this division operator returns a floating point number",
      "start": 4804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but if we use double slashes we'll get an integer.",
      "start": 4808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this case, we want to get a floating point number,",
      "start": 4812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "finally let's print a formatted string, ur",
      "start": 4816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "curly braces, converted",
      "start": 4820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pounds. Okay? Now",
      "start": 4824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's run this program and see what happens. So weight is",
      "start": 4828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "160 and lbs in",
      "start": 4832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and that equals to 72 kilos, perfect, if we run it one more time,",
      "start": 4836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and enter 72 kilos",
      "start": 4840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get 160 pounds.",
      "start": 4844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to show you how to use y loops in python. We",
      "start": 4852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use y loops to execute a block of code multiple times and there are often",
      "start": 4856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "useful in building interactive programs and games. In a future tutorial",
      "start": 4860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I'm going to show you how to build a simple game using a y loop.",
      "start": 4864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let's get started with the basics, we write a y statement",
      "start": 4868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and right after that, we type a condition followed by a colon",
      "start": 4872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as long as this condition is true the quote that we write",
      "start": 4876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this block will be repeatedly executed. Here is an example.",
      "start": 4880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can define a variable like i, as in short for",
      "start": 4884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "index and set it to 1. Now we set our condition to",
      "start": 4888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "i less than or equal to 5, so as long as I",
      "start": 4892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is less then or equal to 5, we can print i,",
      "start": 4896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on the terminal. And then we need to increment i,",
      "start": 4900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "by 1. So we set i to i plus 1. The reason",
      "start": 4904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we do this is that if we don't do this I will be 1 forever",
      "start": 4908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we'll end up with an infinite loop. Because this condition will",
      "start": 4912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "always be true. One is always less then 5, so in every iteration of this",
      "start": 4916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "loop, we increment i by 1, so at some point, i is gonna be",
      "start": 4920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "six and then that is when this condition will be false and then",
      "start": 4924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we'll jump out of this loop, okay? Now to demonstrate how everything works",
      "start": 4928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "after this loop I'm going to add a print statement",
      "start": 4932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "say done. So note that these two lines",
      "start": 4936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "are indented so they are part of the y block.",
      "start": 4940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay, now let's go ahead and run this program and see what happens. So,",
      "start": 4944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "take a look, we get the numbers 1-5 followed by",
      "start": 4948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "done. So heres how this program gets executed",
      "start": 4952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first we set i to 1 now python interpreter executes line",
      "start": 4956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2, this condition is true because i is less then 5,",
      "start": 4960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so i is printed on the terminal and then incremented by",
      "start": 4964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1. Then the control moves back to the beginning of the y loop.",
      "start": 4968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So it doesn't go to the next statement. So,",
      "start": 4972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we come back here and now we are in the second iteration. In the second iteration",
      "start": 4976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "i is 2, and because 2 is less then 5, our condition is still",
      "start": 4980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "true, so i will be printed on the terminal, and once again it will be",
      "start": 4984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "incremented by 1, so at some point i is going to be 6,",
      "start": 4988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and that's when this condition will be false so our look will",
      "start": 4992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "be terminated and this done message will be printed on the terminal.",
      "start": 4996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is the basics of y loops. Now let's make this program a little",
      "start": 5000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "bit more interesting. Here we can write an expression like this. We",
      "start": 5004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add a string, and in this string we add an asterisk",
      "start": 5008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then we multiply this string by i. So",
      "start": 5012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with this expression, we can repeat a string, when we multiply a string",
      "start": 5016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "by a number, that string will be repeated. For example, if",
      "start": 5020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "i is two, this expression will produce a",
      "start": 5024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "string with two asterisks. Now let's run the program",
      "start": 5028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and see what we get. So we see this little triangle",
      "start": 5032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shape here. Because in the first iteration i is 1, so,",
      "start": 5036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1 times an asterisk produces 1 asterisk.",
      "start": 5040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In the second iteration i is 2, so when we multiply 2",
      "start": 5044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "by 1 asterisks, we'll get 2 asterisks.",
      "start": 5048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to show you how to use a y loop to build",
      "start": 5056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a guessing game like this. So we have this secret number which is currently set to",
      "start": 5060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "9. Now the computer is asking me to make a guess. So,",
      "start": 5064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's say 1 is not right because the secret number is 9, okay,",
      "start": 5068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "try again, 2, no it's not right, let's try again, so I",
      "start": 5072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "only have three chances to make a guess. If I can't guess the number the program",
      "start": 5076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tells me that  I failed. let's run the program one more time, this time",
      "start": 5080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I'm going to guess the number, it's 9, there you go, it says you in.",
      "start": 5084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let's go ahead and build this program using a y loop.",
      "start": 5088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, let's start by defining a variable to store our secret number",
      "start": 5092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, we call the secret underline number and set it to 9.",
      "start": 5096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now we need a while loop to repeatedly ask a user to",
      "start": 5100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "make a guess. So while condition colon",
      "start": 5104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "What is our condition here? Well we want to give our user a",
      "start": 5108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "maximum of three guesses. So similar to the last tutorial, we can define",
      "start": 5112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a variable like I, set it to 0, and assume this represents",
      "start": 5116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the number of guesses the user has made. And then we write our condition",
      "start": 5120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as i less then 3. Note that here I'm not",
      "start": 5124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "using less then or equal to operator, because with this condition",
      "start": 5128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our loop will be executed 4 times, while i is 0,",
      "start": 5132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one, two, and three, so here we should use",
      "start": 5136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the less then operator. Now if we give this code to someone else it's unclear",
      "start": 5140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what does i represent here, it's only in our head that",
      "start": 5144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "i represents the number of guesses the user has made. So as",
      "start": 5148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a best practice, always use meaningful and descriptive names for your variables.",
      "start": 5152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So it's better to rename this variable to guess, count.",
      "start": 5156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let me show you how to rename. So right click on i variable,",
      "start": 5160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then go to refactor and",
      "start": 5164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "rename it. Look at the shortcut. On a Mac computer it's shift and",
      "start": 5168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "f 6. Now in this dialogue box we can easily",
      "start": 5172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "rename your variable and pycharm will update all the references to that",
      "start": 5176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "variable so we don't have to manually update each instance, okay? Let's",
      "start": 5180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "change this to guess_count",
      "start": 5184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "enter, there you go, now that is better,",
      "start": 5188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "also it's better to store 3 in a separate variable to make our code",
      "start": 5192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "more readable, because it's not quite clear what does 3 represent here.",
      "start": 5196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let's define a variable called guess limit",
      "start": 5200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "say to 3, and then we can change 3 to guess",
      "start": 5204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "underline limit, now our code is more readable",
      "start": 5208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "while guess count is less then guess limit, see it reads like a story",
      "start": 5212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is how you should write code. Okay, so",
      "start": 5216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "while this condition is true, we want toast the user to make a guess. So here",
      "start": 5220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we use our input function, guess",
      "start": 5224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now whatever the user enters comes out as a string so we need to convert it to an integer.",
      "start": 5228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So right here, we pass the result to the end function",
      "start": 5232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then get it and store it in a separate variable called guess.",
      "start": 5236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So at this point the user made a guess, now we need to",
      "start": 5240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "increment guess count so guess count",
      "start": 5244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we set it to plus equal 1 or",
      "start": 5248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "okay, now we need to check to see if the user will make the right guess.",
      "start": 5252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So here we need an if statement. If what the user guessed",
      "start": 5256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "equals our secret number,",
      "start": 5260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "again see our code is so readable. It's like a story you can read it like plain",
      "start": 5264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "English. So if this condition is true we want to",
      "start": 5268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tell the user they won. So print you won",
      "start": 5272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now lets go ahead and run our program up to this point.",
      "start": 5276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So okay it's asking me to make a guess, I'm going to make",
      "start": 5280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the wrong guess so one it asked me again, 2 one more time,",
      "start": 5284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3, okay, what is missing in this implementation is the",
      "start": 5288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "message that tells me that I failed. We're going to take care of it momentarily, but",
      "start": 5292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's run the program one more time and make the right guess. So, 9",
      "start": 5296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "okay it says you won, but it's still asking me to make",
      "start": 5300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a guess, because our while loop is going to get executed 3 times. Look",
      "start": 5304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1 and 2. So we need to change our program",
      "start": 5308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "such that if the user makes the right guess, we need to terminate our",
      "start": 5312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "while loop, we need to jump out of it. How do we do that?",
      "start": 5316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, over here if the user makes the right guess, after",
      "start": 5320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we print this message we can use the brick statement to terminate",
      "start": 5324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "terminate a loop, when python interpreter sees this, it's going to",
      "start": 5328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "immediately terminate our loop, it's not going to evaluate this condition again.",
      "start": 5332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now let's run our program and see what happens. So, I'm going to",
      "start": 5336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "guess the right number, you won and look, you are",
      "start": 5340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now asked to make two more guesses, beautiful. Now the last thing we need",
      "start": 5344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to add here is the message that tells the user that they failed if they could not guess",
      "start": 5348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the right number. How do we do that? Well in Python",
      "start": 5352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our while loops can optionally have an else part.",
      "start": 5356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "similar to the if statements. So earlier you learned that our if statements",
      "start": 5360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "can optionally happen else part. Here, so",
      "start": 5364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if this condition is true, do this,",
      "start": 5368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "otherwise do something else. In this case our if statement doesn't have",
      "start": 5372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an else part. Now, similar to the if statements",
      "start": 5376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Our while loops, our while statements can also have an else part.",
      "start": 5380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, right at this level we can add",
      "start": 5384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an else block, so else colon.",
      "start": 5388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And the code that we write here will get executed if this while loop",
      "start": 5392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "completes successfully without an immediate",
      "start": 5396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "break. In other words. If the user guesses the",
      "start": 5400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "right number, you break this loop, you jump out of it so the code that",
      "start": 5404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we write in the else block will not get executed.",
      "start": 5408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But if the user cannot guess this number, you're never going to break out of",
      "start": 5412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this loop, so this loop will be executed to completion untill",
      "start": 5416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this condition become false. In that case, the code that we write",
      "start": 5420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the else block will get executed, and this is the perfect opportunity for us",
      "start": 5424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to tell the user hey, you made three guesses but none of them were right.",
      "start": 5428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, print, sorry you",
      "start": 5432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "failed. Now, let's test the program one more time.",
      "start": 5436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, guess 1, 2, 3,",
      "start": 5440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sorry you failed, let's run it one more time. This time I'm going to make",
      "start": 5444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a wrong guess, and then the right guess,",
      "start": 5448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we won and our loop terminated immediately.",
      "start": 5452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, now it's time for you to practice what you have learned so far.",
      "start": 5460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So once again we're going to build a game this game is a simulation",
      "start": 5464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "card game. Now our game doesn't have a graphical user interface or gooey",
      "start": 5468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and it doesn't really matter for now, our focus is entirely on building the",
      "start": 5472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "engine for this game. So let's see how this works.",
      "start": 5476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "When we run this, we get this little symbol here, and our program",
      "start": 5480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is waiting for us to enter a command. If you type help",
      "start": 5484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "either a lower case or upper case we get the list of commands",
      "start": 5488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that our program or our game currently supports. So we can type the",
      "start": 5492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "start command to start our car, we can type",
      "start": 5496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "stop command to stop our car, and quit to terminate the game.",
      "start": 5500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Any other commands that we type our program is going to tell us hey I don't understand that.",
      "start": 5504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example, if I type asd here, it's going to say I don't understand",
      "start": 5508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that.If you type start, we get this message,",
      "start": 5512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "car started, ready to go, if you type stop it",
      "start": 5516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "says car stopped, and finally if we hit quit",
      "start": 5520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our program terminates, this is a fantastic exercise for you to practice",
      "start": 5524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "wha you have learned, so pause the video and spend 5-10 minutes",
      "start": 5528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to build this program.",
      "start": 5532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, we're going to start with a while loop with a condition",
      "start": 5536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "What is our condition here? We want to run this loop",
      "start": 5540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "until the user types quit. So we can define a variable",
      "start": 5544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or a story to command what the user enters, and then we can run this",
      "start": 5548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "loop as long as the command does not equal to quit. So right before",
      "start": 5552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the loop, we define a variable, command, and initially we set it",
      "start": 5556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to an empty string. An empty string is a string that has no characters",
      "start": 5560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in it. We only have the quotes. So then",
      "start": 5564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we type out our condition as while command",
      "start": 5568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "does not equal to quit then do something.",
      "start": 5572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now immediately we have a problem here because we're assuming that the user",
      "start": 5576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "types the command in lower case, so if they type this in upper case they",
      "start": 5580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our program is not going to behave properly, so to fix this problem, you need to",
      "start": 5584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call the lower method of the string object and then compare the results.",
      "start": 5588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "With this quit. You could also call this upper",
      "start": 5592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then type quit in upper case. It's about our personal preference",
      "start": 5596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this demo I'm going to use lower case characters.",
      "start": 5600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, okay, now in this loop we need to ask the user to enter",
      "start": 5604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a command. So once again we're going to use our input function, we're going to add",
      "start": 5608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a greater then symbol followed by a space,",
      "start": 5612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "whatever the user enters, we get it and store it in our",
      "start": 5616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "command variable. Now apart from",
      "start": 5620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "quit command, there are three other commands that we need to support. Start,",
      "start": 5624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "stop, and help. So here we need an if statement to compare",
      "start": 5628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what the user enters with one of the supported commands.",
      "start": 5632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, if command.lower",
      "start": 5636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "equals start then you want to print the message",
      "start": 5640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like the car started. So print the car started.",
      "start": 5644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Ready to go, it doesn't matter,",
      "start": 5648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now the second condition. What if its not start, maybe it's stop? So,",
      "start": 5652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "el if command.lower",
      "start": 5656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "equals stop, there you go, then we print a",
      "start": 5660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "different message car stopped. Now look at our code.",
      "start": 5664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We have repeated this lower lower lower multiple times.",
      "start": 5668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This is bad, in programming we have a term called dry, which is short for",
      "start": 5672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "don't repeat yourself. So whenever you have duplicate",
      "start": 5676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "your code that means you're doing something wrong. So how can we solve this problem.",
      "start": 5680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Well, instead of calling the lower method in each condition,",
      "start": 5684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can call it right here when we get the input from the user, so",
      "start": 5688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this input function as you know returns a string, we can",
      "start": 5692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "immediately call the lower method on this string, and with this command",
      "start": 5696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will always be in lowercase, so we don't need to",
      "start": 5700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call this method in every condition. Look,",
      "start": 5704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we remove the duplication and also our conditions",
      "start": 5708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "are shorter and easier to read. There is also one more place",
      "start": 5712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to modify so, it's right here. That is better.",
      "start": 5716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, the third command. We need one more el if.",
      "start": 5720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "If the command equals help, then,",
      "start": 5724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we want to show the commands that we support. So,",
      "start": 5728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here we're going to print a multi line string. So we",
      "start": 5732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use triple quotes like this, and",
      "start": 5736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "give the user a guideline like this. So start",
      "start": 5740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to start the car stop",
      "start": 5744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to stop the car, and",
      "start": 5748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "quit to quit. Now finally we need",
      "start": 5752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an else part, so if what the user enters is none of these commands,",
      "start": 5756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're going to tell them, hey we don't understand these,",
      "start": 5760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "else, colon print",
      "start": 5764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sorry I don't understand that.",
      "start": 5768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And by the way note that here becomes I'm using double",
      "start": 5772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "quotes, I can easily use a single quote as an apostrophe, okay?",
      "start": 5776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let's run our program up to this point and see what happens.",
      "start": 5780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, let's type start car is",
      "start": 5784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "started, beautiful, stop, car is stopped, help,",
      "start": 5788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get this guideline, but there's so much indentation",
      "start": 5792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "before our commands, we'll fix that in a second. And finally",
      "start": 5796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's test the quit command, oops, our program",
      "start": 5800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "didn't work properly. Here is the reason. With these if statements,",
      "start": 5804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're comparing the command with start stop, and",
      "start": 5808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "help. Anything else will end up here, so that's why our",
      "start": 5812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program says it doesn't understand that. So that's why our program",
      "start": 5816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "says it doesn't understand that command. However, after this el statement",
      "start": 5820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the control will be moved to the beginning of the loop.",
      "start": 5824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "At this point our command is quit, so our loop will complete and the",
      "start": 5828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program terminates. In other words when we run this program",
      "start": 5832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and type quit, our program actually quits but",
      "start": 5836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we still see this message which shouldn't appear here. How can we solve this problem?",
      "start": 5840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Well, we can come back here and just before",
      "start": 5844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the else block, add another el if, something like",
      "start": 5848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this. el if command equals",
      "start": 5852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "quit then you can immediately break.",
      "start": 5856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This will solve our problem, but note that we have kind of repeated",
      "start": 5860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this expression in two places. The reality is that",
      "start": 5864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we don't really need this condition on the top, because with these if statements",
      "start": 5868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "well more accurately with this el if we can jump out of this loop and terminate",
      "start": 5872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our program. So, we can simplify our condition",
      "start": 5876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to something like this. True. So while true means",
      "start": 5880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this block of code is going to get executed repeatedly,",
      "start": 5884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "until we explicitly break out of it,",
      "start": 5888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "okay? Now let's test our program one more time. So,",
      "start": 5892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "quit now our program terminates and we don't see that message",
      "start": 5896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "beautiful. So let's fix the last problem. You saw that when we",
      "start": 5900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "typed help, these guidelines appeared with so much in",
      "start": 5904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "indentation, and here's the reason, look, right here in our code,",
      "start": 5908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "they are already indented. So when we use triple quotes, what we type here",
      "start": 5912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will be printed exactly as is. So, because we",
      "start": 5916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have an indentation here, this indentation will also be printed on the terminal.",
      "start": 5920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let's delete these",
      "start": 5924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "okay, run the program one more time, type help,",
      "start": 5928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the indentation is gone. Beautiful. Now here's a challenge for you. I want you to",
      "start": 5932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "take this program to the next level. So right now if we type",
      "start": 5936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "start we get this message car started. And if we type start again",
      "start": 5940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get the same message. It would be better if",
      "start": 5944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we got a message like car is already started so it doesn't make sense to",
      "start": 5948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "start a car twice. Similarly, if we type stop",
      "start": 5952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it says car stopped, if we type it again we get the exact same",
      "start": 5956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "message, it doesn't make sense to stop the car twice. So here's what I need you to do",
      "start": 5960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if the car is stopped and the user tries to stop it again,",
      "start": 5964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the program should say hey, the car is already stopped, what are you doing? And similarly",
      "start": 5968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if the car is already started and the user tries to start it again,",
      "start": 5972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the program should yell at the user. So go ahead and make the necessary changes to",
      "start": 5976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "implement this scenario.",
      "start": 5980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright to add this to our program, we need",
      "start": 5984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to know if the car is started or not. So there is one more piece of information",
      "start": 5988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to store in the memory. What is the kind of data we need to store here?",
      "start": 5992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "A boolean. Is the car started or not, it's a matter of yes",
      "start": 5996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or no. True or false. So on the top, here",
      "start": 6000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can define another variable like started and initially we set it",
      "start": 6004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to false. So the car is not started, right? Now",
      "start": 6008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when the user types the start command, here we need to check",
      "start": 6012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to see if the car is already started. If not the we'll start it",
      "start": 6016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or otherwise we'll yell at the user. So in this block we'll write",
      "start": 6020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another if statement, if it's already started",
      "start": 6024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and we print car is already",
      "start": 6028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "started. Otherwise, so if you add an",
      "start": 6032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "el statement here. And at this point,",
      "start": 6036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you set started to true. So we start",
      "start": 6040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the car and we print this message, okay? Now we need to make a similar",
      "start": 6044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "change for the stop command. So if the car is",
      "start": 6048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "already stopped we need to print a different message. If",
      "start": 6052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "not started, so here we're using the not operator to see",
      "start": 6056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if the car is stopped. So if it's not started that means",
      "start": 6060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's stopped, okay? So if it stopped we print",
      "start": 6064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "car is already stopped with",
      "start": 6068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "double p's, otherwise so else",
      "start": 6072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to stop the car, how do we do that? We",
      "start": 6076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "set started to false. And then we'll print this message.",
      "start": 6080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "As easy as that. Let's go ahead and run our program.",
      "start": 6084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, initially our car is stopped. So I'm going to type",
      "start": 6088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "stop, it says the car is already stopped, so lets",
      "start": 6092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "start it, okay, now our car is started, let's",
      "start": 6096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "start it one more time. The program is yelling at us. So we can",
      "start": 6100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "not start the car twice. Beautiful. Now let's stop it",
      "start": 6104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it says the car is stopped, let's stop it one more time, we get this message",
      "start": 6108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "again.",
      "start": 6112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial, I'm going to talk to you guys about",
      "start": 6116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for loops in python. In the last tutorial, you learned about while loops",
      "start": 6120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you learned that we use while loops to execute a block of code multiple times.",
      "start": 6124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In python we have another kind of loop, that is a for loop, and we use that",
      "start": 6128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and we use that to iterate over items of a collection, such as a string.",
      "start": 6132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Because a string is a sequence of characters, so it looks like a collection",
      "start": 6136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we can use a for loop to iterate over each character in a",
      "start": 6140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "string and then do something with it. Here's an example. We type out",
      "start": 6144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for then we define a variable, this is what we call a loop",
      "start": 6148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "variable. In each iteration, this variable will hold",
      "start": 6152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one item. So, let's call it item, in",
      "start": 6156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here we type out a string like Python, and then",
      "start": 6160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "colon. So with this for loop we can iterate over a string and in each",
      "start": 6164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "iteration this item variable will hold one character at a time",
      "start": 6168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the first iteration it will be set to p then",
      "start": 6172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the second iteration it will be set to y, and in the third iteration it will be set to",
      "start": 6176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "t and so on. So here we are inside our for block,",
      "start": 6180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "because of the indentation here, so whatever we type here will be executed in",
      "start": 6184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "each iteration, for now we can simply print this item",
      "start": 6188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now let's run this program and see what happens.",
      "start": 6192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So you can see each character in this string is printed on",
      "start": 6196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a new line. Let's look at another example. In Python we can",
      "start": 6200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "define lists using square brackets, so let me remove this string from",
      "start": 6204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here, and define a list using square brackets,",
      "start": 6208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a list is simply a list of items, a list of numbers, a list of",
      "start": 6212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "customers, a list of emails, products, blog posts, whatever.",
      "start": 6216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So here we can define a list of names like Mosh,",
      "start": 6220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Jon, Sarah, and then go ahead",
      "start": 6224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and run our program so we can see in each iteration we get one name",
      "start": 6228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and print it on a new line. We can also",
      "start": 6232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "loop over a list of numbers, for example,",
      "start": 6236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1, 2, 3, 4, let's run it, again",
      "start": 6240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we see each number on a new line, but what if we want",
      "start": 6244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a list of numbers? We don't to explicitly type out a list",
      "start": 6248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with let's say 100 or 1000 numbers, we don't want to type, 5, 6",
      "start": 6252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "7 all the way to 100. That is when we use the range function.",
      "start": 6256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let me delete this,",
      "start": 6260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In Python we have a built in function called range, for creating",
      "start": 6264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "range of numbers. So, we give it a number, let's say 10,",
      "start": 6268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's run this program, now we can see",
      "start": 6272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here on the terminal we have 0 all the way",
      "start": 6276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to 9. So 10 is not included.",
      "start": 6280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So basically when we call the range function, this range creates",
      "start": 6284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an object, it's not a list, it's a special kind of object we can",
      "start": 6288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "iterate over, in each iteration this object will spit out a new number.",
      "start": 6292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can also work with a  range of numbers here, let's say you want to start",
      "start": 6296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from 5, and go all the way to 10.",
      "start": 6300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let's run our program, now we have the numbers",
      "start": 6304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "5, 6, 7, and 9. Also, this range",
      "start": 6308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "function can optionally take a step, so we can pass",
      "start": 6312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "two asa step to this function,",
      "start": 6316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and when we run our program, we can see our first number",
      "start": 6320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is 5, now we go two steps forward to get 7,",
      "start": 6324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "once again we go to two steps forward we get 9 and that is",
      "start": 6328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the end of our range. So this is the basics of using for loops in python.",
      "start": 6332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now here's an exercise for you. I want you to write a program",
      "start": 6336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to calculate the total cost of all the items in a shopping cart.",
      "start": 6340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let's say we have a list of prices like 10,",
      "start": 6344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "20, and 30, I want you to use a for loop,",
      "start": 6348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to calculate the total cost of all the items in our imaginary shopping cart,",
      "start": 6352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so calculate that, and then print it on the terminal. That's pretty",
      "start": 6356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "easy. And you should do it in a couple minutes.",
      "start": 6360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So as you learned we use for",
      "start": 6364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "loops to iterate over all the items in a  collection,",
      "start": 6368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a collection can be a string, it can be a list, it can be a range object that is",
      "start": 6372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "returned from the range function. Anything, any kind of object that has multiple",
      "start": 6376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "items. So in this example we're going to use a for loop to iterate over",
      "start": 6380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the list of prices. So for item in",
      "start": 6384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "prices, colon, and by the way this loop variable",
      "start": 6388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we don't have to call this item, can call this anything. For example, in this case",
      "start": 6392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can rename it to price. So for price,",
      "start": 6396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in prices. Now in each iteration this",
      "start": 6400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "price will hold one value. In the first iteration it's going to hold 10, then it's",
      "start": 6404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "gooing to be 20, and then it's going to be 30. So we need to define",
      "start": 6408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another variable to calculate the total so",
      "start": 6412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we define that outside of our for loop, let's call it total",
      "start": 6416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and initially we set it to 0. Now in each",
      "start": 6420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "iteration we get the current price and add it to the total so",
      "start": 6424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we write total equals total plus price",
      "start": 6428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or as you learned earlier we can use the augmented",
      "start": 6432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "assignment operator to simplify this code.",
      "start": 6436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, after our for loop. This total variable has",
      "start": 6440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a total of all the prices we can simply print it here,",
      "start": 6444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or we can use a formatted string, so a string",
      "start": 6448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "prefix with f, the other label, like total,",
      "start": 6452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "curly braces to dynamically include some value in our string,",
      "start": 6456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this case our total variable. So let's go ahead",
      "start": 6460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and run this program, there you go, so the total cost of",
      "start": 6464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the items in our imaginary shopping cart is 60.",
      "start": 6468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to talk to you guys about nested loops",
      "start": 6476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in python. Using a nested loop basically means adding one loop",
      "start": 6480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "inside of another loop, and with this technique we can do some amazing things",
      "start": 6484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for example we can easily generate a list of coordinates. So, a",
      "start": 6488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "acquired (?) as you know is a combination of x and y",
      "start": 6492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "value. Let's say 0 and 0. Now let's say you wan to generate",
      "start": 6496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a list of coordinates like this. So we have 0 and 0,",
      "start": 6500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we'll have 0 and 1, then 0 and 2, next",
      "start": 6504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're going to change x, so we're going to use 1 for x,",
      "start": 6508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and once again we're going to use these 3 values for the y coordinates",
      "start": 6512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so 1 and 0 then 1 and 1",
      "start": 6516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and 1 and 2, you got the point. We can",
      "start": 6520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "easily generate these coordinates using nested loops. Let me show you.",
      "start": 6524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we start with one loop, let's say for x in",
      "start": 6528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "range 4. With this loop, we can generate value",
      "start": 6532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for the x coordinate. Let's print this on the terminal,",
      "start": 6536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay, so, we get the values, 0",
      "start": 6540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to 3. Now for each x, like 0, we",
      "start": 6544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "should generate a few y values. So that is where we use",
      "start": 6548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a nested loop. So inside of this loop we're going to add",
      "start": 6552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another loop, so instead of just printing x first we want to add",
      "start": 6556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another loop, for y in range",
      "start": 6560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's say 3, now we can print x and y together",
      "start": 6564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, print, here, we use a formatted string.",
      "start": 6568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to display coordinates like this. So we add parenthesis",
      "start": 6572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "inside of this parenthesis first we need to add x so curly braces",
      "start": 6576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x then a comma followed by",
      "start": 6580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another set of curly braces, and y,",
      "start": 6584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's run this program and see what we get.",
      "start": 6588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "There you go. So, we have these coordinates",
      "start": 6592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "0 and 0, 0 and 1, 0 and 2, then you have",
      "start": 6596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1 and 0 1 and 1 1 and 2 and so on. So let me explain exactly",
      "start": 6600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "how this program gets executed. So in the first iteration,",
      "start": 6604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of our outer loop, x is 0. Now we are",
      "start": 6608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on line 2, here we have a new loop which we call an",
      "start": 6612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "inner loop. In this inner loop, in the first iteration y",
      "start": 6616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is going to be 0, so we print 0 and 0 on the",
      "start": 6620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "terminal. Now the control goes back to line 2 or our",
      "start": 6624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "inner loop. In this second iteration y will be set to 1, but",
      "start": 6628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we are still in the first iteration of our outer loop. So",
      "start": 6632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x is still 0, but now y is incremented to 1.",
      "start": 6636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So that is why we see 0 and 1 on the terminal.",
      "start": 6640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Once again, the control goes back to line 2, we are in the third",
      "start": 6644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "iteration of our inner loop, so this will continue until our inner loop",
      "start": 6648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "completes. That is when y reaches 2 because",
      "start": 6652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this range function generates number 0 to 3 but not including",
      "start": 6656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3. So we'll have 0 1 and 2. After this inner loop completes,",
      "start": 6660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then the control goes back to line 1, and at this point we're going to",
      "start": 6664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "be in the second iteration of our outer loop. So x will be",
      "start": 6668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1, then the control will be moved to line 2, or our inner",
      "start": 6672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "loop, at this point, this range function is going to generate the numbers 0",
      "start": 6676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to 3 one more time. So this inner loop will be executed 3 times.",
      "start": 6680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And then we'll go back to our outer loop. So this is how",
      "start": 6684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "nested loops get executed.",
      "start": 6688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay, here's an exercise for you, but this one is a little bit",
      "start": 6692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "more challenging then the exercises you have done so far. So I really don't",
      "start": 6696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "expect you to do it, but if you do it, wow, I will be so proud of you,",
      "start": 6700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so see what I've done here? Using nested loops,",
      "start": 6704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I've written some code to draw this f shape, can you see that? So I",
      "start": 6708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let me give you a hint, first of all we have this",
      "start": 6712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "list, called numbers, in this list we have these values,",
      "start": 6716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "5, 2, 5, 2, 5, 2. These values determine",
      "start": 6720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the number of x's we have in each line. So,",
      "start": 6724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for example, the first item in this list, this tells us that we should have",
      "start": 6728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "5 x's on the first line. There you go, so 1, 2, 3,",
      "start": 6732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "4, 5, on the second line we're going to have 2 x's,",
      "start": 6736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on the third line we're going to have 5 x's like this.",
      "start": 6740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So I've written code to convert a simple list of numbers",
      "start": 6744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "into a shape like this. Now here's a tip for you.",
      "start": 6748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Using your for loop you need to iterate over this list. In",
      "start": 6752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "each iteration you get one number, this determines the number of x's",
      "start": 6756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to be displayed on that particular line. So if you want to cheat,",
      "start": 6760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you can get this number and multiply by a string that contains x,",
      "start": 6764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so if you multiply x by 5, we'll get 5 x's, that's not what",
      "start": 6768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I want you to do. I want you to use an inner loop here to",
      "start": 6772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "generate a string that contains 5 x's. So imagine",
      "start": 6776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in Python we cannot multiply a string by a number",
      "start": 6780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so to solve this problem we need a nested loop. So go ahead and spend",
      "start": 6784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "five minutes on this exercise. And by the way, do your best to solve this. It is",
      "start": 6788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a little bit challenging, but it's not extremely difficult. It just requires",
      "start": 6792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a little bit of focus. You'll see my solution next.",
      "start": 6796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright so first we need to iterate over",
      "start": 6800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the items in this list. So for item",
      "start": 6804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in numbers, or, you could rename this variable",
      "start": 6808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to x_count. That is the number of x's",
      "start": 6812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on each line. Okay? Now I told you that if you want to cheat you can write code",
      "start": 6816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like this. Print x times",
      "start": 6820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x underline count. If you run this program we get the same",
      "start": 6824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "output. So this is the beauty of Python, with Python",
      "start": 6828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can write expressions like this, we can multiply a string by a number to",
      "start": 6832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "repeat it. A lot of other programming languages don't support this feature. But",
      "start": 6836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for this exercise, I wanted you to imagine that we don't have this feature in Python",
      "start": 6840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so you will have to use an inner loop to solve this problem. Here's how",
      "start": 6844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it works. In the first iteration, x count is going to be 5.",
      "start": 6848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we need to generate 5 x's. How can we do that?",
      "start": 6852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Well, let's say we define a variable called output and initially set it to",
      "start": 6856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an empty string. Now we need to add 5 x's to this string. So,",
      "start": 6860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can use another loop for count in range,",
      "start": 6864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of x underline count. So we're using the range function",
      "start": 6868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to generate a sequence of numbers from 0 up to",
      "start": 6872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x count. So in our first iteration x count is going to be 5, so",
      "start": 6876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "range of 5 would generate the numbers 1, 2, 3, 4.",
      "start": 6880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this inner loop will be executed 5 times.",
      "start": 6884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "That is exactly what this count represents.",
      "start": 6888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So now in each iteration we simply need to",
      "start": 6892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "append an x to our output variable. So we set",
      "start": 6896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "output, plus, equals x,",
      "start": 6900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then after this inner loop we simply print",
      "start": 6904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the output. With his we'll print 5 x's on",
      "start": 6908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the first row. Then we go to the second iteration of our outer loop.",
      "start": 6912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "At this point x count is going to be 2, now",
      "start": 6916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on line 3, we're going to reset our output variable to an",
      "start": 6920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "empty string. So we start over. Then we go to our inner loop,",
      "start": 6924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this loop will be executed 2 times, so we'll append to x's",
      "start": 6928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to the output variable and then print it, as simple as that.",
      "start": 6932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So see, it wasn't really that difficult, but it was slightly more difficult then the",
      "start": 6936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "previous exercises. So let's run this program, there you go.",
      "start": 6940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now if you're adventurous, I want you to modify the values that we have",
      "start": 6944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in our numbers list,",
      "start": 6948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to print and l here.",
      "start": 6952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now in this tutorial we're going to take a closer look at lists.",
      "start": 6960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, I'm going to define a list of names, let's send them",
      "start": 6964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to John Bob Mosh",
      "start": 6968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Sarah and Mary. So,",
      "start": 6972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you print this list here, what we see on",
      "start": 6976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the terminal look exactly like how we define our lists we have",
      "start": 6980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "square brackets, and in between these square brackets we have our item",
      "start": 6984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our items, so we have 5 strings in this list.",
      "start": 6988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we can also access an individual element using an index just like",
      "start": 6992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "how we can access an individual character in a string using an index.",
      "start": 6996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, here we type out square brackets,",
      "start": 7000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and specify an index. The index of the first item in this list",
      "start": 7004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is 0. So, let's run this program, there you go,",
      "start": 7008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get Jon now if you want to print out the third element in this list",
      "start": 7012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's index is 2, so names of 2,",
      "start": 7016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "returns Mosh, now we can also pass",
      "start": 7020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a negative index here, so negative 1, refers to the last item",
      "start": 7024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this list, that is Mary, let's run the program,",
      "start": 7028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go, we see Mary, if you pass negative 2, this",
      "start": 7032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "returns the second item from the end of the list. So let's run the program,",
      "start": 7036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go, we get sarah, so this is exactly like accessing",
      "start": 7040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "individual characters in a string. We can also",
      "start": 7044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use a colon to select a range of items, for example if",
      "start": 7048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you pass 2 colon. This will get all items",
      "start": 7052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "starting from the index of 2, that is Mosh here all the",
      "start": 7056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "way to the end of the string. So let's run this program",
      "start": 7060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go. We get this list with 3",
      "start": 7064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "items, Mosh, Sarah, and Mary. We can also specify",
      "start": 7068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an end index, let's say 4, so this will return all",
      "start": 7072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the items up to this index, but it doesn't include the item at this index.",
      "start": 7076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So when we run this program we only see Mosh and",
      "start": 7080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Sarah, the item I've indexed 4which is the 5th element or",
      "start": 7084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "5th item in this list is not returned. So Mary",
      "start": 7088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is not returned. And also here we have default values, so if you",
      "start": 7092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "leave out the end index this expression is going to return",
      "start": 7096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the items starting from the index of 2, to the end of the list",
      "start": 7100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or if you leave out the start index, this expression asumes",
      "start": 7104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "0 as the default index, so it will return all the items from the",
      "start": 7108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "beginning to the end of the list. And by the way,",
      "start": 7112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "just like strings, these square brackets here, don't modify our",
      "start": 7116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "original list, they simply return a new list. For example, if we pass",
      "start": 7120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2 here, you can see this returns a new list with 3 items.",
      "start": 7124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So if you go back here and print our original",
      "start": 7128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "list of names right after you can see it's not affected.",
      "start": 7132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So here we want to use square brackets with a colon to select a",
      "start": 7136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "range of items, we get a new list, and by the way we can also",
      "start": 7140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "modify any of the elements in this list. For example let's say we made a mistake and",
      "start": 7144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the first item shouldn't be john with an h,",
      "start": 7148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we want to remove the h, that is very easy, so we access it,",
      "start": 7152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "using an index that is names of 0, and we set it to a new value",
      "start": 7156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like this. Now, let's print our list",
      "start": 7160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, you can see the first item in this list",
      "start": 7164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is now data. So this is the basics of lists. And here's a",
      "start": 7168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "exercise for you. I want you to write a program to find the largest number",
      "start": 7172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in your list. This is a fantastic exercise for beginners, so go ahead and",
      "start": 7176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "spend a few minutes on this, then come back and continue watching.",
      "start": 7180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, let's",
      "start": 7184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "define a list of numbers, numbers, with a bunch of random numbers",
      "start": 7188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3, 6, 2, 8, 4 and 10.",
      "start": 7192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now to find the largest number in this list. We need to define another",
      "start": 7196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "variable let's call it max, this variable will hold",
      "start": 7200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the largest number, now initially you want to assume",
      "start": 7204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the first item in this list is the largest number. So we set max to",
      "start": 7208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "numbers of 0. We're only assuming that the first item",
      "start": 7212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is the largest number. Chances are our assumption is wrong. So we need",
      "start": 7216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to iterate over this list, we need to loop through it, get",
      "start": 7220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "each item and compare it with max. If it's greater than Max, then",
      "start": 7224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to reset max to that number. So in the first iteration we get",
      "start": 7228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3, and max is also 3. Is 3 greater than",
      "start": 7232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3. No, so we move on, we get the second number, is",
      "start": 7236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "6, greater than 3? It is, so we need to reset max",
      "start": 7240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to 6. Once again, we continue, we get 2, these two greater",
      "start": 7244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "than 6, no it's not, so we move on, then we get 8,",
      "start": 7248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is 8 greater than 6? It is, so we should reset max to 8.",
      "start": 7252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "That is pretty easy. So here we need a for loop, for",
      "start": 7256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "number in numbers colon",
      "start": 7260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we need too heck to see if this number is greater than max,",
      "start": 7264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, if number is greater than max,",
      "start": 7268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "max colon then we need to reset max, so max",
      "start": 7272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to this new number, that's all we had to do.",
      "start": 7276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let's print max, and run our",
      "start": 7280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program we can see the largest number in this list is 10.",
      "start": 7284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "It doesn't matter whether this number is at the end of the list or the beginning.",
      "start": 7288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So if I move 10 and put it right at the beginning",
      "start": 7292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we should still see the same result. Let's run our program,",
      "start": 7296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we still see 10, if I put this somewhere in the middle, our",
      "start": 7300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program should still work. Let's put it right after 2.",
      "start": 7304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Run the program, we still get 10.",
      "start": 7308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to talk to you guys about two dimensional",
      "start": 7316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "lists in python. Two dimensional lists are extremely powerfully and they have a lot",
      "start": 7320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if applications in data science and machine learning. Here's",
      "start": 7324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an example, In math we have a concept called matrix, which is like",
      "start": 7328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a rectangular array of numbers, let me show you. So",
      "start": 7332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we have 1, 2, 3, 4, 5, 6, 7, 8, 9.",
      "start": 7336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we have a rectangular array of numbers. You have rows,",
      "start": 7340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and columns. So this is a 3 x 3 matrix",
      "start": 7344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in math. Now we can model this in python using",
      "start": 7348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a 2 dimensional list. A 2 dimensional list is a list where",
      "start": 7352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "each item in that list is another list. So,",
      "start": 7356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you want to define a matrix. We set it to a list, each",
      "start": 7360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "item in this list, is going to be another list, and that list represents",
      "start": 7364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the items in each row. So, the first",
      "start": 7368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "item in our list is going to be another list, and in this other list we're going to have",
      "start": 7372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the values 1, 2, and 3. Now the second",
      "start": 7376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "item in our matrix list, once again, we have a list,",
      "start": 7380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this list represents the items in the second row. So,",
      "start": 7384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "4, 5, and 6, and finally 7, 8",
      "start": 7388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "9. So as you can see we have a 2 dimensional list",
      "start": 7392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Each item in our outer list is another list.",
      "start": 7396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay? So, this is how we can implement a matrix in",
      "start": 7400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python, now to access an individual item in our matrix,",
      "start": 7404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "once again we use square brackets, let me delete this stuff,",
      "start": 7408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "alright, so how do we access 1 here,",
      "start": 7412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "well, you start with our list then we add square",
      "start": 7416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "brackets first we need to go and get the first item in this list.",
      "start": 7420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Right? So we pass 0, now this expression",
      "start": 7424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "returns another list. That is the inner list. In this list,",
      "start": 7428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's say you want to access the second item, so,",
      "start": 7432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "once again we add square brackets, and we pass 1, that",
      "start": 7436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is the index of 2 in this list, alright.",
      "start": 7440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So if we print this on the terminal",
      "start": 7444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get 2. Okay? So using 2 square brackets",
      "start": 7448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can access individual items in our matrix, and",
      "start": 7452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "also we can modify these values using this syntax, so,",
      "start": 7456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "before printing this, let's change this to 20, so matrix",
      "start": 7460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of 0, and 1, let's change it to 20,",
      "start": 7464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then print it, there you go, it's modified, now here you",
      "start": 7468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "can also use nested loops to iterate over all the items",
      "start": 7472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this matrix. Let me show you. So,",
      "start": 7476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we start with a rows for the rows in matrix,",
      "start": 7480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so with this loop, we are iterating over our Matrix",
      "start": 7484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "list, in each iteration row will contain 1",
      "start": 7488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "list, 1 item, okay? Now, here we need to",
      "start": 7492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use an inner loop. So we need to loop over this row",
      "start": 7496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "which is a list of items. We can type out 4",
      "start": 7500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "item in row colon and print",
      "start": 7504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "item. Okay? So, let's run this program,",
      "start": 7508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go, we get all the item",
      "start": 7512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in our list. Hey, I just",
      "start": 7516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "wanted to make a quick announcement. In case you haven't seen my website yet, head over to codewithmosh.com",
      "start": 7520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is my coding school, where you can find plenty of courses",
      "start": 7524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on web and mobile application development. In fact recently I published a",
      "start": 7528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "comprehensive python course that goes way beyond this beginners",
      "start": 7532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "youtube. And if you're serious about learning python and getting a job, I highly encourage",
      "start": 7536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you to enroll in this course. Just like this tutorial you can watch it anytime,",
      "start": 7540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "anywhere as many times as you want, and you will also receive a certificate",
      "start": 7544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of completion that you can add to your resume, and the course comes with a 30 day",
      "start": 7548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "money back guarantee, so if you're not happy we'll give all your money back,",
      "start": 7552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "no questions ask. The price for this course is 149 dollars, but",
      "start": 7556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the first 200 students can get it for only 15 dollars. So if you're interested,",
      "start": 7560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the link is below this video, click the link, and get started.",
      "start": 7564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial, I'm",
      "start": 7568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "going to talk to you guys about the list methods, or list functions. These are the",
      "start": 7572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "operations that we can perform in a list. So let's define",
      "start": 7576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a list of numbers, here we pass a bunch of random numbers, like",
      "start": 7580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "5, 2, 1, 7, and",
      "start": 7584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "4. Now there are a number of things we can do with this list, we can",
      "start": 7588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add new items to it, we can remove existing items, we can check for the existence of an item",
      "start": 7592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these are the operations that we can perform on a list. So,",
      "start": 7596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the we type numbers, we can see all these functions or more accurately",
      "start": 7600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the methods that are available in our list objects.",
      "start": 7604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we can call the append method to add a new item to this list. Let's say",
      "start": 7608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "13. Actually, no it's not a good number.",
      "start": 7612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I'm joking I'm not superstitious, so let's add 20, it",
      "start": 7616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "doesn't really matter and then print our list",
      "start": 7620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when we run the program we can see 20 is added at the end of this list",
      "start": 7624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but what if you want to add a number somewhere in the middle, or at the beginning",
      "start": 7628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of our list? For that we use a different method, that is called",
      "start": 7632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "insert. So, insert, now this method",
      "start": 7636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "takes 2 values, let me show you. So when we open parenthesis",
      "start": 7640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "look at this little tool tip above the insert method.",
      "start": 7644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "You see the first value that we need to pass here is an index, so",
      "start": 7648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is the index at which we want to insert this new item. Let's",
      "start": 7652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "say we want to add an item at the beginning of our list, so we passed our index position",
      "start": 7656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of 0, and then the second value is the actual",
      "start": 7660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "object we want to add to this list. Let's say we want to add the number 10,",
      "start": 7664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now when we print this list you can see that the",
      "start": 7668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "number 10 is placed at the beginning of the list and",
      "start": 7672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the other items are pushed to the right. We can also remove an item so",
      "start": 7676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we call remove and pass the item that",
      "start": 7680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we want to remove 5. Now we",
      "start": 7684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print our list so we see 5 is gone, and we have",
      "start": 7688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2, 1, 7, 4. If you want to remove all the items in the list, you can call",
      "start": 7692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the clear method, so, clear",
      "start": 7696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this method doesn't take any values, so, we simply",
      "start": 7700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call it and it empties our list, all the items are removed.",
      "start": 7704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We also have another useful method called hop,",
      "start": 7708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and with this we can remove the last item in a list.",
      "start": 7712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let me show you. So, we run our program, you can see the number 4",
      "start": 7716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is removed from the end of our list. Now if you want to",
      "start": 7720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "check for the existence of an item in our list, you can call the index method.",
      "start": 7724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we call index and pass a value here, like 5",
      "start": 7728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and this returns the index of the first",
      "start": 7732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "occurrence of this item. So let's print this on the terminal.",
      "start": 7736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We don't need this line anymore. So the",
      "start": 7740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "index of 5 is 0. What if we pass a number that doesn't exist",
      "start": 7744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this list? Let's say 50? Run the program,",
      "start": 7748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get an error. We get a value error. 50 is not",
      "start": 7752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the list. There is also another way to check for the existence of an item,",
      "start": 7756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can use the in operator. So, let me show you",
      "start": 7760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we type our 15 in numbers,",
      "start": 7764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "earlier we used the in operator with a string, we",
      "start": 7768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "check for the existence of a character or a sequence of a character in a string,",
      "start": 7772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now here we're checking for the existence of 50 in the list of numbers, so",
      "start": 7776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's print this, we get a boolean value,",
      "start": 7780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "false, so unlike the index method, this expression,",
      "start": 7784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "doesn't generate an error, so it's safer to use this. We also have another",
      "start": 7788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "method for counting the occurances of an item, let's say we have",
      "start": 7792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another 5 over here.",
      "start": 7796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now we can call numbers.count and pass 5",
      "start": 7800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and this should return 2 because we have 2 5s in this list.",
      "start": 7804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Take a look. There you go. That is pretty useful",
      "start": 7808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now if you want to sort your lists you can call sort method. So,",
      "start": 7812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we call the sort method here, this method doesn't take any values so,",
      "start": 7816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "look at he return value, that is none, none",
      "start": 7820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is an object in python that represents the absence of a value.",
      "start": 7824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this sort method doesn't really return any values it simply sorts this",
      "start": 7828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "list, in place, so instead of printing the return value",
      "start": 7832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "oft his method, we simply call it to sort our list",
      "start": 7836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then print our list. Take a look.",
      "start": 7840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, all the items are assorted in ascending order. We can also",
      "start": 7844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sort the items in descending order, so after we sort the list",
      "start": 7848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can call the reverse method. We can simply reverse",
      "start": 7852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our list. Now let's go ahead and run our program, take a look.",
      "start": 7856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Our numbers are sorted in descending order.",
      "start": 7860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And one last method I want to show you here that is pretty useful is the copy",
      "start": 7864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "method. So copy, with this method you can get a copy",
      "start": 7868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of our list. So let's define another variable called numbers 2,",
      "start": 7872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now numbers 2, is a copy of our original list. So if",
      "start": 7876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you make any changes to our original list, if you add new items to it, if you remove",
      "start": 7880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "existing items, these operations are not going to impact our second list.",
      "start": 7884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let me show you. So after we show you a copy of our numbers list",
      "start": 7888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's add a new item to this list, so numbers.apphend",
      "start": 7892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ten. So the first list is updated, so now we have a",
      "start": 7896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "new item in our first list, then lets print the second list.",
      "start": 7900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Take a look, we don't have the number 10 here, because these are",
      "start": 7904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2 independent lists. So these are all the operations",
      "start": 7908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that we can perform on lists. We can add new items to a list, we can",
      "start": 7912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "remove exxisitn items, we can check for the existence of an item, we can sort",
      "start": 7916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our list, and copy them. Now here's an exercise for this tutorial,",
      "start": 7920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I want you to write a program, to remove the duplicates on our list.",
      "start": 7924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Again, this is a fantastic exercise. So spend a few minutes on this and then",
      "start": 7928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "come back and continue watching.",
      "start": 7932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright let's say we have a list of numbers with",
      "start": 7936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a bunch of duplicates. So 2, 2, 4, 6,",
      "start": 7940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "6, 3, 4, 6, 1. We want to remove",
      "start": 7944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the duplicates. So we need to define another list",
      "start": 7948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's call that new list. Initially we",
      "start": 7952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "set it to an empty list. Then we need to iterate over",
      "start": 7956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our first list, get each item, and if we don't have that number",
      "start": 7960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this unix list, then we'll add it to this second list.",
      "start": 7964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "As simple as that. So, for number",
      "start": 7968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in numbers, now we need to check to see if we",
      "start": 7972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have this number in the second list. So we use the in",
      "start": 7976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "operator. If number not",
      "start": 7980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in units",
      "start": 7984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so if we don't have an operator in this units list,",
      "start": 7988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we'll need to add it, so units.",
      "start": 7992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "apphend number, that's all we have to do.",
      "start": 7996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let's go ahead and print the units list",
      "start": 8000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go. So you have 2, 4,",
      "start": 8004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "6, 3,and 1. The duplicates are removed.",
      "start": 8008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to talk to you guys about another important structure.",
      "start": 8016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in Python called tuple. Tuples are similar to lists",
      "start": 8020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we can use them to store a list of items. But unlike lists we can",
      "start": 8024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "not modify them, we cannot add new items, we cannot remove existing items, we",
      "start": 8028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tuples are immutable. We cannot mutate or change them. So",
      "start": 8032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let me show you. So I'm going to start by defining a list of numbers,",
      "start": 8036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1, 2, 3, 4, so we use square brackets to define lists and",
      "start": 8040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "parenthesis to define tuples, so if we change this to",
      "start": 8044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "parenthesis, 1, 2, 3. Now we have a",
      "start": 8048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tuple. So if we type numbers.",
      "start": 8052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "look here we don't have the append or insert methods, so we cannot add new items to this tuple.",
      "start": 8056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We also don't have remove clear and pop, we cannot",
      "start": 8060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "remove any of these items here. We only have two methods, count,",
      "start": 8064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and index. We use count to count the number of occurrences in an item,",
      "start": 8068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and index, to find the index of the first occurrence,",
      "start": 8072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of an item. So we can only get information about a tuple, we can't change it.",
      "start": 8076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And by the way, these other methods that you see here, they start",
      "start": 8080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with two underscores, we refer to these as magic methods, they're more of an advanced",
      "start": 8084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "topic, so they go beyond the scope of this tutorial. If you're interested",
      "start": 8088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to learn bout them. You can get my python course, I've covered them in detail.",
      "start": 8092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So similar to lists you can address individual items using",
      "start": 8096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "squre bracketts,s o we can get the first item like this and then",
      "start": 8100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print another terminal, there you go, the first item is 1,",
      "start": 8104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but if you try to change the first item we'll get an error, so,",
      "start": 8108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "numbers of 0, we set it to 10 and run our program",
      "start": 8112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go. We get this type error, because the tuple object",
      "start": 8116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "does not support item assignment. So we cannot",
      "start": 8120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "mutate or change tuples, they are immutable. Now practically",
      "start": 8124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "speaking, most of the time you'll be using lists, but tuples are also",
      "start": 8128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "useful. If you want to create a list of items and make sure",
      "start": 8132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "no where in your program you accidentally modify that list, then it's better to",
      "start": 8136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use a tuple,",
      "start": 8140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to show you a powerful",
      "start": 8144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "feature we have in python called unpacking.",
      "start": 8148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So lets find a tuple called coordinates",
      "start": 8152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and here we pass 3 values, 1, 2, 3. So you imagine these are",
      "start": 8156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the coordinates for x y and z. Now let's say",
      "start": 8160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we want to get these values and use them in a few expressions, a few complex",
      "start": 8164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "expressions in our program. Maybe we want to include them as part of a large",
      "start": 8168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "complex formula. So together we'll have to write code like this,",
      "start": 8172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "coordinates of 0, then let's say we want to multiply this",
      "start": 8176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "by coordinates of 1, and then multiply it by coordinates",
      "start": 8180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of 2, our code is getting a little bit too long, this is just",
      "start": 8184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a very simple example. But let's say we want to use these values in quite a few places",
      "start": 8188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in our program, a better approach is to get these values",
      "start": 8192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and store them in separate variables like we can get",
      "start": 8196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "coordinates of 0, and store it in x, then you can",
      "start": 8200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "get coordinates of 1 and store it in y.",
      "start": 8204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And similarly we get coordinates of 2,",
      "start": 8208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then store it in z. Now we started repeating coordinates of",
      "start": 8212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2 or coordinates of 0 multiple times, we can simply work with these",
      "start": 8216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "variables, x times y times z, that is better.",
      "start": 8220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Right? So nothing new so far. But in Python we have a powerful",
      "start": 8224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "feature called unpacking and with that we can achieve",
      "start": 8228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the same result with far less code. So we can define our variables",
      "start": 8232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x, y, and z. And set them to our",
      "start": 8236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tuple. What we have on line 6 is exactly",
      "start": 8240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "identical to what we have on lines 2-4.",
      "start": 8244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is a shorthand to achieve the same result.",
      "start": 8248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let me delete this and explain how this code works.",
      "start": 8252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "When Python interpreter sees this statement, it will get the",
      "start": 8256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first item in this tuple and assign it to the",
      "start": 8260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "variable. Then it will get the second item in this tuple, then",
      "start": 8264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "similarly we get the third item in this tuple and assign it to",
      "start": 8268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the third variable we have here, so we are unpacking",
      "start": 8272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this tuple into 3 variables. Now if we",
      "start": 8276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print x you can see x",
      "start": 8280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is 1, similarly y is 2, there you go.",
      "start": 8284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is unpacking. And by the way this is not",
      "start": 8288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "limited to tuples, we can use this feature for lists as well. So,",
      "start": 8292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if I change parenthesis to square brackets, now",
      "start": 8296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "coordinates is a list, so we can unpack our list into 3 variables",
      "start": 8300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we run our program we can see y is 2.",
      "start": 8304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to talk to you about dictionary",
      "start": 8312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in python. We use dictionaries in situations where we want to",
      "start": 8316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "store information that comes as key value pairs. Here's",
      "start": 8320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an example. Think of a customer. A customer has a bunch of attributes",
      "start": 8324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like name, email, phone number, address",
      "start": 8328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and so on. Now each of these attributes has a value.",
      "start": 8332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example the name can be jon smith the email can be",
      "start": 8336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "jon@ gmail.com the phone can be whatevr",
      "start": 8340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so what we have ere is a bunch of key value pairs. So in this",
      "start": 8344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "example, our keys are name, email, and phone,",
      "start": 8348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and each key is associated with a value. So this is where we use",
      "start": 8352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a dictionary. With a dictionary, we can store a bunch of key value pairs.",
      "start": 8356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let me show you how to define a dictionary in python.",
      "start": 8360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Back to our program, I'm going to define a variable, customer,",
      "start": 8364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and here we set it to curly braces. With these curly braces we can",
      "start": 8368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "define dictionary. In this example we have an empty dictionary that doesn't have",
      "start": 8372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "any key value pairs. Now we can add one or more key",
      "start": 8376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "value pairs in between the braces. So let's",
      "start": 8380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add a key value pair here, I'm going to set the key to a  name, and",
      "start": 8384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the value to John Smith, then we add a comma,",
      "start": 8388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to add another key value pair. So let's set age to",
      "start": 8392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "30 let's add another key value pair is",
      "start": 8396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "underline verified and we set this to a boolean.",
      "start": 8400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now what matters here is that these keys should be",
      "start": 8404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "unique. So if I add another key value pair here,",
      "start": 8408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "set age to 40, now look pycharm",
      "start": 8412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "has highlighted the age key, because we have duplicated that and",
      "start": 8416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that's not allowed. So each key should be unique in a dictionary, just like,",
      "start": 8420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the dictionaries we have in the real world, in a real dictionary we have a bunch of words",
      "start": 8424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and they're definition each word is only listed once in a dictionary.",
      "start": 8428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We don't have the word book twice. So let's delete the second",
      "start": 8432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "duplicate key value pair, so the keys should be unique,",
      "start": 8436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and in this example, I'm using strings, but they can also be",
      "start": 8440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "numbers, we're going to look at that later, but the value can be anything, it can be",
      "start": 8444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a string, a  number, a boolean, a list, literally anything.",
      "start": 8448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now we can access each item in this dictionary",
      "start": 8452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "using square brackets. So, we type customer,",
      "start": 8456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "square brackets and then specify key like name",
      "start": 8460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and this will return the value associated with",
      "start": 8464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the name key. Let's print it on the terminal, have a look,",
      "start": 8468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go, so, the name is John Smith, now",
      "start": 8472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what if we pass a key that doesn't exist, lets say first date.",
      "start": 8476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "You run the program, you get a key error because we don't have",
      "start": 8480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a key called birth date. Also, if we spell",
      "start": 8484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "name with let's say a capital N, we get the same",
      "start": 8488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "error because we don't have a key with the exact same sequence of",
      "start": 8492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "characters in this dictionary. Now to get around this we can",
      "start": 8496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use the get method, so instead of using the square brackets",
      "start": 8500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we call the get method and specify the key",
      "start": 8504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now if you use a key that doesn't exist here, it doesn't yell at us. For example,",
      "start": 8508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you pass birth date",
      "start": 8512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it simply returns the non value. Earlier I told you that none is an object",
      "start": 8516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that represents the absence of a value. So",
      "start": 8520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "instead of getting a key error we get none and we can also option",
      "start": 8524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "supply a default value, for example, if this dictionary doesn't have this",
      "start": 8528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "key, we can supply the default value, let's say",
      "start": 8532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "January 1st 1980. Let's run the program",
      "start": 8536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now instead of getting none we get this default value.",
      "start": 8540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, this is how we can access the value associated with the key",
      "start": 8544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in a dictionary. We can also update these values for example",
      "start": 8548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "before a print statement we can write code like this, customer of",
      "start": 8552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "name, let's update the name to jack",
      "start": 8556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "smith, now this little warning is telling us here we can put jac",
      "start": 8560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "smith here instead of defining it once, and then update",
      "start": 8564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it. Don't worry about them, it doesn't really matter. Now with this line if",
      "start": 8568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we print the name of this customer, we should see jack smith, let me show you.",
      "start": 8572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, I'm going to use the square bracket notation again, let's print",
      "start": 8576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the name of the customer you can see that is updated here,",
      "start": 8580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can also add a new key here, let's set the",
      "start": 8584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "birthdate to some value like january first",
      "start": 8588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1980. And then we can print it here,",
      "start": 8592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so as you see we can easily add new key value pairs",
      "start": 8596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to a dictionary. So this is the basics of using dictionaries",
      "start": 8600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in python. They're extremely important and they have a lot of applications in the real",
      "start": 8604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "world. Okay, here's an exercise for you. So here we have",
      "start": 8608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this program that asks our phone number. Let's type 1",
      "start": 8612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "234. We type it in digits and then this will translate",
      "start": 8616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it, to words, take a look. Enter, it prints, 1, 2, 3,",
      "start": 8620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "4. That's a pretty cool program, so go ahead and",
      "start": 8624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "spend a few minutes on this exercise, it's pretty easy, I will see you",
      "start": 8628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "next.",
      "start": 8632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, so first we need to get the users phone number, we call the input function",
      "start": 8636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with the label phone, we get the result and store it",
      "start": 8640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this variable, now let's say the user enters 123",
      "start": 8644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "4. So we need to look through this string, get each character and",
      "start": 8648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "translate it to a world, so what we need to implement this scenario.",
      "start": 8652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is a dictionary, because a dictionary is a structure that allows us to",
      "start": 8656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a key to a value. So we can have a dictionary with keys",
      "start": 8660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like 1234. And we map each of these keys",
      "start": 8664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to a word. So we cannot put digit 1 to",
      "start": 8668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the word 1 we can map 2",
      "start": 8672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to two you get the point. So let's define",
      "start": 8676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a dictionary, you can call it digits, underline mapping",
      "start": 8680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now this dictionary I'm going to add a few key value pairs.",
      "start": 8684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "One, we map it to 1, 2, we",
      "start": 8688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to 2, 3, to 3,",
      "start": 8692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and finally, 4 to 4. Now technically we should",
      "start": 8696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add all the digits from 0 to 9, but I don't want to waste all your time",
      "start": 8700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "typing repetitive things here, you got the point. So lets move on,",
      "start": 8704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we need to look through the phone string. So",
      "start": 8708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "4 character in phone, we get each",
      "start": 8712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "character and then use it to access a key value pair in",
      "start": 8716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "dictionary. So, digits underline mapping",
      "start": 8720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can use square brackets or call the get method,",
      "start": 8724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I would prefer to use the get method, so in case the user enters some character",
      "start": 8728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that is not part of our dictionary, our program is not going to yell at them.",
      "start": 8732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we call the gt method and pass this character",
      "start": 8736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a the key, and if we don't have this key, we can supply",
      "start": 8740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a default value like exclamation mark, so with this we get a word",
      "start": 8744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we need to add this word to an output string, so we can define",
      "start": 8748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an output string, initially we set it to an empty string,",
      "start": 8752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in each iteration we get this and add it to our output string.",
      "start": 8756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we type output, plus equals.",
      "start": 8760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This and we should also add a",
      "start": 8764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "space at get. So the words are not close to each other, okay?",
      "start": 8768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "That's all we have to do. Now finally let's print",
      "start": 8772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this output, run our program, so I want to",
      "start": 8776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "type 1, 3,4, 5, lets",
      "start": 8780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "see what we get. We get 1, 3, 4 with an exlamantion",
      "start": 8784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "mark.",
      "start": 8788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to show you something really cool",
      "start": 8792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that you can do with dictionaries, so here in this program you can type",
      "start": 8796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a message like good morning followed by a smiley face,",
      "start": 8800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when we press enter, we get this beautiful smiley face, or",
      "start": 8804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can type i am sad, with a  sad smiley face",
      "start": 8808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and it gets translated to this beautiful emoji.",
      "start": 8812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is another application if using dictionaries, we have a dictionary",
      "start": 8816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that maps these characters into smiley faces.",
      "start": 8820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So lets go ahead and build this program together, we start by",
      "start": 8824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "calling the input function, here we pass a greater than symbol",
      "start": 8828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as an indicator for the user to type a message, we give that message, store",
      "start": 8832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it here, as you know that is a string, now we need to",
      "start": 8836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "split this string by a space, so if the user types",
      "start": 8840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "good morning with a smiley face, we want to break this down into",
      "start": 8844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3 words, good morning, and smiley face.",
      "start": 8848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "To do that we can call the split method. So we call",
      "start": 8852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "message.split and pass",
      "start": 8856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a string with one space as a separator. What this method",
      "start": 8860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "does is basically it goes through this string and anywhere it finds this",
      "start": 8864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "character, in this case a space, it uses it as a boundary to",
      "start": 8868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "separate this string into multiple words. And then it will return",
      "start": 8872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a list. Let me show you. So let's store that here, words, and then",
      "start": 8876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Then print it on the terminal,",
      "start": 8880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's go ahead and run our program. So if you type good morning",
      "start": 8884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sunshine, enter, we get a list with three items",
      "start": 8888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "each item is a string, okay? Now,",
      "start": 8892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "back to our program, we need to define a dictionary for mapping special characters",
      "start": 8896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like these 2 into a smiley face, so,",
      "start": 8900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can call that emojis",
      "start": 8904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "set it to curly braces, here we add a key value pair,",
      "start": 8908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a smiley face, and we map that to a string,",
      "start": 8912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this string we want to add an emoji, if you're on a mac keyboard you can press",
      "start": 8916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "control command and space and this should bring up",
      "start": 8920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this emoji box, if you're on Windows honestly I",
      "start": 8924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "really don't know how you can do this, but there must be applications who do this for you. So lets go",
      "start": 8928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ahead and pick this happy smiley face, good,",
      "start": 8932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now lets add another key value pair, or sad face",
      "start": 8936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we map this to,",
      "start": 8940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this face here, good. So, we",
      "start": 8944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have a list of words now we need to look through this list, get",
      "start": 8948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "each word and potentially map it to an emoji.",
      "start": 8952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we can write a for loop for word in words,",
      "start": 8956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we want to go to our dictionary, and see if you have an item with this",
      "start": 8960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "word as the key. If you have an item with that key, we get",
      "start": 8964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's value, otherwise we want to use the same word. So if a user types",
      "start": 8968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "good morning, we don't want to translate those words, we just want to return those. So that is the case,",
      "start": 8972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "where we use the get method to supply a  default",
      "start": 8976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "value, so we wan to get an item with a key word, and",
      "start": 8980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if we don't have an item with that key, we simply use that word as",
      "start": 8984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the default value. Now similar to the exercise that we did in the last tutorial",
      "start": 8988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need an output variable. So let's define that here,",
      "start": 8992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "output set it to an empty string, now back to line",
      "start": 8996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "9, we get the return value of the get method,",
      "start": 9000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and add it to our output variable. So output",
      "start": 9004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "plus equals whatever we get from the get method, and finally",
      "start": 9008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to append a space at the end.",
      "start": 9012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "That's it, we're done. So let's print the output",
      "start": 9016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and run our program and I'm going to type good morning",
      "start": 9020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sunshine with a smiley face, we get that",
      "start": 9024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "beautiful, let's try the sad face as well, I am sad.",
      "start": 9028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Too bad. Beautiful! So as you can see",
      "start": 9032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "dictionaries have a lot of use cases in real applications.",
      "start": 9036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Here's a solution from the last tutorial where we created an emoji",
      "start": 9044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "converter. Now so far we have been writing all our code right here,",
      "start": 9048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in app,py, but as our programs grow we need a better way to organize our code.",
      "start": 9052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We need to break up our code into smaller, more manageable",
      "start": 9056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and more maintainable chunks which we call functions. So function",
      "start": 9060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is a container for a few lines of code that perform a specific",
      "start": 9064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "task for example you have learned about a few of the built in functions in",
      "start": 9068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python like print, and input, each of these functions",
      "start": 9072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have a purpose, they know how to perform a specific task. So when we",
      "start": 9076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "build large complex programs, we should break up our code into smaller",
      "start": 9080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "reusable chunks which we call functions to better organize our code.",
      "start": 9084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And that's what I'm going to show you in this tutorial. So let's write this simple",
      "start": 9088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program, for printing a greeting message. So we're going to do a print,",
      "start": 9092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "hi there, and lets add another message",
      "start": 9096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "welcome aboard. So here we have a simple",
      "start": 9100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program with only two lines of code. Now let's say these two lines",
      "start": 9104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "potentially we're going to need them in other programs so we can put them in a function that",
      "start": 9108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can reuse. Let me show you how to do that, so,",
      "start": 9112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we start typing out death, that is a reserve keyword in",
      "start": 9116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Python, and it's short for define. When Python interpreter sees this it",
      "start": 9120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "knows that we're defining a function, next we need to give our function",
      "start": 9124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a name, lets say greet_user.",
      "start": 9128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So all the best practices you learned about naming your variables also apply here,",
      "start": 9132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "which means we should name our functions with lower case characters",
      "start": 9136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if there are multiple words, we need to separate them using an underscore",
      "start": 9140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and you should always, always, always use meaningful",
      "start": 9144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "descriptive names for your functions. So, here we define a function",
      "start": 9148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "called greet user, after that we'll need to add parenthesis",
      "start": 9152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "followed by a colon. Now you know that whenever we add a colon at the end of a line",
      "start": 9156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're telling python that we're defining a block of code. So when we",
      "start": 9160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "press enter, the next line is indented. Now any code that we write here",
      "start": 9164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will belong to this function. So I'm going to move these two lines",
      "start": 9168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these two print statements inside of our function. You can simply",
      "start": 9172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "press tab to indent them, beautiful, also lets remove",
      "start": 9176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this extra line break, that is better, so these two lines",
      "start": 9180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now are part of our greet user function, so whenever we",
      "start": 9184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call this function, these two lines will be executed. Okay? Now,",
      "start": 9188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's remove indentation so here we are outside of our function,",
      "start": 9192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's do a print statement and print start",
      "start": 9196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "after that let's call our function, so greet user.",
      "start": 9200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And finally let's do another create statement and print",
      "start": 9204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "finish. Now we have this little warning here, this",
      "start": 9208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "underline, if you hover your mouse over this line, this tool was telling you",
      "start": 9212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that we should add two blank lines after a function definition. This is coming from",
      "start": 9216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pep8 which is a document that defines the best practices for",
      "start": 9220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "formatting our code. We'll look at that in the future. So for now to make pycharm",
      "start": 9224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "happy, lets add an extra line break to this function",
      "start": 9228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so whenever we define a function we need to add two lines breaks after.",
      "start": 9232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay? so, now let's run our program and see what happens.",
      "start": 9236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, so we have 4 messages on the terminal",
      "start": 9240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first we get the start message then we get the messages",
      "start": 9244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "coming from our create function, so either and welcome aboard, and finally we see",
      "start": 9248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the finished message. So let me explain the flow of our program",
      "start": 9252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when python runs this code it doesn't actually print these",
      "start": 9256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "two messages on the terminal because these two lines of code are inside",
      "start": 9260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of this function, so they would only get executed if we call",
      "start": 9264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this function. If we don't call this function, these lines don't get executed.",
      "start": 9268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay? So the execution of our program actually starts here,",
      "start": 9272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the first message that we see on the terminal is the start message. After",
      "start": 9276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that, Python sees that we are calling the greet function, so",
      "start": 9280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it will jump over here and then execute these two lines.",
      "start": 9284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Then, it will jump out of this function and continue the normal",
      "start": 9288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "execution of our program so it will print the finish message on the terminal.",
      "start": 9292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is how functions work. Also note that the order of this",
      "start": 9296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code matters, so here we're calling the greet function after",
      "start": 9300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "after we have defined it. If you try and call it before you define it you will see an error.",
      "start": 9304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example, if we call the greet",
      "start": 9308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "user function right here, see we immediately get this red underline",
      "start": 9312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "which says unresolved reference, greet user which basically",
      "start": 9316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "means python doesn't know what is this greet user, it's not defined anywhere.",
      "start": 9320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we always define our functions first, and then",
      "start": 9324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call them.",
      "start": 9328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Here's a function we created in the last tutorial",
      "start": 9332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now I got a question for you, what is the difference between",
      "start": 9336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "calling this functions nd the print function of python? The difference",
      "start": 9340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is that the print function takes some information, in this case",
      "start": 9344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the message that we want to print, but our greet function doesn't take",
      "start": 9348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "any information. Wouldn't it be nicer if you could pass the name of the user here and then",
      "start": 9352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "instead of saying hi there, you could print the name of the user. So,",
      "start": 9356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this tutorial, I'm going to show you how to pass information to your functions, and",
      "start": 9360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that is pretty easy, so back to the definition of our greet",
      "start": 9364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "user function, inside of these parenthesis, we can add parameters",
      "start": 9368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these parameters are pale holders for receiving information.",
      "start": 9372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example, you can add a name parameter, and we can pass the",
      "start": 9376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "name of the user when calling this function. So let's pass Jon",
      "start": 9380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here, now when we call this function and pass this value",
      "start": 9384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this name parameter will be set to Jon. So it",
      "start": 9388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will act like a local variable that we defined inside of this function.",
      "start": 9392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Just imagine, we didn't have this parameter, and instead we had",
      "start": 9396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a variable like name that was set to jump. Now here we could simply",
      "start": 9400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print the name of this user, so we could use a formatted string,",
      "start": 9404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and print the value of the name variable, right? Now,",
      "start": 9408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we don't really have this local variable defined in this function",
      "start": 9412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we have a parameter, it's exactly the same thing. So",
      "start": 9416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with these parameters we can receive information in our functions. Now let's go ahead and",
      "start": 9420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run this program, so take a look.",
      "start": 9424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We get Hi John welcome aboard, we can take this to the next",
      "start": 9428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "level. Now we can call this function one more time. So",
      "start": 9432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "greet user, and this time supply a different name. Let's say Mary.",
      "start": 9436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we are reusing our greet function and passing it a different",
      "start": 9440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "value. Imagine if we didn't have this function you would have to",
      "start": 9444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "repeat this line twice , once for hi jon and another time for hi mary.",
      "start": 9448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is the benefit of defining functions, we can take a few",
      "start": 9452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "lines of code that have a specific purpose and put them inside of a",
      "start": 9456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "function, so now let's run our program one more time",
      "start": 9460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go. So you get hi job, welcome aboard, then you get hi mary",
      "start": 9464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "welcome aboard. Now note that when a function has a parameter",
      "start": 9468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we are obligated to pass a value for that parameter.",
      "start": 9472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So if you remove jon from here and run",
      "start": 9476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our program, we get this type error, greet user,",
      "start": 9480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "missing one required positional argument.",
      "start": 9484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Argument in programming is the value that we supply to a function, so",
      "start": 9488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "back to this example, marrying this case is an",
      "start": 9492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "argument that we pass to the name parameter. And lot of",
      "start": 9496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "programmers don't know the difference between parameters and arguments and think they are the same.",
      "start": 9500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But they are not, parameters are the holes or placeholders",
      "start": 9504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that we define in our function for receiving information,",
      "start": 9508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "arguments are the actual pieces of information that we supply to these functions.",
      "start": 9512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay? So, let's bring back",
      "start": 9516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this jon string, now we can also define multiple",
      "start": 9520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "parameters, for example, let's rename this parameter to first name as I told",
      "start": 9524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you before, you can right click here, go to refactor and then",
      "start": 9528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "rename, or preferably you can use a short cut. So the shortcut for",
      "start": 9532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this on Mac is shift and f6.",
      "start": 9536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And this brings up the renamed dial up box, here we can change this to first",
      "start": 9540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "underline name. Now we can add a second parameter",
      "start": 9544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so comma followed by last underline name",
      "start": 9548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so back to our formatted string, let's also print",
      "start": 9552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the last name, beautiful, so here when calling this function,",
      "start": 9556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we can supply another argument so jon",
      "start": 9560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "smith and lets delete this line we don't really need it anymore",
      "start": 9564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run our program, take a look, hi jon smith,",
      "start": 9568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so in the last tutorial you learned that whenever",
      "start": 9576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we define parameters for our functions we should always supply",
      "start": 9580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "values otherwise we'll get an error. Let's look at that error one more time.",
      "start": 9584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So In going to delete this second argument and only pass jon.",
      "start": 9588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Run our program, we get this message,",
      "start": 9592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "greet user missing one required, position",
      "start": 9596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "argument. So these arguments that you have here like jon",
      "start": 9600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and smith you refer to these as positional arguments.",
      "start": 9604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Which means their position or argument matters. In other",
      "start": 9608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "words, the first argument we add here is the value or the first parameter",
      "start": 9612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and the second argument is the value for the second parameter.",
      "start": 9616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So if you change their position or order, we'll get different results.",
      "start": 9620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's take a look. Let's pass smith first and then",
      "start": 9624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "jon. Okay, good, delete, now let's",
      "start": 9628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "go with this, so instead of getting Hi Jon Smith,",
      "start": 9632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get hi smith jon. So that is the reason we refer",
      "start": 9636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to these arguments as positional arguments, they're positioned or",
      "start": 9640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "order matters. But in python we also have keyword arguments, and",
      "start": 9644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with those the position doesn't matter. Let me show you how they work. So,",
      "start": 9648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's say here you want to pass Jon as the value for the first",
      "start": 9652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "name parameter. We can simply specify that here. So first name",
      "start": 9656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "equals jon. Now what we have here is a keyword argument.",
      "start": 9660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the key word argument. So this combination of having the parameter name,",
      "start": 9664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "followed by it's value is what we call a keyword argument, and what we get with this keyword",
      "start": 9668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "argument the position doesn't really matter. So here we're supplying",
      "start": 9672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Jon as an argument fort he first parameter. Now similarly,",
      "start": 9676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can use a keyword argument for smith, so last",
      "start": 9680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "name equals smith, so that we have 2",
      "start": 9684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "keyword arguments. So with these keyword arguments we don't have to worry about",
      "start": 9688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the order of the parameters. Now that doesn't mean we should always use keyword arguments.",
      "start": 9692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Not really. Most of the time we use positional arguments, but",
      "start": 9696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in certain situations these keyword arguments helming us improve",
      "start": 9700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the readability of our code. So on line 7 it's quite clear",
      "start": 9704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that we are supplying smith as the last name and jon",
      "start": 9708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as the first name. Now in this particular example, even if we didn't have",
      "start": 9712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the keyword arguments, just passing two positional arguments like jon",
      "start": 9716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and smith, would be sufficient, because it's easy to guess",
      "start": 9720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what is the purpose of these arguments. But sometimes you're dealing with functions",
      "start": 9724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and you're passing numerical values to them, in those situations",
      "start": 9728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it may not be quite clear what those values represent. Let me show you an example.",
      "start": 9732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's say we have a function for calculating the total cost of an order,",
      "start": 9736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we still call that calculate, underline cost,",
      "start": 9740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so when calling this function, you need to supply three pieces of information.",
      "start": 9744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "One is the total cost of all the order items lets say 50",
      "start": 9748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "dollars. The other is the shipping cost, let's say",
      "start": 9752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "5 dollars, and the last piece is discount, let's say 0,",
      "start": 9756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".1. Someone reading this code, may not be sure",
      "start": 9760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what these three values represent, in this case, we can improve",
      "start": 9764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the readability of this code, by using keyword arguments. So we can",
      "start": 9768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "prefix each value with the name of parameter they target, for example,",
      "start": 9772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can set total to 50 and then",
      "start": 9776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shipping to 5, and then discount to 0.1.",
      "start": 9780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now if you give this code to someone else, they",
      "start": 9784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "can immediately tell what these values represent. So that is the power",
      "start": 9788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of keyword arguments. So here's what I want you to take away.",
      "start": 9792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For the most part, use positional arguments, but if you're dealing with",
      "start": 9796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "functions that take numerical values, see if you can improve the",
      "start": 9800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "readability of your code by using keyword arguments. You simply",
      "start": 9804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "prefix the arguments that you pass with the name of their parameters and this will",
      "start": 9808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "increase the readability of your code. Now there is one more thing you need to know about",
      "start": 9812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "keyword arguments. These keyword arguments should always come after",
      "start": 9816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "positional arguments. Let me show you what I mean. So,",
      "start": 9820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "back to our simple greet user function, let's use a keyword argument",
      "start": 9824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for the first thing. So, let's set",
      "start": 9828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first name to jon and see what happens. So we immediately get this error and",
      "start": 9832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "positional argument after keyword argument.",
      "start": 9836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So when calling this function we're supplying one keyword argument",
      "start": 9840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and one positional argument, and python doesn't like this. So,",
      "start": 9844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you're mixing positional and keyword arguments, you should always use",
      "start": 9848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then the keyword arguments.",
      "start": 9852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In other words, lets remove this keyword argument here,",
      "start": 9856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so jon is now a positional argument, is targeting the first",
      "start": 9860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "parameter. Now after this positional argument we can",
      "start": 9864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "supply any number of keyword arguments, so if you set last name to smith",
      "start": 9868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "look, python doesn't have any problem with this because we are adding",
      "start": 9872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a keyword argument after a positional argument.",
      "start": 9876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let's quickly recap, for the most part use positional arguments",
      "start": 9880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you're dealing with functions that take multiple numerical values",
      "start": 9884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and it's not quite clear what those values represent, use keyword arguments",
      "start": 9888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to improve the readability of your code, and finally if",
      "start": 9892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "your passing both positional and keyword arguments, use the",
      "start": 9896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "keyword arguments after the positional arguments.",
      "start": 9900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So far you have learned how to create functions and send them information using",
      "start": 9908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "their parameters in this tutorial I'm going to show you how to create functions that return",
      "start": 9912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "values, this is particularly useful if you're doing some kind of",
      "start": 9916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "calculation your function and you want to return the result to whoever is using your",
      "start": 9920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "function. let me show you. So let's start by defining a",
      "start": 9924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "function, called square, this function simply calculates",
      "start": 9928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the square of a number. So we need to add one parameter here,",
      "start": 9932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that is is our number, now here we want to calculate number",
      "start": 9936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "times number, that is the square of a number.",
      "start": 9940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now to return this color outside of this function we simply",
      "start": 9944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use the return statement. So return. Now,",
      "start": 9948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our square function is very simple, it only had one line of code.",
      "start": 9952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But in a real program, you might have a function that has ten lines of code to calculate",
      "start": 9956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "something. So, this return statement is very",
      "start": 9960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "valuable. So now we can return values to the caller of our function.",
      "start": 9964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, with this, when we call the square function,",
      "start": 9968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's say we give it 3, now this function returns a value,",
      "start": 9972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "just like an input function of python, this input function",
      "start": 9976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "waits for the user to type something and press enter and then it will",
      "start": 9980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "return the user's input as a string so we can get it",
      "start": 9984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and store it in a variable like this, right? We have the same story with our",
      "start": 9988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "story, with our square function. So our square function returns the value",
      "start": 9992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can simply get it and store it in a variable. Let's call that",
      "start": 9996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "result. Now, we can print",
      "start": 10000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "result on the terminal, there you go, so result is 9,",
      "start": 10004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we could also pass this function called",
      "start": 10008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "directly inside of the print function without defining a separate variable.",
      "start": 10012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Sometimes this is useful for writing shorter code, so in this case.",
      "start": 10016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, in this case, we don't really need this result variable. We simply want to print",
      "start": 10020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the square of 3. So, we could simply pass this function",
      "start": 10024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call right here, as an argument for the print",
      "start": 10028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "function. So let's delete this variable now our code is",
      "start": 10032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shorter so with this we're calling the square function, this returns a",
      "start": 10036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "value and we'll pass that value as an argument to the print function.",
      "start": 10040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay? When we run this program, we get the exact same",
      "start": 10044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "result. There you go. Now what happens if we don't",
      "start": 10048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use a return statement in our function. So in the last example we simply used",
      "start": 10052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a print statement. Let's temporarily remove",
      "start": 10056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this return statement and print the result",
      "start": 10060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on the terminal. Like this. So let's run our program",
      "start": 10064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one more time and see what we get. We see two things, the number",
      "start": 10068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "9, and none. What is happening here? Well",
      "start": 10072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when Python interpreter executes this code, first it will call",
      "start": 10076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the square function. So the control moves to the square function",
      "start": 10080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here we calculate the square of this given number and then print it",
      "start": 10084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on the terminal. That is the reason we see 9 right here,",
      "start": 10088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now, by default, all functions return the value",
      "start": 10092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "none. So if we don't have a return statement",
      "start": 10096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here, by default python returns none. None",
      "start": 10100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is an object that represents the absence of a value, it's like nothing",
      "start": 10104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or null i c, c++ java and Javascript.",
      "start": 10108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, in this example, we didn't have a return statement, and",
      "start": 10112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "by default python returned none from this function.",
      "start": 10116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, after this square function is executed, the value none",
      "start": 10120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is returned and passed as an argument to the print function, that is the reason",
      "start": 10124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we see none on the second line. So here are the two things",
      "start": 10128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you need to take away from this tutorial. By default all functions in Python",
      "start": 10132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "return none. You can change that, so if you have a function that",
      "start": 10136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "calculates something, you can return the result using the return statement.",
      "start": 10140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Here's the code for our emoji converter program that we wrote earlier.",
      "start": 10148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "If you missed that tutorial, make sure to go back and watch it, as",
      "start": 10152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I told you before, there is a table of content right below this video in the",
      "start": 10156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "description. So we can simply click on the emoji converter tutorial to watch it.",
      "start": 10160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, your exercise is to reorganize this code using a function.",
      "start": 10164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So I want you to extract a function in this code, because this algorithm",
      "start": 10168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for converting these smiley faces into emoji's is something that",
      "start": 10172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we probably want to use in a couple different applications. We can use it in a chat",
      "start": 10176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "application in an email application and so on. We don't want to write all this code every time",
      "start": 10180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we want to convert these characters into smiley faces.",
      "start": 10184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, out of all these lines of code that we have from line 1 to",
      "start": 10188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "line 10, the lines 10-2 belong to our",
      "start": 10192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "algorithm, all these lines together implement this feature.",
      "start": 10196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, you should put these lines in a separate function,",
      "start": 10200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, why don't we have the input in this function? Because",
      "start": 10204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the input will can come in different forms, currently we're using the import function",
      "start": 10208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to receive the input from the terminal, but in other applications",
      "start": 10212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we might receive the input from a graphical user interface, so the input can come in",
      "start": 10216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "different forms. We don't want to put that in our function, because this line will not be reuseable.",
      "start": 10220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "You want to give our function the actual message,",
      "start": 10224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as a string. We don't care how we got that message. In one",
      "start": 10228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program you might get it from the terminal, in another program you might get it from",
      "start": 10232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a graphical user interface. So that is the reason this line up code should not",
      "start": 10236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "be in that function. By the same function, you shouldn't include",
      "start": 10240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the last line in that function because what we do with the output is different from",
      "start": 10244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one program to another. In this program, we are printing the output",
      "start": 10248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in another program, you might send an output as an email, or as a response in",
      "start": 10252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a chat application, so as a general rule of thumb you're function should",
      "start": 10256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "not worry about receiving input and",
      "start": 10260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "printing it. These lines of code should not belong to your functions. So go",
      "start": 10264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ahead and reorganize this code by extracting a function.",
      "start": 10268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, on the top, first we need to define our function. So first we type",
      "start": 10276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "def, give our function a name like emoji_",
      "start": 10280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "converter, so the name of this function clearly tells me what",
      "start": 10284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it does. Each function should be responsible for one and only one task,",
      "start": 10288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and that task should be clearly explained in the name of the function.",
      "start": 10292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, our emoji converter function should take",
      "start": 10296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a parameter, we call that message, that is a string, right? Colon",
      "start": 10300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we need to move the lines",
      "start": 10304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "5 all the way to the end of our for block",
      "start": 10308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "into the function, so let's select all these lines, you can",
      "start": 10312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "cut them from here, by pressing command and x on Mac, or",
      "start": 10316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "control and x on Windows, then we paste it here,",
      "start": 10320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as you can see these lines are automatically indented",
      "start": 10324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, they are part of the emoji converter function, if this didn't happen on your",
      "start": 10328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "computer, make sure to select these lines and use the",
      "start": 10332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tab to indent them. Alright, so here's our emoji converter function",
      "start": 10336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "beautiful. Now after that",
      "start": 10340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the main flow of our program, first we get the input from the user",
      "start": 10344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we store it in this variable message and then we call",
      "start": 10348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "emoji converter and pass this message,",
      "start": 10352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this function should return a value, that is what we use to calculate",
      "start": 10356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the end of this function, so right after this for block we need to add",
      "start": 10360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a return statement, return output,",
      "start": 10364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now that our function returns a value, we can get it and store it",
      "start": 10368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in a separate variable, let's call that result",
      "start": 10372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then we can simply print that here, or",
      "start": 10376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can make this code shorter, we don't really need this code here so we can simply",
      "start": 10380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call the emoji converter, and print the result.",
      "start": 10384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Like this. Now here we have an underline because",
      "start": 10388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as I told you before we need to blank lines after",
      "start": 10392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our function definitions. So currently we have only one blank line",
      "start": 10396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to add another black line, good, let's go ahead,",
      "start": 10400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and run this program, and make sure everything works as before",
      "start": 10404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so I'm going to type a message like good morning with a smiley face",
      "start": 10408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "good, let's run it one more time, times that,",
      "start": 10412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to add okay beautiful, so, here's the",
      "start": 10416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "final result, we defined this function called",
      "start": 10420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "emoji converter, this function takes a parameter called message.",
      "start": 10424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And finally returns the output.",
      "start": 10428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to teach you how to handle errors in your",
      "start": 10436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python programs, so let's start by writing  a small program",
      "start": 10440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to get the user age from the terminal. So we call the input variable",
      "start": 10444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "input, and a label here,",
      "start": 10448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like age, this returns a string, so we need to pass it to",
      "start": 10452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the end funciton and store the result in",
      "start": 10456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a variable called age, now let's print age to make sure you have",
      "start": 10460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "implemented everything properly we run our program, we type",
      "start": 10464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "20, 20 is printed here, beautiful, now look at",
      "start": 10468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the exit code of this program, exit code 0 means",
      "start": 10472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our program terminated successfully, there were no errors, but what if",
      "start": 10476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we run this program one more time and instead of entering",
      "start": 10480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a numerical value, we enter something like asd.",
      "start": 10484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We get a value error with his message invalid literal",
      "start": 10488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for int with base 10. Basically what this message is telling",
      "start": 10492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "us is that this string asd does not contain",
      "start": 10496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a valid home number that can be converted to an integer. Now look at the exit",
      "start": 10500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code of this program, exit code 1 means our exit code crashed,",
      "start": 10504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so 0 always means success and anything but 0 means crash",
      "start": 10508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now as a good python programmer you should anticipate this situation.",
      "start": 10512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "You don't want to let your entire program crash just because the user entered",
      "start": 10516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an invalid value. So instead of letting the program",
      "start": 10520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "crash you should handle the situation and print a proper error message, and",
      "start": 10524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that's what I'm going to show you in this tutorial, now before we get any further",
      "start": 10528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "look at the type of error we get here, value error,",
      "start": 10532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so remember this, we're going to get back to this shortly",
      "start": 10536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now how can we handle these errors, in python we have a construct called",
      "start": 10540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "try accept we use that to handle errors.",
      "start": 10544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let me show you how it works. So on the top",
      "start": 10548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we type try: now as you know we are defining",
      "start": 10552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a code block so, I'm going to move these two lines,",
      "start": 10556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "inside of our try block so press tab here.",
      "start": 10560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And remove this black line, now these two lines are part of our",
      "start": 10564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "try block, right? So after try we type",
      "start": 10568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "accept, and then we add the type of the error",
      "start": 10572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that our program may encounter, that is value error",
      "start": 10576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "okay? Then, we add a colon and in this block we can",
      "start": 10580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "define what should happen if our program encounters",
      "start": 10584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an error of type value error. In this case we want to print",
      "start": 10588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a proper error message, so print,",
      "start": 10592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "invalid value. So with this try and accept we are telling python",
      "start": 10596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "hey, go ahead and try running one or these two lines of code,",
      "start": 10600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you encounter, an error of type. Value error",
      "start": 10604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then instead of crashing the program, try this error message on the terminal",
      "start": 10608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so this is how this works. Now more accurately in programming",
      "start": 10612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we reefer to this kind of error as an exception. So an exception",
      "start": 10616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is a kind of error that crashes our program. So our",
      "start": 10620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "user enters an invalid value, this line of code",
      "start": 10624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in line 2 will raise an exception, and on line 4 will catch it",
      "start": 10628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and print this error message, so our program will no longer",
      "start": 10632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "crash. Let me show you. So let's go ahead and run this",
      "start": 10636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "age 20, everything",
      "start": 10640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "works just like before and the exit code is 0, let's",
      "start": 10644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "rerun this program, and enter asd,",
      "start": 10648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we get this proper error message invalid error menu and once again",
      "start": 10652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the exit code is 0, so that means our program completed successfully.",
      "start": 10656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Didn't crash, now, we can also handle different kinds of",
      "start": 10660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "errors or exceptions, for example right when we get the age",
      "start": 10664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's define a variable income and set it to 20,000.",
      "start": 10668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And then define another variable called risk and set it",
      "start": 10672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to income divided by age.",
      "start": 10676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's run this program and enter 0 as the game to see what happened.",
      "start": 10680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So 0 is obviously a numerical value",
      "start": 10684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so when we enter this value, technically we shouldn't get any exceptions.",
      "start": 10688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Take a look. Our program crashed, we",
      "start": 10692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "did a 0 division error, because we cannot divide a number by 0.",
      "start": 10696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Once again look at the exit code, so we couldn't catch this kind of error or",
      "start": 10700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this kind of exception with this accept block.",
      "start": 10704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Accept block is only cashing exceptions of type value",
      "start": 10708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "error. And this happens when we try to convert a nonnumerical value,",
      "start": 10712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to an integer. So in a situation like this. We should handle",
      "start": 10716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "different kinds of exceptions, we can add another",
      "start": 10720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "except statement for an exception of type 0",
      "start": 10724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "division error. Now in this block we can print a",
      "start": 10728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "different kind of message, like age cannot be",
      "start": 10732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "0. Let's run our program one more time. Now,",
      "start": 10736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I'm going to enter 0 as the age so we get this",
      "start": 10740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "error message age cannot be 0 and look at the exit code.",
      "start": 10744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "It's 0, so our program didn't crash, so to recap, we",
      "start": 10748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "`used try accept blocks to handle exceptions that are",
      "start": 10752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "raised in our programs, as a good programmer you should always anticipate",
      "start": 10756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these kind of exceptions and handle them properly.",
      "start": 10760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to talk to you guys about comments in python.",
      "start": 10768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We use comments to add notes or comments to our programs.",
      "start": 10772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example, here I'm going to make a print statement,",
      "start": 10776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sky is blue. Now, before that, I",
      "start": 10780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "can add a comment using a hi sign and then whatever we type here",
      "start": 10784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is going to get ignored it's not going to get executed. Let me show you so",
      "start": 10788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's run this program, look we only see this",
      "start": 10792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "message. Sky is blue. So with this comment we can explain",
      "start": 10796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "something about our code, we can use it as reminders to fix things or",
      "start": 10800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "clear things up, or we can use it to communicate things with other developers",
      "start": 10804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "reading our code, why we have written this code in a certain way.",
      "start": 10808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "These are good use cases for using comments, we can also",
      "start": 10812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have comments over multiple lines, so we can simply add more",
      "start": 10816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "comments, each line should start with a new hi sign. Now",
      "start": 10820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one thing you need to avoid when using comments is explaining what the",
      "start": 10824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code does. So here's an example of a bad comment.",
      "start": 10828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let me just delete these two lines, and with this comment I'm going to",
      "start": 10832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "say print sky is blue. Why",
      "start": 10836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is this a bad comment, because it's telling me the obvious, it's telling me",
      "start": 10840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this slide is going to print sky is blue. Now the problem with this comment is",
      "start": 10844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that apart from being verbose and repetitive, if you come here,",
      "start": 10848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and change sky to ocean, now this comment gets",
      "start": 10852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "outdated. So overtime we change this code, then we have to come back and",
      "start": 10856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "modify the corresponding comment. So I've seen some developers",
      "start": 10860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add comments in front of their functions, for example, they define",
      "start": 10864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a function let's say a square that takes a number",
      "start": 10868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and simply returns number times number.",
      "start": 10872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But it is obvious that this function calculates and returns the",
      "start": 10876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "square of the given number. So there is really no need to add a comment and",
      "start": 10880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "explain that. Calculates and returns the",
      "start": 10884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "square of a number. This is very repetitive and it creates",
      "start": 10888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "noiser code. Someone else reading your code they get distracted with all",
      "start": 10892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these unnecessary comments, so use comments to explain whys and hows.",
      "start": 10896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Not why's if you have made certain assumptions, we can use",
      "start": 10900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "comments to explain those assumptions. Or we can use them to add notes to remind yourself",
      "start": 10904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or other developers to do something in the code.",
      "start": 10908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So comments are good, but too much of a good thing is a bad thing.",
      "start": 10912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to talk to you guys about classes in python.",
      "start": 10920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Classes are extremely important in programming and they're not",
      "start": 10924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "specific to python, in fact, a lot of other programming languages",
      "start": 10928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "do support the notion of classes. We use classes to define new types.",
      "start": 10932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example, so far you have learned about the basic types in Python",
      "start": 10936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like numbers, strings, and booleans,",
      "start": 10940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these are the basic or simple types in python, you also learn",
      "start": 10944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "about a couple of complex types like lists and",
      "start": 10948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "dictionaries. While these types are extremely useful, they cannot",
      "start": 10952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "always be used to model complex concepts, for example, think about",
      "start": 10956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the concept of a point, or a shopping cart. A shopping cart is not",
      "start": 10960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a boolean, it's not a list, it's not a dictionary, it's a different kind of",
      "start": 10964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "thing. So we can use classes to define new types to",
      "start": 10968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "model real concepts. Now in this new model I'm going to show you how to",
      "start": 10972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "define a new type called point, and this new type is going to have methods",
      "start": 10976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for working with points. For example, back to our main program. Let's",
      "start": 10980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "create a list, numbers, 1, 2, 3,",
      "start": 10984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you know that here, when we type that dot,",
      "start": 10988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "functions or methods available in list objects, now similar to this,",
      "start": 10992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're going to create a new type called point, this point is",
      "start": 10996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "going to have metas like move, draw, get,",
      "start": 11000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "distance from another point, these are the operations that we can",
      "start": 11004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "perform on points. So let me show you how to do this.",
      "start": 11008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We start by defining a class by using the class keyword,",
      "start": 11012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and right after that we give our class a name. Now look at the",
      "start": 11016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "naming convention I've used here. I've capitalized the first letter here, this is what we call",
      "start": 11020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a pascal naming convention. So the naming convention we",
      "start": 11024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "used for naming our classes is different from the convention we use for naming",
      "start": 11028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our variables and functions. For variables and functions we always",
      "start": 11032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use lower case letters and we separate multiple words using",
      "start": 11036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an underscore. But when naming classes, we don't use an underscore",
      "start": 11040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to separate multiple words, instead we capitalize",
      "start": 11044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the first letter of every word. So in this case our class has only a single",
      "start": 11048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "word, if you had multiple words, let's say email client",
      "start": 11052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "look I've capitalized the first letter",
      "start": 11056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of every word. Once again, this is called pascal naming convention",
      "start": 11060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and it comes from the old pascal language that you might have heard of.",
      "start": 11064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, back to our point class. Here we add",
      "start": 11068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a colon which means we're going to define a block, now",
      "start": 11072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this block we can define all the functions or methods that belong",
      "start": 11076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to points, for example, we can define a function called",
      "start": 11080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "move for moving a port, now note that as soon as we",
      "start": 11084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "type open parenthesis, pycharm automatically adds self here,",
      "start": 11088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is a special keyword and we're going to get back to this shortly.",
      "start": 11092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, for now, in this method, let's print",
      "start": 11096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "move on the terminal, now let's define another",
      "start": 11100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "method like draw, so define draw",
      "start": 11104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and in this method, let's print draw on the terminal, now",
      "start": 11108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's remove the indentation, we're done",
      "start": 11112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with the definition of our point class, so we need to add two line breaks",
      "start": 11116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "okay, so with this class we defined a new",
      "start": 11120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "type with this new type we can create new objects, so",
      "start": 11124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an object is an instance of a class, a class simply defines",
      "start": 11128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the blueprint or the template for creating objects, and",
      "start": 11132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "objects are the actual instances based on that blue print.",
      "start": 11136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we can have tens of hundreds of points on the screen, these are the",
      "start": 11140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "objects or the instances. So to create an object,",
      "start": 11144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we type out the name of our class and then call it like a function",
      "start": 11148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this creates a new object and then returns it. So then we can store",
      "start": 11152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that object in a variable, let's call that point 1,",
      "start": 11156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go, now when we use the dot operator.",
      "start": 11160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Look, we have these two methods that we",
      "start": 11164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "defined, draw and move, we also have a bunch of other methods that we",
      "start": 11168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "start with two underscores, these are called magic methods",
      "start": 11172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we'll look at them later in the course. Now, let's call the draw method",
      "start": 11176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of our point object, and run our program",
      "start": 11180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so you can see draw is printed on the terminal. Now",
      "start": 11184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "apart from methods these objects can also have attributes and these attributes",
      "start": 11188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "are like variables that belong to a particular object. For example,",
      "start": 11192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here, after we've defined .1.",
      "start": 11196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can set .1.x to",
      "start": 11200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "10. And .1.1 to 20.",
      "start": 11204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now we can easily print out these attributes, let's print",
      "start": 11208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".1.x and run our program one more time",
      "start": 11212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "take a look, so the x coordinate of .1 is 10.",
      "start": 11216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now we can create another object, let's call that.2",
      "start": 11220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so .2 once again we type out the name",
      "start": 11224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of our class and then call it like a function. Now this object is completely",
      "start": 11228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "different then the first object. So if you print",
      "start": 11232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".2.x",
      "start": 11236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "look we get this attribute error, because this point object doesn't have an",
      "start": 11240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "attribute called, so each object is a different",
      "start": 11244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "instance of our points class. Now here",
      "start": 11248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can assign a value to .2.x. Let's",
      "start": 11252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "send that to 1, and then run our program so we can see the",
      "start": 11256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x coordinates of .2 is 1. So to recap",
      "start": 11260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we use classes to define new types, these types can have",
      "start": 11264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "methods that we define in the body of the class and they can also",
      "start": 11268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have attributes that we can set anywhere in our programs.",
      "start": 11272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "You have learned how to create new types using classes",
      "start": 11280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now therein a tiny problem in this implementation.",
      "start": 11284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can create a pooint object without an x or y coordinate",
      "start": 11288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let me show you. So point we create this",
      "start": 11292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "object here, and before we set point.x let's",
      "start": 11296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print point .x run our program",
      "start": 11300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get this attribute error which you",
      "start": 11304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "saw in the last tutorial, so point object has no attribute called x",
      "start": 11308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This is the problem we have here, it is possible,",
      "start": 11312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to have a point object without an x or y coordinates.",
      "start": 11316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And that doesn't really make sense, because whenever we talk about a point,",
      "start": 11320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we ned to know where that point is located. To solve this problem, we",
      "start": 11324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use a constructor. A constructor is a function that gets called",
      "start": 11328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "at the time of creating an object. So here on line 9, when creating this",
      "start": 11332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "point object, we want to pass values for x or y",
      "start": 11336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "coordinates, let's say 10 and 20, and with this,",
      "start": 11340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this point object that we get here, will have it's",
      "start": 11344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x and y coordinates initialized. So how do we do this?",
      "start": 11348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We need to add a special method in this class called constructor.",
      "start": 11352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, on the top, I define a new function,",
      "start": 11356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "look at the name of this function, double underscore init, double under",
      "start": 11360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "score. So init is short for initialized, and this is the",
      "start": 11364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "function or the method that gets called when we create a new point object.",
      "start": 11368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, press enter, so this automatically adds,",
      "start": 11372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "self in parenthesis, we're going to come back to this shortly.",
      "start": 11376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, right after self, we want to add 2 extra parameters,",
      "start": 11380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x and y, so let's type out x and y,",
      "start": 11384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then in the body of this method, we should read the values past",
      "start": 11388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here, and use them to initialize our object, so when we pass",
      "start": 11392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "10 and 20, these arguments will be used for",
      "start": 11396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x and y parameters. Now to initialize",
      "start": 11400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our object, we type our code like this. Self.x equals",
      "start": 11404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x. And then self.y equals y.",
      "start": 11408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "What is going on here, this self that you see here is a reference to the current",
      "start": 11412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "object. So, back to line 13,",
      "start": 11416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when we create a new point object, self references that object in",
      "start": 11420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "memory, the same object, that we're referencing using this cariable.",
      "start": 11424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So earlier we typed point.x equals 10,",
      "start": 11428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with this code we set the x attribute of this point object.",
      "start": 11432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now what we have in the constructor is exactly the same, we use the self",
      "start": 11436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to reference the current object and then we set the x attribute",
      "start": 11440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to the x argument passed to this function. So,",
      "start": 11444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "using this init method, we can initialize our objects and",
      "start": 11448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we refer to this method as a constructor, this method is used to construct",
      "start": 11452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or create an object, okay? so,",
      "start": 11456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, let's remove line 14, so we created",
      "start": 11460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "point object with these values and then print point.x let's run our program",
      "start": 11464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go, x is 10, we can also change",
      "start": 11468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these values later, so just before printing point.x we can set",
      "start": 11472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "point.x to 11 and then run our program",
      "start": 11476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so x is updated, beautiful, alright, here's a",
      "start": 11480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "exercise for you. I want you to define a new type called person",
      "start": 11484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these person objects should have a name attribute as well as a talk",
      "start": 11488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "method. This is a very easy exercise so,",
      "start": 11492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you can tackle it in probably a couple of minutes.",
      "start": 11496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, so",
      "start": 11500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first we start with a  class keyboard, we define this person class",
      "start": 11504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "once again look at the naming convention I have used here, the first letter",
      "start": 11508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of the first word in this case the only word is uppercase.",
      "start": 11512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, in this class we define all the methods we need, currently we only have",
      "start": 11516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "method that is the talk method, so define talk,",
      "start": 11520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pycharm automatically adds self, we come back to this shortly,",
      "start": 11524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for now let's just print talk.",
      "start": 11528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is the body of our person class. We remove the indentation",
      "start": 11532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and add two line breaks after defining our",
      "start": 11536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "classes. Now we can create the personal object, let's call that jon,",
      "start": 11540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we set it to person, we can call jon.",
      "start": 11544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "talk, let's run the program so we get this",
      "start": 11548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "message, beautiful, but our person objects should also have",
      "start": 11552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a name attribute, it doesn't make sense to have a person without the name.",
      "start": 11556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So that is when we use the constructor function. So on the top,",
      "start": 11560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we add a new method, at the name of this method is double",
      "start": 11564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "underscore, init double underscore. So we",
      "start": 11568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call this method a constructor. Now in this method we need to",
      "start": 11572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add another parameter which is name, so we",
      "start": 11576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "simply set self.name to name. Once",
      "start": 11580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "again, self references the current object, we're setting the name",
      "start": 11584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "attribute of the current object, to the name argument passed to this method.",
      "start": 11588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "With this we can go back to line 9, and",
      "start": 11592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when creating a person object we pass the name, let's see jon smith",
      "start": 11596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now let's print jon.name and run our program",
      "start": 11600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go. So jon Smith is printed on the terminal, beautiful,",
      "start": 11604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so this is all you had to do as part of this exercise. But",
      "start": 11608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's make this program a little more interesting. Instead of printing",
      "start": 11612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this boring message here, let's print hi, I am Jon Smith.",
      "start": 11616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we can use a formatted string with a message",
      "start": 11620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like Hi, I am, now we want to dynamically",
      "start": 11624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add the name of this person. How do we do this? Well, look at",
      "start": 11628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the parameter of this talk method. As I told you before,",
      "start": 11632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "every method in our class should have this parameter, self.",
      "start": 11636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And they should be the very first parameter of each method, okay? So,",
      "start": 11640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with this self we can get reference to the current object, so",
      "start": 11644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can add curly braces and type out self",
      "start": 11648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".name. Thsi returns the name attribute of the current",
      "start": 11652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "person object. With this we can remove",
      "start": 11656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "line 10, where we print jon.name and simply call",
      "start": 11660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "jon.talk. Lets run our program.",
      "start": 11664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Hi, I am Jon Smith. There we go, beautiful.",
      "start": 11668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now we can build another person object, let's say Bob, is a new person",
      "start": 11672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "called Bob Smith, when we say",
      "start": 11676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Bob.talk. And run our program",
      "start": 11680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get a different message, hi I'm Bob Smith, so",
      "start": 11684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "each object is a different instance of a person class.",
      "start": 11688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial Im going to talk to you about inheritance in Python,",
      "start": 11696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "inheritance is a mechanism for using code and once again",
      "start": 11700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's no limited to python, most languages that support classes",
      "start": 11704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "also support inherence. So let ms how you how this works. Let's say",
      "start": 11708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we have this dog class with a simple walk method, in this method",
      "start": 11712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're simply printing the walk message on the terminal, now let's say",
      "start": 11716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in real program, instead of just one line of code here we're going to have 10 lines of",
      "start": 11720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code. Now, what if in the future we want to define a",
      "start": 11724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another class let's say cat and we want to add",
      "start": 11728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this walk method there as well. Sow e'll have to repeat all that code,",
      "start": 11732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this new class, walk.",
      "start": 11736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This is bad. because you have repeated or duplicated our",
      "start": 11740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code. In programming we have a principle called dry",
      "start": 11744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "which is short for don't repeat yourself.",
      "start": 11748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's say sometime in the future, we discover a problem with our walk method. If you",
      "start": 11752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have repeated or duplicated this method in many other places, then we'll",
      "start": 11756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have to come back and fix that problem in every single place we have",
      "start": 11760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "duplicated this code. So that's why in programming we should not define something",
      "start": 11764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "twice. So how can we solve this problem.",
      "start": 11768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "There are different approaches, one approach that is easier to understand for beginners is inherence",
      "start": 11772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now here's how it works. We define a new class called",
      "start": 11776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "maml and move the walk method right there. Then we'll have",
      "start": 11780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the dog and cat classes inherit that method",
      "start": 11784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from their parent just like how humans inherit certain",
      "start": 11788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "attributes or behaviors form their parents. That' exactly the same, so",
      "start": 11792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on the top, we define a new class, let's call it",
      "start": 11796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "mammal then we need to move the walk method there. So,",
      "start": 11800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we select it, cut it, using command and x on Mac, or",
      "start": 11804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "control x on Windows and then paste it here, beautiful,",
      "start": 11808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we want our dog class to inherit this class from the mammal class",
      "start": 11812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so right after the class name we add parenthesis and",
      "start": 11816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then type out the name of the parent class. In this case, mammal.",
      "start": 11820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "That's all we have to do. So with his the dog class",
      "start": 11824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will inherit all he methods defined in the mammal class.",
      "start": 11828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now there is a tiny problem here, if you look at line 9, there is a",
      "start": 11832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "red underline here. The reason this is happening is because",
      "start": 11836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python doesn't like an empty class, so right now our dog",
      "start": 11840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "class is empty, it doesn't have anything, we either need to add methods",
      "start": 11844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "specific to dogs or just to make Python happy,",
      "start": 11848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can use the path statement, and that basically means nothing.",
      "start": 11852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We're telling python interpreter, hey, pass this line, don't worry about it. But with this, we",
      "start": 11856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "don't have an empty class, okay? Now as I told you before",
      "start": 11860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "after each class I should have two line breaks so right now we",
      "start": 11864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "only have one line break and that is the reason we have this little warning here, so let's add",
      "start": 11868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another black line, beautiful, so our dog class is",
      "start": 11872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "inheriting the walk method from the mammal, you need to apply the same change",
      "start": 11876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to the cat class. So we'll have cat",
      "start": 11880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "inherit from mammal, and then,",
      "start": 11884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use the path statement here. With these changes,",
      "start": 11888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now we can create either a dog or  cat object, let's say dog,",
      "start": 11892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one, we set it to a dog object, and",
      "start": 11896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when we type dot look we have the walk method that is defined",
      "start": 11900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the mamall class. We can easily call it, let's run our program",
      "start": 11904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go, you see the walk message,",
      "start": 11908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so both the dog and cat classes are inheriting all the classes",
      "start": 11912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "methods defined in their parent class. Now here we can add methods",
      "start": 11916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "specific to dogs, for example, we can define a method called",
      "start": 11920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "bark, and then print bark.",
      "start": 11924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, we don't need the path statement because we already defined",
      "start": 11928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one method in our dog class. So now when we type out",
      "start": 11932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "dog1. look we have two methods",
      "start": 11936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one is the walk method that we inherited and the bark method that we just",
      "start": 11940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "defined in the dog class. Similarly, we can add a method",
      "start": 11944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "specific to a cat, for example, we can define a method called",
      "start": 11948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "be annoying, I hate cats, so let's print",
      "start": 11952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "annoying , now when we create the cat",
      "start": 11956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "object, let's remove that, cat1",
      "start": 11960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and type out cat1. you have these two methods",
      "start": 11964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "dog and be annoying. So these are the basics of inheritance in python",
      "start": 11968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now there is more to this that really goes beyond the scope of this beginners tutorial.",
      "start": 11972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "If you're interested to learn more about inheritance and other mechanisms",
      "start": 11976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for reusing code, I encourage you to get my complete Python course.",
      "start": 11980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial, I'm going to talk to you about modules in python.",
      "start": 11988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "A module in python is basically a file with some python code.",
      "start": 11992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And we use modules to organize our code into files.",
      "start": 11996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Just like sections in a super market. When you go to a super market there are different sections",
      "start": 12000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for fruits, vegetables, cleaning products, and so on. We don't have",
      "start": 12004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "one section with all the products in the super market. We have the same concept",
      "start": 12008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in programming. So instead of writing all our code, instead of writing",
      "start": 12012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the functions and classes in app.py we want to break up our code",
      "start": 12016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "into multiple files. We refer to each file as a module.",
      "start": 12020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "With this, not only is our code better organized and structured,",
      "start": 12024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but we'll also have the ability to reuse our code. For example,",
      "start": 12028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "over here in app.py, I've defined two functions for converting",
      "start": 12032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "weight from pounds to kilograms and vice versa.",
      "start": 12036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now we can take these two functions and put them in a separate module",
      "start": 12040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "called converters, and then we can import that module into any",
      "start": 12044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program that needs these converter functions. Let me show you how to do this.",
      "start": 12048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let's open up our project panel and right",
      "start": 12052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "click the project, go to new, and add the new file,",
      "start": 12056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're going to call this file, converters.py.",
      "start": 12060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Then, we go back to app.py",
      "start": 12064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "select all this code, cut it and then",
      "start": 12068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "paste it into our new module. converters.py.",
      "start": 12072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "With this we have cleaned up our app module it's not bloated with different",
      "start": 12076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "functions, so as we write more functions with classes, we put them in their",
      "start": 12080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "corresponding modules, a module should contain all the related",
      "start": 12084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "functions and classes, okay? Now you want to",
      "start": 12088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "import the converters module into our app module, and that is really easy, on the",
      "start": 12092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "top we write import converters",
      "start": 12096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "without extension, so we don't add .py we only type out the name of",
      "start": 12100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the file. Let me close that project panel. Now,",
      "start": 12104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this converter is an object so we can use the dot operator",
      "start": 12108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to access it's members. So currently we have defined",
      "start": 12112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these two functions inside of our module, kilogram to pound,",
      "start": 12116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and pounds to kilograms. So we can easily call one of these functions",
      "start": 12120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's pass 70 kilos get the result and print it out.",
      "start": 12124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Run our program, so,",
      "start": 12128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that is under 55 pounds. Now there is also another",
      "start": 12132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "syntax for importing modules, let me show you, so",
      "start": 12136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "instead of importing the entire module we can import specific functions from that",
      "start": 12140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "module. Here's how it works. We type out from",
      "start": 12144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we add the name of our module, so converters",
      "start": 12148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "import, now here if you press control and space",
      "start": 12152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can see the list of all the functions defined in this module.",
      "start": 12156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So here we can grab one of these functions let's say kilogram to pound, and",
      "start": 12160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with this we can directly call this function just like",
      "start": 12164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the function defined in this file. App.py. Compare",
      "start": 12168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what we have on line 4 to what we have on line 6. On line 6",
      "start": 12172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we'll have to prefix this function with the name of an object",
      "start": 12176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "converters. So we have to type converters. and then we'll be able to",
      "start": 12180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "access this function. In contrast. When we import",
      "start": 12184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a specific function from our module, then we can easily call that function",
      "start": 12188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "without prefixing it with the module name. So here's what",
      "start": 12192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you need to take away.  We use modules to better organize our code. Instead of",
      "start": 12196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "writing all the code, instead of writing all the functions in one file, you break up",
      "start": 12200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our code across multiple files. Each file is called",
      "start": 12204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a module and it should contain all the related functions and classes",
      "start": 12208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we can import a module into another module, in this case, we are importing",
      "start": 12212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the converters module into our app module. And as you saw,",
      "start": 12216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there are two ways to import this module, we can import the entire module, and then",
      "start": 12220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we'll get an object with the same name as the module so we can",
      "start": 12224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "type converters . and then we'll be able to access all the",
      "start": 12228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "functions and classes defined in this module. The other appraoch",
      "start": 12232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is to impot a specific function or class from a module using the",
      "start": 12236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from import statement. Now here",
      "start": 12240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is your exercise. Earlier in the course you had an exercise for finding the",
      "start": 12244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "largest number in the list. So here on the top we have",
      "start": 12248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a list of numbers, initially we set max to the first number in this list",
      "start": 12252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then, we look through this list, get each number,",
      "start": 12256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if the current number is grater than max, then we reset max.",
      "start": 12260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And finally when we are done with our loop we print max on the terminal.",
      "start": 12264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now here's what I want you to do. This code currently",
      "start": 12268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "has no organization. We don't have any functions, we don't have any modules, we wrote all",
      "start": 12272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the code in app.py, that is okay for small programs,",
      "start": 12276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but as your programs grow, you need to properly organize your code into",
      "start": 12280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "classes and modules. So, as part of this exercise, I want",
      "start": 12284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you to write a function, call it find max.",
      "start": 12288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This function should take a list, and return the largest number in that list.",
      "start": 12292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now after you do this, go ahead and put this function",
      "start": 12296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in a separate module. So extract it from here, and put it in a module,",
      "start": 12300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "called utils. So in this module we're going to have a bunch of",
      "start": 12304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "utility functions, oaky? Then import the utility",
      "start": 12308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "module into the current module and call this function.",
      "start": 12312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Finally, get the result and print it on the terminal, this is a",
      "start": 12316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "fantastic exercise to teach you how to properly organize your code. So,",
      "start": 12320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "go ahead and spend a couple minutes on this exercise.",
      "start": 12324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So the first",
      "start": 12328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "step is to define a function called find max. So on the",
      "start": 12332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "top, I'm going to define function, find max",
      "start": 12336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this function should take a list of numbers, so we",
      "start": 12340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add a parameter called numbers. Now inside of this function you",
      "start": 12344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "want to have these few lines, this is the algorithm for finding the",
      "start": 12348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "largest number in a list, we don't want to bring the first line, because this",
      "start": 12352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is where we create a list. So somewhere in our program we're going to create this list,",
      "start": 12356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and tehen pass it as an argument to pass max",
      "start": 12360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "function. Okay? So, let's go ahead and grab",
      "start": 12364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these few lines, cut them, and put them inside",
      "start": 12368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of find max function. Alright, so we find the",
      "start": 12372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "largest number in this list, finally we need to return it, so,",
      "start": 12376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "return max. So here's our function. Now we",
      "start": 12380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "need to move this into a separate module. So let's go to the panel",
      "start": 12384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "right click the project and add a new",
      "start": 12388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "file, we can also add a new python file that's the same, let's call that",
      "start": 12392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "utils so if you add a new python file",
      "start": 12396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pycharm automatically adds .py extension, but if you go to",
      "start": 12400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "new file we'll have to explicitly type out",
      "start": 12404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".py. So make sure to get the extension right.",
      "start": 12408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, back to app.py, let's cut this code and",
      "start": 12412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "paste it into this new module, okay beautiful.",
      "start": 12416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now I'm going o go back to app.py and import our new module.",
      "start": 12420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can either import the entire module, so import utils",
      "start": 12424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then access individual functions so we can call utils",
      "start": 12428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".find max or we can explicitly",
      "start": 12432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "import this function from the utils module. It doesn't really make a difference.",
      "start": 12436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we could type from utils",
      "start": 12440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "import find max. And then we",
      "start": 12444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "don't need to prefix this with the name of it's object, so we simply call",
      "start": 12448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "find max. Now we need to call this after we initialize our list.",
      "start": 12452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So first we need to define the list of numbers.",
      "start": 12456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Then, we pass that list as an argument to find max",
      "start": 12460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get the result which is max and finally we print it",
      "start": 12464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on the terminal. let's go ahead and run our program, so the",
      "start": 12468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "largest number is 10, beautiful,",
      "start": 12472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now one last thing before we finish this tutorial, here we have this little warning",
      "start": 12476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "under max and the tool tip says shadows built in name",
      "start": 12480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "max. The reason we see this is because we actually have a function called",
      "start": 12484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "max. And it does the exact same job",
      "start": 12488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as our find max function. So this is actually built into python.",
      "start": 12492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But I ask you to do it as an exercise because it's a great exercise for beginners.",
      "start": 12496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, back to the warning, this warning is basically telling us that we are",
      "start": 12500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "overwriting the built in max function in python",
      "start": 12504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we are changing the meaning of this function, and this is considered a bad practice,",
      "start": 12508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let me show you what I mean. So let's comment out what we have on line 4,",
      "start": 12512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "by putting a hash sign here, we can also use,",
      "start": 12516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a short cut command and slash on Mac, or control on slash",
      "start": 12520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on Windows. So now this line is commented out. Look at the",
      "start": 12524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "color of max here, it's purple, it's the same color as print. And this is the color",
      "start": 12528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "used to identify the built in functions. So now we can call",
      "start": 12532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this function and give it a list of numbers",
      "start": 12536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run our program we get the same exact result however,",
      "start": 12540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if we bring this line back, once again we can use the same",
      "start": 12544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shortcut that is command and slash on Mac or control slash on Windows.",
      "start": 12548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, we are redefining max, so up to",
      "start": 12552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this line, max used to be a function, but after line 4 is executed",
      "start": 12556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "max is set to an integer, that is the largest number in this list.",
      "start": 12560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we'll no longer be able to call it on line 5,",
      "start": 12564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's run our program and see what happens. So there you go,",
      "start": 12568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get this type error, int object is not",
      "start": 12572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "callable, because max is now an integer, it's not a function,",
      "start": 12576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we cannot call it. So to solve this problem, we can rename",
      "start": 12580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this variable to something else. So right click here.",
      "start": 12584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Go to refactor and rename,",
      "start": 12588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and rename this to maximum.",
      "start": 12592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So you can see the warning is gone. As you can see we have the same warning",
      "start": 12596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in our utils module. So here we're redefining max",
      "start": 12600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and as I told you before this is a bad practice. We're changing the",
      "start": 12604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "meaning of built in functions in python. So,",
      "start": 12608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's rename these as well, I'm going to use the short cut that is shift and",
      "start": 12612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "f6 there you go and here we can change this to",
      "start": 12616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "maximum. Enter, done.",
      "start": 12620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial we're going to talk about packages in python,",
      "start": 12628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "packages are basically another way to organize our code, so currently",
      "start": 12632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we have only 3 files for modules in our project but a real project",
      "start": 12636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "can contain hundreds or even thousands of modules.",
      "start": 12640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We don't want to add all those modules here, because over time this directory will get",
      "start": 12644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "bloated with so many files, so a better approach is to organize related",
      "start": 12648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "modules, inside of a package, so a package is a container",
      "start": 12652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for multiple modules In file system terms a package is",
      "start": 12656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a directory or folder. So in our project we can add a new directory",
      "start": 12660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and in that directory we can add all the directed modules, as a metaphor think",
      "start": 12664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of a mall. When you go to a  mall or a shopping center there are different",
      "start": 12668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sections for mens women and kids clothing, so that is",
      "start": 12672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ilke a package, now when you go to the mens section, there are different areas",
      "start": 12676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "fior different kinds of products, we have a section for shoes, t shirts,",
      "start": 12680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "jackets, and so on, so each of these is like a module, so,",
      "start": 12684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this tutorial, I'm going to show you how to create and use packages in Python,",
      "start": 12688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here in our project panel, right click the panel and",
      "start": 12692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add a new directory.",
      "start": 12696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's call this directory e commerce. So we're going to create",
      "start": 12700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a package called e-commerce and in this package we're going to have",
      "start": 12704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the modules related for an ecommerce application. For example,",
      "start": 12708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can have modules for sales, shipping, customer service",
      "start": 12712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and so on. So let's go ahead",
      "start": 12716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now here we have an empty directory, in order to convert this to a package",
      "start": 12720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to add a special file in it. So, right",
      "start": 12724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "click this directory and add a new python file,",
      "start": 12728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call that file double underscore in it, double underscore",
      "start": 12732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is a special convention in Python.",
      "start": 12736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "When Python interpreter sees a file with this name and",
      "start": 12740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "name in a directory, it treats this directory as a package, we also have a",
      "start": 12744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shortcut for that in pycharm so let me delete this directory",
      "start": 12748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and start again. So delete, once again right click",
      "start": 12752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the project, and go to new but instead of creating a new directory",
      "start": 12756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can create a new python package, let's call",
      "start": 12760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our package ecommerce as you can see",
      "start": 12764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pycharm automatically creates this file for us so we don't have to manually create",
      "start": 12768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it. Okay? Now, in this package, let's add a new module,",
      "start": 12772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so a new python file, let's call it",
      "start": 12776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shipping okay? Now in this module we want to have",
      "start": 12780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a function for calculating the shipping costs. So define",
      "start": 12784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "calculate, underline, shipping.",
      "start": 12788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now don't worry about parameters or implementation, we simply print",
      "start": 12792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "calculate underline shipping.",
      "start": 12796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now lets say you want to import this shipping module",
      "start": 12800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "into our app module, with this new structure this shipping",
      "start": 12804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "module is now part of the ecommerce package, so we cannot import a direct",
      "start": 12808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you have to start from the ecommerce package. So,",
      "start": 12812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "bak to app,py once again there are two ways to import this module.",
      "start": 12816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can import the entire module or we can",
      "start": 12820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "import one of it's functions or classes. So let me show you both approaches.",
      "start": 12824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "First, we're going to import the entire module. Now what is the name of our",
      "start": 12828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "package? it is ecommerce, right? So ecommerce.",
      "start": 12832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shipping. So instead of typing import",
      "start": 12836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shipping we type import ecommerce",
      "start": 12840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".shipping. we have to prefix it with the name of it's package.",
      "start": 12844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now to access any of the functions or classes in this module",
      "start": 12848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we'll have to type out ecommerce.shipping.",
      "start": 12852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and there you go. Now we can access the calculate shipping",
      "start": 12856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "function. So let's go ahead and run our program,",
      "start": 12860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we see this message printed on the terminal, beautiful. However",
      "start": 12864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with this approach, every time you want to call one of the functions",
      "start": 12868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to this module, we'll have to prefix it with ecommerce.",
      "start": 12872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shipping. that is very verbose. So when working with packages",
      "start": 12876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we often use the second approach, using the",
      "start": 12880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from statement. So we can type from ecommerce",
      "start": 12884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".shipping import",
      "start": 12888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "calculate shipping. Now we don't have to prefix this function",
      "start": 12892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with ecommerce.shipping, and we can call it multiple times",
      "start": 12896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this module, so our code is a little bit shorter. But what if",
      "start": 12900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you want to use multiple functions in this shipping module. We can either import them here,",
      "start": 12904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so calculate shipping, comma, let's say calculate_",
      "start": 12908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tax. Or we can import the entire module and then",
      "start": 12912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "access all he functions or classes in that module. So,",
      "start": 12916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let me revert this back. To import the entire module",
      "start": 12920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we type from ecommerce so we remove.shipping",
      "start": 12924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so from this package, import",
      "start": 12928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the shipping module. Now the shipping module,",
      "start": 12932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is an object so we can access",
      "start": 12936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the functions and classes defined here, using the dot operator, so",
      "start": 12940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shipping. there you go, calculate shipping. So to",
      "start": 12944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "recap, when using the from statement we can either start from",
      "start": 12948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the package and import a specific module, or we can",
      "start": 12952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "start from package.module",
      "start": 12956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then import a specific function. Like calculate shipping.",
      "start": 12960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, this was the basics of using packages in",
      "start": 12964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python. As I told you before, packages are extremely important, especially",
      "start": 12968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when you want to work with a framework like django, we use django for building",
      "start": 12972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "web applications with python, and I'm going to show you that later in this course.",
      "start": 12976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So in Django we have quite a few packages and",
      "start": 12980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "each package contains several modules. So make sure to watch the tutorials,",
      "start": 12984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "about modules and packages one more time, otherwise you're going to get confused later",
      "start": 12988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when we get to Django.",
      "start": 12992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to talk to you",
      "start": 12996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "guys about the built in modules in python, so python",
      "start": 13000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "comes with a standard library that contains several modules for common",
      "start": 13004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tasks such as sending emails, working with date and time,",
      "start": 13008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "generating random values and passwords and so on. There are so many modules",
      "start": 13012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "already built into Python and that means there is already lots of functionality",
      "start": 13016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that we can reuse. Let me show you where you can find",
      "start": 13020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this standard library. So open up this browser",
      "start": 13024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and search for python 3, module index,",
      "start": 13028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "make sure to add the version number, because the modules in python 2 are",
      "start": 13032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "different from modules in python3. So here we search for python 3",
      "start": 13036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "module index, and the first page here, you can see is",
      "start": 13040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python module index, or python 3, let's go ahead,",
      "start": 13044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so these are all the modules built into python,",
      "start": 13048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for example we have modules for working with date and time,",
      "start": 13052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we have modules for sending emails for encoding values,",
      "start": 13056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there are so many modules here. Now the explanation of all these is",
      "start": 13060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "beyond the scope of this course, that really requires it's own course.",
      "start": 13064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Because we have so many modules here, but don't let this list intimidate you.",
      "start": 13068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This is not something that you need to learn right now, as you learn python",
      "start": 13072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as you build more applications, gradually you will get familiar with more modules",
      "start": 13076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here, in fact nobody knows all the modules in python",
      "start": 13080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "standard library. Everybody knows some modules based on the applications they have built.",
      "start": 13084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So in this tutorial, I'm going to show you how to use one of the built in modules,",
      "start": 13088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for generating random values. So on the top,",
      "start": 13092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we import the random module, now because",
      "start": 13096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "random is a built in module, we don't need to have a file here",
      "start": 13100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "called random.py. So python interpreter knows that random is a built",
      "start": 13104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in module as long as it knows where to find it.",
      "start": 13108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now if you're curious where this random module is stored on the disk, let me show you, so",
      "start": 13112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here in the project panel, expand external",
      "start": 13116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "libraries, then expand python 3,",
      "start": 13120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then one more time python 3.7 library",
      "start": 13124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "route. So this is a folder somewhere on your computer, in this folder, we have",
      "start": 13128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the built in modules in python. So,",
      "start": 13132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you scroll down, you should be able to find.",
      "start": 13136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The random module. There you go. It's right here. So random.",
      "start": 13140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "py. You can open this and this shows you the source",
      "start": 13144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code of this module. there you go. Now in this tutorial,",
      "start": 13148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we don't want to worry about hat, so let's go back to our app.py,",
      "start": 13152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and use this module to generate random values. So when we import",
      "start": 13156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this module, now we have this object, random, so we can use the dot",
      "start": 13160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "operator to acces it's methods. One method that is useful",
      "start": 13164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here is the random method, and every time we call it it generates",
      "start": 13168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a random value between 0 and 1. So here we can do a for loop,",
      "start": 13172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's say for I in,",
      "start": 13176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "range 3. So just to refresh your memory we are using the",
      "start": 13180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "range function to create a range object. We can look through this range object",
      "start": 13184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and in each iteration this object will spit out a value.",
      "start": 13188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So with this for loop, we can execute this code 3 times. Now, let's",
      "start": 13192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "indent this. Okay, and finally, let's print the result,",
      "start": 13196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "There you go. So we can see",
      "start": 13200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that in each iteration we get a new random value between 0 and 1.",
      "start": 13204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now what if we want a random value for a particular age?",
      "start": 13208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's say random values between 10 and 20, well,",
      "start": 13212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there is another method here, rand int, we use 2 arguments here",
      "start": 13216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to specify our range, let's say 10 and 20.",
      "start": 13220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Run our program one more time. Now we have the numbers 20",
      "start": 13224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "13 and 18. If we run our program one more time,",
      "start": 13228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We get different values, so 20, 19, 11, one more time.",
      "start": 13232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Look, you also have another powerful method for",
      "start": 13236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "randomly picking an item from a list. Let's say we have a list of team members and you want to",
      "start": 13240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "randomly pick someone as the leader. Let me show you how to do that.",
      "start": 13244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we define the list of team members, we set it to",
      "start": 13248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "jon, mary, bob,",
      "start": 13252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and mosh. Now we can call random",
      "start": 13256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".choice and pass our members list",
      "start": 13260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this method randomly picks a method from this list and returns it. SO,",
      "start": 13264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can store the result in leader and then",
      "start": 13268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print it on the terminal. let's run our program,",
      "start": 13272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so now the leader is mary, if you run our program one more time",
      "start": 13276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this line is mosh now it's mosh again one more time,",
      "start": 13280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it really likes mosh, you get the point. So",
      "start": 13284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the random module is very powerful, and it has a lot of applications.",
      "start": 13288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now here's a very cool exercise. I want you to write this program to",
      "start": 13292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "roll a dice. So every time we run this program we get a different value.",
      "start": 13296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now we have 3 in 1, next time we get 3 and 6, one more time",
      "start": 13300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "5 and 6, 4 and 3, double one, that's a very cool exercise.",
      "start": 13304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So before we get started, I want you to pay attention to a few things.",
      "start": 13308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I want you to define a class called dice",
      "start": 13312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this class we're going to have a method called rope so every time we",
      "start": 13316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call this method, we get a tuple, a tuple remember is a list of",
      "start": 13320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "values but values cannot be changed, you cannot add a new item to it, we",
      "start": 13324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "cannot remove it. So it's like a read only list. So every time,",
      "start": 13328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we call the row method, we should get the tuple of two random values.",
      "start": 13332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So go ahead, and do this exercise, You'll see my solution next.",
      "start": 13336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, we start by importing the random module on the top,",
      "start": 13344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we define a class called dice:",
      "start": 13348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this class we want to have a method called row. So define row",
      "start": 13352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "parenthesis, this automatically adds self, now in this method,",
      "start": 13356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you want to generate two random values between 1 to 6.",
      "start": 13360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we call random.randint.",
      "start": 13364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And pass 1 and 6. So this generates the first number,",
      "start": 13368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can ut that here, now let's call this one more time,",
      "start": 13372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so I'm going to copy what we have on line 5, put it here, and",
      "start": 13376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "change this variable to second. So we have two variables first and second.",
      "start": 13380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "With two random values, finally we need to return them,",
      "start": 13384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in a tuple, so return parenthesis instead of square brackets,",
      "start": 13388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first and second, now",
      "start": 13392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in python when you want to return a python from a  function, you don't have to add",
      "start": 13396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this parenthesis, so you can simplify your code and python will automatically",
      "start": 13400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "interpret this as a tuple. So we are done",
      "start": 13404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with a definition of our class, we remove the indentation and add",
      "start": 13408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "two line breaks. Now we create an object of this type",
      "start": 13412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so you set dice to dice",
      "start": 13416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "next we roll the dice, so dice.roll and",
      "start": 13420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "print the result on the terminal, that's all you have to do.",
      "start": 13424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's run this program, so now we get 2 and 5,",
      "start": 13428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "lets run it one more time, 3 and 2, 1 and 1, beautiful.",
      "start": 13432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now we have this little warning here, that says",
      "start": 13436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "expected 2 black lines found 1. Once again this is",
      "start": 13440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "coming from pep 8, pep is short for python and",
      "start": 13444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "proposal. We have so many python enhancement proposals or peps.",
      "start": 13448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Pep 8 is a very famous 1, and in this document we have",
      "start": 13452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the best practices for formatting our code. So pep",
      "start": 13456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "8 says, that after we define our classes we should have 2 lines breaks, we've already done that",
      "start": 13460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so the reason this is complaining is because we had 1 line break before",
      "start": 13464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the class, so let's add one more line break, now pycharm",
      "start": 13468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is happy. So basically pycharm is following all the best",
      "start": 13472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "practices defined in pep8. Now you don't have to memorize",
      "start": 13476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "any of these best practices, as you code in pycharm, pycharm gives you a little more",
      "start": 13480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "warning, and gradually you will learn how to properly format your code, so it's",
      "start": 13484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "readable by other people.",
      "start": 13488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial, I'm going to show you",
      "start": 13492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "how to work with directories in python. So here in python3,",
      "start": 13496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "module index, you can see we have a module called path lib which provides an object",
      "start": 13500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "oriented file system pact. That basically means it provides",
      "start": 13504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "classes that we can use to create objects to work with directories and",
      "start": 13508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "files. So, if you click here, you can see how this module",
      "start": 13512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "works, we can see all kinds of examples. For example, here on there basic",
      "start": 13516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "useage, you can see this is how we import the path",
      "start": 13520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "class from the path lib module. Let me zooming so you can see",
      "start": 13524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "clearly. Okay, so look, from path lib, that's",
      "start": 13528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our module, import path, note the naming convention.",
      "start": 13532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "P is capitalized, that means path is a class, so we need to create",
      "start": 13536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an instance of this class as you can see, right here,",
      "start": 13540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now there's so much documentation here, you can read this on your own, but let me quickly show you",
      "start": 13544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a few examples to help you get started. So after pycharm",
      "start": 13548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on the top, from the path led module, that's",
      "start": 13552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "import the path class. Now we need to create,",
      "start": 13556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a path object to reference a file or directory",
      "start": 13560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on our computer. So there are basically to ways to do this we can use an absolute",
      "start": 13564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "path, or a relative path which basically",
      "start": 13568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "means a path starting from the current directory. For example,",
      "start": 13572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you wanna reference this ecommerce directory in our project, we can",
      "start": 13576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use the relative path. So we start from the current directory and then",
      "start": 13580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "go somewhere else. With absolute paths we start from the root",
      "start": 13584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of our hard disk. For example, if you're on Windows you might have",
      "start": 13588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an absolute path like this, c drive, backslash,",
      "start": 13592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program, files, backslash microsoft,",
      "start": 13596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so these are directories in c drive.",
      "start": 13600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "On Windows we use a backslash to build a path. If you're on",
      "start": 13604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Mac or Linux, your paths will look a little bit different, so",
      "start": 13608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "instead of backslash we have a forward slash lets say user/local",
      "start": 13612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "/bin. So these are examples of absolute paths. In",
      "start": 13616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this tutorial we're going to work with he relative path to work with this ecommerce",
      "start": 13620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "directory that we have in our project. Now if you didn't create this directory",
      "start": 13624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "earlier, simply right click on the project and then go to new",
      "start": 13628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "directory. oaky? So, let's close this panel,",
      "start": 13632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we create a path object, now,",
      "start": 13636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you don't pas an argument here, this will reference the current directory",
      "start": 13640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "alternatively, we can pass string, in this string we can",
      "start": 13644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add a file or a directory. let's say the ecommerce",
      "start": 13648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "directory. Now this runs a path object, so we store it here,",
      "start": 13652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now this path object has a few interesting methods",
      "start": 13656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for example, we can check to see if a path exists by calling",
      "start": 13660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the exist method. This simply returns a boolean so let's print it on the terminal,",
      "start": 13664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go. So this path exists,",
      "start": 13668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what if it changes to ecommerce 1, and",
      "start": 13672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run our program and get false, we can also create a new directory",
      "start": 13676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for example, let's change our path to email, now when we",
      "start": 13680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run this program, obviously we don't have this directory but we can",
      "start": 13684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "create it by calling the mk dir method",
      "start": 13688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so make directory. Let's run our program",
      "start": 13692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "alright, this method returns none which basically means",
      "start": 13696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it doesn't return any values. Now if you look at the project panel you can see",
      "start": 13700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here we have a new directory called emails, we can also delete this directory",
      "start": 13704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, instead of mk dir we call",
      "start": 13708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "rmdir which is short for remove directory, but",
      "start": 13712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's go ahead, now we can see that directory is gone. We can also see",
      "start": 13716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the files and directories in a given path, that is, very useful if you want to",
      "start": 13720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "write a little program to automate something. For example,",
      "start": 13724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you can iterate over all the spreadsheets in a directory one them and",
      "start": 13728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "process them. Let me show you. First we change the path",
      "start": 13732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to the current directory and then we call the glob",
      "start": 13736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "method. With his method we cans each for files and",
      "start": 13740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "directories in the current path. So as the first argument we need to pass a string",
      "start": 13744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that defines a search pattern. We can type an asterisk",
      "start": 13748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and that means everything, all files and all directories.",
      "start": 13752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can optionally add an extension, so to get all the files, you",
      "start": 13756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "need the files you use star.star. With this",
      "start": 13760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pattern, we'll only get the files in the current directory. But not the directories.",
      "start": 13764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can also search for all the py files, or all the excel",
      "start": 13768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "spreadsheets. Anything. So let's search for all the py files",
      "start": 13772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the current directory, now when we run our program",
      "start": 13776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we get this generator object. Generator object",
      "start": 13780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "are kind of an advanced topic, and they are beyond the scope of this beginners",
      "start": 13784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python course. But for now all you need to know is we can iterate",
      "start": 13788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or loop through these generator objects. So instead of",
      "start": 13792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "printing this generator object, let's just iterate over it using",
      "start": 13796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a for loop, so, for, file in,",
      "start": 13800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the generator object that is returned from the glob method. q",
      "start": 13804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's print file.",
      "start": 13808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We run our program, there you go. So these are all the",
      "start": 13812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "py files in my current directory, this could be different on your machine",
      "start": 13816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you didn't follow the exercises I gave you earlier. For example, this",
      "start": 13820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "utils.py, we created this as part of one of the exercises earlier in this course.",
      "start": 13824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So don't worry if the files you see here are different on your machine.",
      "start": 13828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, you can use the glob method to search for files using",
      "start": 13832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a pattern, we can also get all the files and directories in the current",
      "start": 13836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "path, so, we just use one asterisk, then",
      "start": 13840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run our program, take a look,  so we have this",
      "start": 13844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ecommerce directory, we have notes.txt, this is a file I",
      "start": 13848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "added earlier just to write notes as part of my presentation so you're not going to have",
      "start": 13852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this file. We also have a bunch of directories and files.",
      "start": 13856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Even though python's standard library is comprehensive and has",
      "start": 13864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so many modules for common tasks, it's not complete by any means.",
      "start": 13868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "That's why we have this directory called python package",
      "start": 13872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "index. Or pypi. And in this directory you can find hundreds",
      "start": 13876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of packages for doing awesome things. These are packages that people like you",
      "start": 13880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and I have built as part of our projects, and then they have published it as part of this directory.",
      "start": 13884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For other people to use. So that's why we have a fantastic community in python,",
      "start": 13888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there are so many python developers out there and there are so many packages",
      "start": 13892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "right in front of us to reuse in our programs, let's say",
      "start": 13896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you want to send text messages in your programs, you don't have to build this functionality from scratch,",
      "start": 13900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can simply come to pypi.org and",
      "start": 13904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "search for sms aas you can see there are so many",
      "start": 13908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "projects or apckages that give you this functionality. Of course not every",
      "start": 13912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "package, not every project is complete or bug free, some of them are still",
      "start": 13916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in development or they have bugs, but if you look around I'm pretty sure",
      "start": 13920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for any kind of function you can imagine there is a good",
      "start": 13924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "reliable and well documented package for you. In my complete python course,",
      "start": 13928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I will show you some of those most useful packages on pypi. For example",
      "start": 13932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you will learn how to access the information on yelp.com in your",
      "start": 13936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "programs. So you can write a program and search for businesses",
      "start": 13940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "registered on Yelp. Let's say you want to search for the best barber",
      "start": 13944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in New York City. I will show you how to do that. You will also learn how to use a technique called",
      "start": 13948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "web scraping, which means you can build an engine and have that engine",
      "start": 13952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "browse a website, and extract information from HDML files.",
      "start": 13956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This is the same technique that Google does to index various",
      "start": 13960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "websites. So they have several engines, or web crawlers, these web crawlers",
      "start": 13964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "are continuously looking at various websites and extracting information",
      "start": 13968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from their pages. When you publish a blog post Google's web crawler",
      "start": 13972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "finds the title of your post, its keywords and so on. So,",
      "start": 13976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I'm going to show you how to do that with Python, we'll also look at browser automation, and this is extremely",
      "start": 13980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "powerful, because you can automate testing of your web",
      "start": 13984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "applications. So you might get a job as a test engineer, and",
      "start": 13988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "your daily job is to browse a website, click here and there, fill out this form, that form, and",
      "start": 13992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ensure that this website is functioning properly. You can automate all that",
      "start": 13996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with a powerful python package called selenium, as I have shown in my complete, as I show in my complete",
      "start": 14000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python course. Now in this tutorial, I'm going to show you how to install",
      "start": 14004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "packages, from pypi.org. So,",
      "start": 14008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here on pypi.org let's search for open py",
      "start": 14012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "xl. This is a package that we use for working with excel",
      "start": 14016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "spreadsheets. So let's search for this package, there you go, so currently",
      "start": 14020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's at version 2.5. On the top you can see,",
      "start": 14024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this instruction pip install open pyexcel.",
      "start": 14028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is the command that we need to type in the terminal window to",
      "start": 14032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "install this package into our program, so back to pycharm,",
      "start": 14036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here on the status bar. You can open up a terminal window for executing",
      "start": 14040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "various commands. So let's open it, now if you're on Windows",
      "start": 14044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you're probably going to see something different instead of this dollar sign, don't worry about that",
      "start": 14048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "just execute this command I'm going to show you. So pip",
      "start": 14052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "install open py xl",
      "start": 14056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Make sure to spell everything properly. So pip is the tool,",
      "start": 14060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that comes with a python installation, and we use it to install or uninstall",
      "start": 14064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "packages registered on pypi.org. So here,",
      "start": 14068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're using pip to install this package. open py",
      "start": 14072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "xl. Enter, let's go ahead with that, it's going to take a few",
      "start": 14076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "seconds, oaky done, now we can import this package and it's",
      "start": 14080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "modules just like the built in modules in python, or the modules that we have",
      "start": 14084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in our project. Now if you're curious where this package",
      "start": 14088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is stored on disc let me show you. So open up the project panel,",
      "start": 14092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then expand external libraries, next",
      "start": 14096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "expand python 3, and then expand sight packages.",
      "start": 14100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This is where all these packages that we installed with pip are stored.",
      "start": 14104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So here we have open py xl, you can open this,",
      "start": 14108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this folder we have another folder called cell, now",
      "start": 14112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, look what we have here you have this init",
      "start": 14116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "type, earlier I told you that whenever we add this file to a folder, python treats",
      "start": 14120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that folder as a package, so sell is a package, and this",
      "start": 14124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "package we have is modules. Sell, interface, read only and text.",
      "start": 14128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So as you can see, this package openpyxl has several",
      "start": 14132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "subpackages like cell, start, chart sheet and so on.",
      "start": 14136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And in each package we have several modules, in the next tutorial",
      "start": 14140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I will show you how to work with excel files.",
      "start": 14144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we have covered all the core concepts in Python, I hope you have learned a lot.",
      "start": 14148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "please support my hard work by liking this video and sharing it with others.",
      "start": 14152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And be sure to subscribe to my channel for more tutorials like this. Next we're",
      "start": 14156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "going to work on our first python project that involves automation.",
      "start": 14160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "You're going to write a python program that can process thousands of spreadsheets",
      "start": 14164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in under a second. Are you excited? Let's get started.",
      "start": 14168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this tutorial I'm going to show you something really awesome you can do with python. You're going to",
      "start": 14176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "learn how to process spreadsheets, and this is extremely valuable",
      "start": 14180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in situation where you have hundreds or thousands of spreadsheets that need to",
      "start": 14184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "be updated. If you want to do this by hand it may take hours or days",
      "start": 14188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "weeks, or even months, you can simply build a python program in less then",
      "start": 14192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "half an hour. And have that python program, automatically process thousands of spreadsheets",
      "start": 14196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in under one second. So, here we're going to work on this",
      "start": 14200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "excel spreadsheet. You can download this below this video.",
      "start": 14204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this spreadsheet we have three columns, transaction ID,",
      "start": 14208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "product ID, and press. Now don't worry about the fourth column yet.",
      "start": 14212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So in this spreadsheet we're going to record all kinds of transactions, but let's say",
      "start": 14216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "due to an error, it could be a human error or a system error. The price that we have",
      "start": 14220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here is wrong. Let's say we need to decrease this by 10 percent.",
      "start": 14224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "If you want to do this manually, we'll have to come back here and",
      "start": 14228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add a formula, so we typed out equal sign, let's say you want to recalculate",
      "start": 14232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "say you want to recalculate the value of this cell.",
      "start": 14236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have to get that and then multiply it by 0.9",
      "start": 14240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and that is like 90% of the original price, we are reducing the original",
      "start": 14244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "reducing the price by 10%. Now when you hit enter you can see the updated price.",
      "start": 14248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Next we'll have to come back here, select this cell and",
      "start": 14252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "apply the same formula to all the other rows. Now what if you have thousands of rows",
      "start": 14256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here? You'll have to scroll up and down, this is going to be very tedious.",
      "start": 14260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we're going to write a python program that will do this for us. It's going to",
      "start": 14264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "auotmate this process and not only that it will also",
      "start": 14268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add this beautiful chart right here,",
      "start": 14272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "once again if you want to open up hundreds or thousands of spreadsheets",
      "start": 14276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and add a chart to each one, this is going to take at least a week or two",
      "start": 14280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Our python program is going to do all of this in a matter of seconds.",
      "start": 14284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let's get started. Alright the first thing I want you to do is",
      "start": 14288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to download this transactions file and add it to your project.",
      "start": 14292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I put the link below this video for you to download. So if you're wondering",
      "start": 14296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "how to put this in this project, you can simply right click the project,",
      "start": 14300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and if you're on Mac you have this item where",
      "start": 14304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "reveal in finder, if you're on Windows you should see something like reveal",
      "start": 14308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in explorer, or file explorer, or whatever it's called",
      "start": 14312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "when you click this, this opens up the direct",
      "start": 14316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on your machine where this is stored. So simply copy paste",
      "start": 14320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the transactions file right here. Now,",
      "start": 14324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here on the top, first we need to import the open py excel package.",
      "start": 14328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So import open py excel, we can give it a",
      "start": 14332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an alias to make our code shorter. So asxl.",
      "start": 14336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This is not required but it just makes our code a little bit cleaner.",
      "start": 14340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let me show you. So now instead of typing open pyxl.",
      "start": 14344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we type xl. okay so that's an alias for",
      "start": 14348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this package. Now in this package we have a function for loading an xl",
      "start": 14352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "workbook. So let's call load workbook,",
      "start": 14356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and as the argument we pass transactions.",
      "start": 14360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".xlsx. So this we load",
      "start": 14364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our excel workbook and return a workbook object.",
      "start": 14368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay? Now if you open this workbook, you can see you add only 1",
      "start": 14372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sheet, and that is called sheet 1, so to access that you use",
      "start": 14376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "square brackets, and specify the name of the sheet,",
      "start": 14380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that is sheet one, make sure to spell this with a capital",
      "start": 14384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "S. Because this is case sensitive, if you don't spell it properly",
      "start": 14388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you're going to get an error, so this returns a sheet,",
      "start": 14392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now in this sheet, we have various cells. So",
      "start": 14396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "next you need to learn how to access a particular cell, and that is very easy.",
      "start": 14400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "back to py charm, with this sheet object, you can use",
      "start": 14404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "square brackets and give the coordinate of a cell.",
      "start": 14408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Coordinate is the combination of the column and the row.",
      "start": 14412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example, this cell it's coordinate is a1.",
      "start": 14416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So back to pycharm, we can type a1, and this returns",
      "start": 14420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our first cell. Also, there is another approach to getting",
      "start": 14424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a cell, instead of using square brackets with a string, we can",
      "start": 14428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use the cell method of the sheet object, so,",
      "start": 14432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sheet.cell, you pass the row and the column, so row",
      "start": 14436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and column 1 these return the exact same",
      "start": 14440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "cell. Now let's print the value of this cell, cell.value",
      "start": 14444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and run our program so",
      "start": 14448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the value is transaction id, beautiful,",
      "start": 14452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so now we need to iterate over all these rows and for each row we need to get the value",
      "start": 14456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the third column. That is the price. We'll get that and then multiply",
      "start": 14460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "by 0.9. So first we need to know how many rows",
      "start": 14464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we have in this spreadsheet. We can get that from the sheet object so sheet",
      "start": 14468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "has an attribute called mx_",
      "start": 14472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "row. Let's print this, so in this sheet,",
      "start": 14476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we have 4 row, and you can verify that here. So we have",
      "start": 14480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a total of 4 rows. So we need to add a for loop.",
      "start": 14484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that would generate the numbers 1-4. So,",
      "start": 14488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's delete this print statement, nd add a for loop",
      "start": 14492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for row in were going to use the range function unction to generate a range of numbers,",
      "start": 14496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "starting from 1, all the way to sheet",
      "start": 14500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".max_grow. Plus 1. The reason we're",
      "start": 14504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "adding 1 to this, is because as I told you before this range function",
      "start": 14508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will generate numbers, starting from this value all the way to this",
      "start": 14512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "value, but it will not include the second value. So currently",
      "start": 14516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "max row returns 4, if you use range of 1-4 this will generate",
      "start": 14520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the numbers 1, 2, and 3, but not 4.",
      "start": 14524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So to include 4, we need to add 1 to it. Let's go over here,",
      "start": 14528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we tied sheet.max underline row plus 1.",
      "start": 14532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now before going any further let's just print row and make",
      "start": 14536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sure our program is working up to this point. So let's run",
      "start": 14540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this, we get the numbers 1-4 beautiful.",
      "start": 14544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So now we can easily get the cells in the third column. However",
      "start": 14548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we don't really want this first cell, that's the heading.",
      "start": 14552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so technically you want to ignore the first row. Back here, you want to change",
      "start": 14556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our range function, and start from 2. Now,",
      "start": 14560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're going to use sheet.cell to get access to the cell",
      "start": 14564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "at this row. And the column should be 3.",
      "start": 14568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We get a cell object, let's print it's value",
      "start": 14572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and make sure you're on the right track, so run the program",
      "start": 14576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these are the values we get. 5.95",
      "start": 14580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "6.95 and 7.95 these are the",
      "start": 14584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "values of the third column. Next we need to multiply each",
      "start": 14588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "value by 0.9 so instead of printing",
      "start": 14592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "cell.value we multiplied by 0.9 and this is",
      "start": 14596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the corrected underline price,",
      "start": 14600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so this is the mistake we're going to make with our program, now",
      "start": 14604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to add a new cell to our worksheet, so we want to add all the corrected",
      "start": 14608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "prices, ia  new column, it could also overwrite the values in this column,",
      "start": 14612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but in this tutorial I'm going to show you how to add a new column.",
      "start": 14616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So using the same method, now we need to get a reference to the cell, to the given",
      "start": 14620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "row, but in the fourth column. So, we call sheet",
      "start": 14624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".cell, and pass row and four as the arguments.",
      "start": 14628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Once again, this returns a cell object, let's store that in a",
      "start": 14632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "separate variable and call it",
      "start": 14636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "price_cell. So note that my variable names are",
      "start": 14640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "very descriptive. There is no guess work. You have corrected price which holds",
      "start": 14644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "actual value and we have corrected price, which is a cell",
      "start": 14648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "object in this spreadsheet. Next we have to set the value in this",
      "start": 14652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "cell. So we set corrected price cell.",
      "start": 14656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "value to this corrected price. With these few lines",
      "start": 14660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can easily update our spreadsheet, but first we need to save it. So,",
      "start": 14664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "after our for loop, we call workbook.",
      "start": 14668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "save. Now let's save this in a new file because we don't want to",
      "start": 14672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "accidentally overwrite the original file in case our program has a bug",
      "start": 14676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, I'm going to call that transactions 2.sms",
      "start": 14680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ex. And finally let's run our program,",
      "start": 14684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, you can see that happened in a split of a second, now here we have a new file",
      "start": 14688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tranactions 2. When we open this we get something like this.",
      "start": 14692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So you can see we have this 4th column with the updated prices. Beautiful.",
      "start": 14696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So half of the problem is solved, now we need to add a chart here.",
      "start": 14700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "To add a chart, we need to add a couple classes on the top, so,",
      "start": 14704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "after this import statement let's type out from",
      "start": 14708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "open py excel.chart, import, bar chart,",
      "start": 14712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "comma, reference.",
      "start": 14716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So lets see what's going on here. In this package you have a module",
      "start": 14720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "chart, and from this module we're importing two classes, bar chart,",
      "start": 14724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and reference. Again, look at the naming convention used",
      "start": 14728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here. The first letter of e very word is capitalized. Also it's better",
      "start": 14732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to add a line break after our import statements to make our",
      "start": 14736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code cleaner. So, before we save our workbook, we need to",
      "start": 14740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "add achart to the current sheet. First we need to select a range",
      "start": 14744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of values. For this exercise, I'm going to select the values in the fourth column/.",
      "start": 14748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So all the values in rows 2-4 these are",
      "start": 14752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the values I'm going to use in our chart. Now in this part 2 example it doesn't really",
      "start": 14756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "make sense to add a chart per transaction, but that doesn't really matter",
      "start": 14760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we just want a bunch of numbers to create a chart, so after our",
      "start": 14764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for loop, we're going to use the reference class to select a range of",
      "start": 14768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "values. Now the first argument in the constructor is the",
      "start": 14772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sheet. So we pass our sheet here, then we add",
      "start": 14776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "4 keyword arguments, the first one is min_row, we set this to",
      "start": 14780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2. The second one is max_row we set",
      "start": 14784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this to the maximum row in this sheet. That is sheet,",
      "start": 14788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".max_row, so we want to select the cells in row",
      "start": 14792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2-4. kay? Now to make this code a little bit cleaner",
      "start": 14796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I'm going to put this on a new line, so we",
      "start": 14800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "can see clearly, now this is going to select all the cells",
      "start": 14804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in all the columns in these rows. That's not what we want.",
      "start": 14808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we only want the values in the fourth column, so back here",
      "start": 14812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to set a couple more key word arguments men_call",
      "start": 14816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or column, we set that to for, and also",
      "start": 14820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "max underline call, we set that to 4 as well. So we are limiting the range",
      "start": 14824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of cells we're selecting to the fourth column.",
      "start": 14828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, we're creating an instance of the reference class, let's store the",
      "start": 14832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "result in a variable called values, so this values object",
      "start": 14836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will have all these values in the fourth column, now we are ready to create",
      "start": 14840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a chart, so we create an instance of the bar chart class",
      "start": 14844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and store it in this object.",
      "start": 14848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Next, we call chart.add_date and",
      "start": 14852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pass our values. That is pretty straight forward finally we need to add this chart",
      "start": 14856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to our sheet. So, we call sheet,",
      "start": 14860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".add_chart and pass this chart object",
      "start": 14864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We should also specify where we want to add this chart.",
      "start": 14868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's say we want to add it here, on row 2, after the fourth column.",
      "start": 14872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So the coordinate of this cell is e2, and this is going to be,",
      "start": 14876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the top left corner of our chart. So as the coordinate I'm going to",
      "start": 14880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pass e2 that's all we had to do, done. Let's run our",
      "start": 14884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program one more time, beautiful, let's open up the update",
      "start": 14888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "workbook. And here's the end result, so",
      "start": 14892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "right after the fourth column, we have this beautiful chart. Now we could take this to the next level,",
      "start": 14896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we could add a legend here, we could change the color of these bars, we could even use a different",
      "start": 14900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "kind of chart, it doesn't have to be a bar chart. So to learn more about this we can",
      "start": 14904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "read the documentation for openpyxl. So",
      "start": 14908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our program is complete, for our code is dirty, it's not clean, it's not",
      "start": 14912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "organized. We don't have any functions here. We have written all the code in app.py.",
      "start": 14916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let's goo ahead and organize this code like a professional software developer.",
      "start": 14920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, on line 4, we are loading our workbook",
      "start": 14924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then we're getting a reference to the first sheet, but we don't really need these two lines here",
      "start": 14928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is purely for demonstration to show you how to access a cell. So,",
      "start": 14932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's delete these unnecessary lines, this is a very important practice",
      "start": 14936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as you're coding always look at your code, always review it, see if you have some code that is",
      "start": 14940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "not used. Always delete those. Okay, next we are iterating over",
      "start": 14944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all the rows, fixing the prices, and then",
      "start": 14948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we select the values to add a chart, and finally we save the workbook.",
      "start": 14952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, if you were going to use this to automate the process of updating",
      "start": 14956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "thousands of spreadsheets, this program wouldn't work, because it's only",
      "start": 14960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "relying on this file. So we want o reorganize this code, and",
      "start": 14964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "move it inside of a function. This function should take the name of a function",
      "start": 14968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let's define a function. Let's",
      "start": 14972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call it process_workbook.",
      "start": 14976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "It gets a file name. Now, we move all the code inside",
      "start": 14980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of this function, so let's select everything, and press",
      "start": 14984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tab, beautiful, now back",
      "start": 14988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to our function, instead of loading this transactions file we're going to load",
      "start": 14992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this file name, that's better,",
      "start": 14996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Also, now that our program is working properly, there is really no need to store the",
      "start": 15000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "result in a separate file. So here we can",
      "start": 15004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "simply overwrite the same file. So let's pass",
      "start": 15008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "file name, that is the end of our function, so,",
      "start": 15012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now, we have this reusable function, we can simply reuse this",
      "start": 15016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to process thousands of spreadsheets. Earlier in this python course you learned",
      "start": 15020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "how to find all the files in a  directory, so we can get each file in a directory",
      "start": 15024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and pass the name of the file to this function, this function will go",
      "start": 15028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ahead and update this spreadsheet in just a second or less.",
      "start": 15032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, that was just one example of using python to automate",
      "start": 15036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "repetitive boring task that waste your time. But automation is not",
      "start": 15040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "just about processing excel spreadsheets, there are so many things we can automate.",
      "start": 15044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Here's a question for you, what do you want to automate, how do you want to use python to make your",
      "start": 15048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "life easier? Use the comment box below and let me know. I love to",
      "start": 15052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "hear about your ideas. Next we're going to work on  project which involves machine learning, which is a",
      "start": 15056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "subset of artificial intelligence. Are you excited?",
      "start": 15060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's get started.",
      "start": 15064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this section, you're going to learn about machine learning, which is a subset of",
      "start": 15068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "AI or artificial intelligence. It's one of the trending topics in the world,",
      "start": 15072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these days, and it's going to have a lot of applications in the future. Here's an example.",
      "start": 15076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Imagine I ask you to write a program to scan an image, and",
      "start": 15080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tell if it's a cat or a dog. If you want to build this program using",
      "start": 15084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "traditional programming techniques, your program is going to get overly complex",
      "start": 15088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "You will have to come up with lots of rules to come up with specific curves",
      "start": 15092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "edges and colors in an image to tell if it's a cat or a dog.",
      "start": 15096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But if I give you a black and white photo, your rules may not work, they may break.",
      "start": 15100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Then you would have to rewrite them. Or I may give you a picture of a cat or a dog from a different",
      "start": 15104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "angle that we did not predict before. So solving this problem",
      "start": 15108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "using traditional programming techniques is going to get overly complex or",
      "start": 15112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sometimes impossible. Now to make the matter worse. What if I ask you to extend",
      "start": 15116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this program such that it supports 3 kinds of animals.",
      "start": 15120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Cats, dogs, and horses, once again you will have to rewrite",
      "start": 15124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "all those rules. That's not going to work. So machine learning is a technique",
      "start": 15128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to solve these kinds of problems, and this is how it works. We build",
      "start": 15132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a model or an engine and give it lots and lots of data.",
      "start": 15136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example, we give it thousands or tens of thousands of pictures of",
      "start": 15140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "cats and dogs. Our model will then find and learn patterns and the input",
      "start": 15144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "data, so we can give it a new picture of a cat that we haven't seen before.",
      "start": 15148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And ask it, is it a cat or a dog or a horse",
      "start": 15152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and it will tell us with a certain level of accuracy, the more input data we give it, the more accurate",
      "start": 15156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our model is going to be. So that was a very basic example,",
      "start": 15160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but machine learning has other applications in self driving cars,",
      "start": 15164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "robotics, language processing, vision processing,",
      "start": 15168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "forecasting things like stock market trends and the weather, games and so on.",
      "start": 15172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So that's the basic idea about machine learning. Next we'll look at machine",
      "start": 15176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "learning in action.",
      "start": 15180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "A machine learning project involves",
      "start": 15184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a number of steps, the first step is to import our data which",
      "start": 15188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "often comes in the form of a csv file. You might have a database with lots of data,",
      "start": 15192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can simply export that data and store it in a csv file for the",
      "start": 15196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "purpose of our machine learning project. So we import our data, next,",
      "start": 15200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to clean it. And this involves tasks such as duplicated data.",
      "start": 15204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "If you have duplicates in the data, we don't want to feed this to the model, because",
      "start": 15208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "otherwise our model will learn bad patterns in our data and will produce the wrong result,",
      "start": 15212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we should make sure that our input data is in a good, and clean shape.",
      "start": 15216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "If there is data that is irrelevant we should remove them, if there are duplicates",
      "start": 15220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or incomplete we can remove or modify them, if our data is",
      "start": 15224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "text based, like the name of countries, or genres of music,",
      "start": 15228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or cats and dogs, we need to convert them to numerical values.",
      "start": 15232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this step really depends on the kinds of data we're working with, every project",
      "start": 15236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is different. Now that we have a clean data set, we need to split it",
      "start": 15240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "into two segments. One for training our model, and the other for",
      "start": 15244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "testing it, to make sure our model produces the right result.",
      "start": 15248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "For example, if you have 1,000 pictures of cats and dogs, we can reserve",
      "start": 15252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "80% for training, and another 20% for testing.",
      "start": 15256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The next step is to create a model, and this involves selecting",
      "start": 15260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an algorithm to analyze the data. There are so many machine learning algorithms",
      "start": 15264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "out there, such as decision trees, neural networks and so on.",
      "start": 15268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Each algorithm have pros and cons in terms of accuracy and performance",
      "start": 15272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so the algorithm you use, depends on the kind of problem",
      "start": 15276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you're trying to solve and your input data. Now the good news isnthat we don't have to",
      "start": 15280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "explicitly program an algorithm, there are libraries out there that provide these",
      "start": 15284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "algorithms, one of the most popular ones, which we are going to look at",
      "start": 15288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this tutorial, is side kick learn. So we build a model using an algorithm ,",
      "start": 15292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "next we need to train our model. So we feed it our training data.",
      "start": 15296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Our model will then look for the patterns in the data, so enxt",
      "start": 15300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can ask it to make predictions. Back to our examples of cats and dogs,",
      "start": 15304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can ask our model is this a cat or is this a dog and our model",
      "start": 15308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will make a prediction, now the prediction is not always accurate",
      "start": 15312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in fact when you start out, it's very likely your predictions are inaccurate.",
      "start": 15316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we need to envalue the predictions and measure their accuracy.",
      "start": 15320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Then we need to get back to our model and either select a different algorithm",
      "start": 15324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that is going to produce a more accurate result for the kind of problem",
      "start": 15328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're trying to solve. Or fine tune the parameters of our model.",
      "start": 15332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So each algorithm has parameters that we can modify to optimize the",
      "start": 15336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "accuracy. So these are the high level steps that you follow in a machine learning",
      "start": 15340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "project. Next we'll look at the libraries and tools for machine learning.",
      "start": 15344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this lecture we're going too look at the popular python library",
      "start": 15352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that we use in machine learning projects. The first one is numpy which",
      "start": 15356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "provides a multidimensional array. A very, very, popular library.",
      "start": 15360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The seconnd one is pandas, which is a data analysis library that",
      "start": 15364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "provides a concept called data frame. Data frame is a two dimensional",
      "start": 15368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "data structure similar to an excel spreadsheet. So we have rows and columns",
      "start": 15372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can select columns in a row or a column or a range of rows and",
      "start": 15376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "columns, again, very very popular in machine learning",
      "start": 15380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and data science projects. The third library is mad plot lib which",
      "start": 15384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is a two dimensional plotting library for creating graphs on plots.",
      "start": 15388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The next library is sidekick learn, which is one of the most popular machine learning",
      "start": 15392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "libraries that provides all these common algorithms like decision trees,",
      "start": 15396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "neural networks and so on. Now, when working with machine learning",
      "start": 15400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "projects, we use an environment called jupiter for writing our code, technically we can still",
      "start": 15404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "use vs code or any other code editor, but these editors",
      "start": 15408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "are not ideal for machine learning projects, because we need to frequently",
      "start": 15412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "inspect the data, and that is really hard in environments like vs code and",
      "start": 15416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "terminal. If you're working with a table of 10 or 20 columns",
      "start": 15420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "visualizing this data in a terminal window is really, really difficult and messy, so thats why we use jupiter.",
      "start": 15424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So that's why we use jupiter, it makes it really easy to inspect our data.",
      "start": 15428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now to install jupiter, we are going to use  platform called anaconda.",
      "start": 15432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, head over to Anaconda.com/download.",
      "start": 15436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "On this page you can download Anaconda distribution for your operating system,",
      "start": 15440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, we have distributions for Windows Mac and",
      "start": 15444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Linux. So let's go ahead and install",
      "start": 15448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Anaconda for python 3.7. Download,",
      "start": 15452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, so",
      "start": 15456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here's Anaconda, download it on my machine, let's double click this.",
      "start": 15460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, first it's going to run a program to determine if the software can be installed.",
      "start": 15464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let's continue and once again continue,",
      "start": 15468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pretty easy, continue one more time,",
      "start": 15472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I agree with the license agreement, we can use the default",
      "start": 15476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you ca use the default installation location so don't worry about that, just click install,",
      "start": 15480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "give it a few second, now the beautiful thing about Anaconda is it will install",
      "start": 15484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "jupiter, as well as all those data popular science libraries",
      "start": 15488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like numpy, Pandas and so on. So we don't have to manually install this",
      "start": 15492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "using pip. Alright now as part of",
      "start": 15496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the next step Anaconda is suggesting to install Microsoft vs code. We",
      "start": 15500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "already have this on our machine so we don't have to install it we can go with continue",
      "start": 15504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and close the installation, now finally we can move the",
      "start": 15508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this to trash because we don't need this installer in the future.",
      "start": 15512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, now open upa  terminal window and type",
      "start": 15516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "jupiter, with a y, space, notebook.",
      "start": 15520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This will start the notebook server on your machine. So enter",
      "start": 15524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go. This will start the notebook server",
      "start": 15528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on your machine, we can see these default messages here, don't worry about them, now",
      "start": 15532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it automatically opens a browser window, pointing to local host",
      "start": 15536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "port 888. This is what we call",
      "start": 15540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "jupiter dashboard. On this dashboard we have a few tabs, the first tab",
      "start": 15544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is the files tab, and by default, this points to your home directory.",
      "start": 15548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So every user on your machine has a home directory, this its my home directory",
      "start": 15552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on Mac, you can see here we have a desktop folder as well as documents,",
      "start": 15556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "downloads and so on. On your machine you're going to see different folders, so somewhere",
      "start": 15560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so somewhere on your machine you need to create a jupiter notebook. I'm going to go to desktop",
      "start": 15564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here's my desktop I don't have anything here, and then",
      "start": 15568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "click new, I want to create a notebook for python",
      "start": 15572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3. In this notebook we can write python code, and execute it line by line.",
      "start": 15576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We can easily visualize our data as you can see over the next few videos. So,",
      "start": 15580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's go ahead with this,",
      "start": 15584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "alright, here's our first notebook, you can see by default it's called",
      "start": 15588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "untitled, let's change that to Hello World so",
      "start": 15592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is going to be the hello world of our machine learning project. Let's",
      "start": 15596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "rename this now if you look at your desktop you can see this file",
      "start": 15600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "hello world.ipynb. This is a jupiter",
      "start": 15604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "notebook. It's kind of similar to our py files where we write our",
      "start": 15608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "python code, but it includes additional data that jupiter uses to execute our",
      "start": 15612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code. So back to our notebook, let's",
      "start": 15616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "do a print hello world.",
      "start": 15620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And then, click this run button here",
      "start": 15624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and here's the result printed in jupiter, so we don't have to",
      "start": 15628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "navigate back and forth between the terminal window we can see all the result",
      "start": 15632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "right here. Next I'm going to show you how to load a data set from a",
      "start": 15636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "csv file in jupiter.",
      "start": 15640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, in this lecture we're going to download a data set from a very popular website called",
      "start": 15648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "caggle.com. Caggle is basically a place to do data science projects.",
      "start": 15652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So the first thing you need to do is to create an account, you can sign up with Facebook,",
      "start": 15656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Google, or using a custom email and password, once you sign up then come back",
      "start": 15660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here, on caggle.com, Here one the search bar",
      "start": 15664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "search for video game sales.",
      "start": 15668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This is the name of a very popular data set that we're going to use in this lecture. So,",
      "start": 15672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here in this list you can see the first item with this kind of reddish",
      "start": 15676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "icon, so, let's go with that, as you can see this data",
      "start": 15680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "set includes the sales data for more then 16,000 videos",
      "start": 15684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "games. On this page you can see the description of various",
      "start": 15688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "columns in this data set, we have rank, name, platform,",
      "start": 15692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "year, and so on, so here's our data source, it's a csv file",
      "start": 15696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "called vg sales.csv, as you can see there are over 16,000",
      "start": 15700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "rows, and 11 columns in this data set.",
      "start": 15704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Right below that you can see the first few records of this data set.",
      "start": 15708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, here's our first record, the ranking for this game is 1, it's the wi sport",
      "start": 15712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "game for wii as the platform and it was released in the year 2006,",
      "start": 15716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now, what I want you to do is go ahead and",
      "start": 15720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "download the data set, and as I told you before you need to sign in",
      "start": 15724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "before you can download this. So this will give you a zip file as you can see here,",
      "start": 15728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here's our csv file, now I want you to",
      "start": 15732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "put this right next to your jupiter notebook, on my machine that is on my desktop",
      "start": 15736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so I'm going to drag and drop this onto the desktop folder.",
      "start": 15740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, if you look at the desktop you can see here's my",
      "start": 15744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "jupiter, hello world notebook, and right next to that we have",
      "start": 15748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "vgsales.csv. With that, we go back",
      "start": 15752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to our jupiter notebook, let's remove the first line and instead",
      "start": 15756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "import pandas",
      "start": 15760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as pd. With his we're importing pandas module",
      "start": 15764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and renaming it to pd, so we don't have to type pandas. several times in",
      "start": 15768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this code. Now let's type pd.",
      "start": 15772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "read_csv. And pass the",
      "start": 15776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "name of our csv file. That is vgsales.",
      "start": 15780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "csv. Now because this csv file, is in the current folder right next to our jupiter notebook,",
      "start": 15784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can easily load it, otherwise we have to supply the full path",
      "start": 15788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to this file. So, this returns a",
      "start": 15792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "data frame object which is like an excel spreadsheet. Let me show you.",
      "start": 15796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we store it here, and then we can",
      "start": 15800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "simply type df to inspect it. So one more time let's run this program",
      "start": 15804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here's our data frame with these rows and these columns so we have",
      "start": 15808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "frank name platform and so on. Now this data frame object",
      "start": 15812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "has lots of attributes and methods that we're not going to cover in this tutorial,",
      "start": 15816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that's really beyond the scope of what we're going to do, so I'm going to leave it up to you to",
      "start": 15820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "read pandas documentation or follow other tutorials to find out about pandas data frames.",
      "start": 15824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But in this lecture, I'm going to show you some of the most useful methods and attributes.",
      "start": 15828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The first one is shape, so shape",
      "start": 15832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's run this one more time, so here's the shape of this data set, we have over",
      "start": 15836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "16,000 records and 11 columns.",
      "start": 15840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Technically this is a 2 dimensional array of 16,000",
      "start": 15844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and 11, okay? Now, we can see here we have another",
      "start": 15848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "segment for writing code. SO we don't have to write all the code in the first segment",
      "start": 15852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so here in the second segment we can call one of the methods of the dataframe,",
      "start": 15856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that is df.describe.",
      "start": 15860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now when we run this program, we can see the",
      "start": 15864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "output for each segment right next to it. So here's our first",
      "start": 15868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "segment, here we have these three lines, and this is the output of",
      "start": 15872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the last line. Below that we have our second segment, here we're calling",
      "start": 15876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the describe method, and right below that we have the output of",
      "start": 15880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this segment So this is the beauty of jupiter, you can easily visualize",
      "start": 15884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our datsa, doing this with vscode in windows is really tedious and",
      "start": 15888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "clunky. So what is the describe method returning? Basically it's",
      "start": 15892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "returning some basic information about each column in this data set, So,",
      "start": 15896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as you saw earlier we have columns like rank, year and so",
      "start": 15900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on. These are the columns with numerical values. Now for each column we have",
      "start": 15904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the count which is the number of records in that column, you can se",
      "start": 15908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our rank column has 16,5",
      "start": 15912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "-98 records whereas the year column has 16,3-",
      "start": 15916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "-27 records.. So this shows that some of our records don't",
      "start": 15920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "have the value for the year column. We have null values.",
      "start": 15924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So in a real data science or machine learning project we'll have to use some",
      "start": 15928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "techniques to clean up our data set. One option is to remove the records",
      "start": 15932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that don't have a value for the year column. Or we can assign them a default value.",
      "start": 15936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "That really depends on the project. Now another attribute for each column",
      "start": 15940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is mean so this is the average of all the values, now",
      "start": 15944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the case of the rank column, this rank doesn't really matter, but look at the year.",
      "start": 15948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So the average year year for all these video games in our dataset is",
      "start": 15952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2006. And this might be  important in the problem we're trying to solve.",
      "start": 15956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We also have standard deviation, which is a",
      "start": 15960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "measure to quanitfy the amount of variation in our set of values, below that we have",
      "start": 15964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "min, as an example the minimum value for the year column",
      "start": 15968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is 1980. So quite often when we work with a  new data set,",
      "start": 15972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we call the describe method to get some basic statistics about",
      "start": 15976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our data. Let me show you another useful attribute.",
      "start": 15980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, in the next segment, let's type df.values.",
      "start": 15984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let's run this, as you can see this returns",
      "start": 15988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a two dimensional array, this square bracket indicates the outer array",
      "start": 15992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and a second one represents an inner array.",
      "start": 15996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So the first element inn our outer array, is an",
      "start": 16000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "array itself, these are the values in this array, which basically",
      "start": 16004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "represent the first row in our data set. So the video game we ranking",
      "start": 16008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "1, which is called wii sports. So this was a basic",
      "start": 16012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "overview of pandas data frames, in the next lecture I'm going to show you",
      "start": 16016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "some of the useful shortcuts of jupiter.",
      "start": 16020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this lecture I'm going to show to you some of the most useful shortcuts in Jupiter,",
      "start": 16028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now the first thing I want you to pay attention to is this green bar on the left.",
      "start": 16032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This indicates that this cell is currently in the edit mode, so we can",
      "start": 16036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "write code here. Now, if we press the",
      "start": 16040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "escape key, green turns to blue, and that means this cell is",
      "start": 16044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "currently in the command mode. So basically the activated cell can either",
      "start": 16048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "be in the edit mode or command mode. Depending",
      "start": 16052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on the mode, we have different shortcuts, so here we're in the command mode.",
      "start": 16056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "If we press h, we can see the list of all the",
      "start": 16060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "keybord shortcuts, right above this list we can",
      "start": 16064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "see, Mac OS modifier keys, these are the",
      "start": 16068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "extra keys on a Mac keyboard. If you're a Windows",
      "start": 16072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "user you're not gong to see these. So as an example, here is the shape of the",
      "start": 16076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "command key, this is control, this is option,",
      "start": 16080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and so on. With this guideline you can easily understand the shortcut associated with",
      "start": 16084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "each command. Let  me show you. So here we have all",
      "start": 16088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the commmands when a cell is in the command mode. For example, we have",
      "start": 16092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this command, open the command palette. This is exactly like the",
      "start": 16096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "command palette that we have in vs code. Here is a short cut",
      "start": 16100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to execute this command. That is command shift and F.",
      "start": 16104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay, so here we have lots of shortcuts,",
      "start": 16108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of course you're not going to use all of them all the time, but it's good to have a quick look here to see",
      "start": 16112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what is available for you. Tis these shortcuts you can write code much faster.",
      "start": 16116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So let me show you somme of the most useful ones. I'm going to close this,",
      "start": 16120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now with our first cell in the command mode",
      "start": 16124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I'm going to press b, and this inserts, a new",
      "start": 16128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "cell below this cell. We can also go",
      "start": 16132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "back to our first cell, press escape, now the cell is in the command",
      "start": 16136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "mode. We can insert an empty cell above this cell by pressing a.",
      "start": 16140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So either a or b. A for above or",
      "start": 16144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "b for below. Now if you don't want this cell, you can press d",
      "start": 16148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "twice to delete  it. Like this.",
      "start": 16152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now in the cell I'm going to print a hello world message. So print",
      "start": 16156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "hello world. Now, to",
      "start": 16160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run the code in this cell, we can click on the run button here,",
      "start": 16164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, here's our print function, and",
      "start": 16168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "right below that you can see the output of this function. But note that when you run",
      "start": 16172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a cell, this will only execute the code in that cell.",
      "start": 16176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In other words, the code in other cells will not be executed.",
      "start": 16180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let me show you want I mean, so in the cell below the cell, I'm going to delete the call",
      "start": 16184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to a describe method. Instead I'm going to print",
      "start": 16188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ocean. Now, I'm going",
      "start": 16192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to put the cursor back in this cell where we print this hello world message",
      "start": 16196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and run this cell. So we can see hello world",
      "start": 16200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is displayed here, but the cell below is still displaying",
      "start": 16204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the describe table, so we don't see the changes here. Now,",
      "start": 16208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to solve this problem, we can go to the cell menu on the top,",
      "start": 16212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and run all cells together. This can work for a",
      "start": 16216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "small project, but sometimes you're working with a large data",
      "start": 16220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "set, so if you want to run all these cells together it's going to take a lot of time. That is",
      "start": 16224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the reason jupiter saves the output of each cell, so we don't have to rerun that",
      "start": 16228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code if it hasn't changed. So this notebook file that we have here,",
      "start": 16232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "includes our source code organized in cells as",
      "start": 16236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "well as the output for each cell. That is why it's different",
      "start": 16240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from a regular py file where we only have the source code.",
      "start": 16244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Here we also have autocompletion and intellisence, so in this cell,",
      "start": 16248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's call df data frame",
      "start": 16252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ". now if you press tab you can see all the attributes",
      "start": 16256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and methods in this object. So let's call",
      "start": 16260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "describe, now with the cursor on the name of the method we can",
      "start": 16264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "press shift and tab, to see this tool tip that describes",
      "start": 16268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what this method does and what parameter it takes. So here in front of",
      "start": 16272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so here in front of signature you can see the describe method, these are the paramter",
      "start": 16276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and their default value, and right below that you can see",
      "start": 16280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the description of what that method does. In this case, it describes",
      "start": 16284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "generates descriptive statistics, that summarize the central tendency and so on.",
      "start": 16288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Similar to vs code, we can also convert a line to comment",
      "start": 16292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "by pressing command and slash on mac, or",
      "start": 16296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "control slash on windows. Like this. Now that line is a comment, we can",
      "start": 16300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "press the same shortcut one more time to remove the comment,",
      "start": 16304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so these are some of the most useful shortcuts in jupiter.",
      "start": 16308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now over the next few lectures we're going to work on a real machine learning project, but before we get there,",
      "start": 16312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's delete all the cells here, so we start with only a single",
      "start": 16316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "empty cell, so here, in this cell, first I'm going to press the",
      "start": 16320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "escape button, now the cell is blue, so we're in the command mode, and",
      "start": 16324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can delete the cell by pressing d twice. There you go.",
      "start": 16328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, the next cell is activated and is in the command mode.",
      "start": 16332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, let's delete this as well, so we have two more cells to delete",
      "start": 16336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "there you go, and the last one, like this,",
      "start": 16340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so now we have an empty notebook with a single cell.",
      "start": 16344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Over the next few lectures, we're going to work on a  real machine learning project,",
      "start": 16352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "imagine we have an online music store, when our users sign up,",
      "start": 16356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we asked our age and gender, and based on their profile,",
      "start": 16360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you recommend various music albums their likely to buy. So in this project,",
      "start": 16364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you want to use machine learning to increase sales.",
      "start": 16368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we want to build a model, we feed this model with some sample data,",
      "start": 16372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "based on the existing users. Our model will learn the patterns in our data,",
      "start": 16376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we can ask it to make predictions. When a new user signs up,",
      "start": 16380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we tell our model, hey, we have a new user with this profile, what",
      "start": 16384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is the kind of music, that this user is interested in, our model will say jazz, or hip hop,",
      "start": 16388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or whatever, and baed on that we can make suggestions to the user",
      "start": 16392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so, this is the problem we're going to solve, now back to the list of steps in the machine",
      "start": 16396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "learning projects, first we need to import our data, then, we should",
      "start": 16400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "prepare or clean it, next we select a machine learning algorithm",
      "start": 16404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to build a model, we treat our model and ask it to make predictions.",
      "start": 16408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And finally, we evaluate our algorithm to see it's",
      "start": 16412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "accuracy. if it's not accurate we either fine tune our model or",
      "start": 16416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "select a different algorithm. So let's focus on the first step.",
      "start": 16420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Head over to bit.ly/music.csv",
      "start": 16424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is a very basic csv that I've created for this project, it's just some random",
      "start": 16428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "made up data it's not real. So we have a table with 3",
      "start": 16432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "columns, age, gender, and genre. Gender",
      "start": 16436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "can either be one which represents a male,",
      "start": 16440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or a 0, which represents a female, here I'm making a few assumptions.",
      "start": 16444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I'm assuming that men between 20 and 25 like hip hop men between",
      "start": 16448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "26 and 30 like jazz, and after the age of 30,",
      "start": 16452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "they like classical music. For women I'm assuming",
      "start": 16456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that if they are between 20 and 25 they like dance music, if",
      "start": 16460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "they are between 26 and 30 they like acoustic music, and just like",
      "start": 16464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "men, after the age of 30 they like classical music. Once again this is",
      "start": 16468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a made up pattern, it's not the representation of the reality, so,",
      "start": 16472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's go ahead and download this csv. Click on this ... icon here",
      "start": 16476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and download this file.",
      "start": 16480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In my downloads folder, here we have this music.csv.",
      "start": 16484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I'm going to drag and drop this onto the desktop because that's where I've",
      "start": 16488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "stored this hello world notebook. So I want you to put this csv file",
      "start": 16492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "right next to your jupiter notebook.",
      "start": 16496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, back to our notebook, you need to read the csv file, so just like before",
      "start": 16500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first we need to import the pandas module, so import panda",
      "start": 16504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as pd. And then we'll call pd,",
      "start": 16508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".read_csv and",
      "start": 16512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the name of our file is music.csv. As you saw earlier this",
      "start": 16516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "returns a data frame which is a two dimensional array similar to an xl spreadsheet,",
      "start": 16520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so let's call that music_",
      "start": 16524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "data. Now let's inspect",
      "start": 16528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this music_data to make sure we loaded everything properly so",
      "start": 16532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "run, so here's our data frame, beautiful, next we need",
      "start": 16536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to prepare or clean the data. And that's the topic for the next lecture.",
      "start": 16540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "next lecture.",
      "start": 16544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The second step in a machine learning project, is cleaning, or",
      "start": 16548.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "preparing the data, and that involves tasks such as removing duplicate",
      "start": 16552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "null values and so on. Now on this particular data set we don't have to do anything",
      "start": 16556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "kind of cleaning, because we don't have any duplicates, and as you can see",
      "start": 16560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "As you can see, all rows have values for all columns, so we don't have null values.",
      "start": 16564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But there is one thing we need to do,",
      "start": 16568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we should split this data set into two separate data sets, one into the first",
      "start": 16572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "two columns, which we refer to as the input set, and the other",
      "start": 16576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with the last column which we refer to as the output set. So when we train a model,",
      "start": 16580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so when we train a model we give it two separate data sets. The input set and the output set.",
      "start": 16584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The output set which is in this case",
      "start": 16588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the genre column contains the predictions so we're telling our model that",
      "start": 16592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if we have a user who's 20 years old and a male they like",
      "start": 16596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "hip hop. Once we train our model then we give it a new",
      "start": 16600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "input set. For example, we have a new user who is",
      "start": 16604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "21 years old and is a male, what is the genre of the music that this",
      "start": 16608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "user probably likes. As you can see in our input set, we don't have",
      "start": 16612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a sample for a 21 year old male, so we're going to ask",
      "start": 16616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our model to predict that. That is the reason we need to split this data",
      "start": 16620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "set into two separate sets. Input and output",
      "start": 16624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So back to our code, this data frame object has a",
      "start": 16628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "method called drop. Now",
      "start": 16632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if you put the cursor on the method name and press shift",
      "start": 16636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and tab, you can see this tool tip, so this is the signature of",
      "start": 16640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this drop method, these are the parameters you can pass here.",
      "start": 16644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the parameter we're going to use in this lecture is set to none by default.",
      "start": 16648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Witht his parter we can specify the columns we want to drop, so",
      "start": 16652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this case we set columns",
      "start": 16656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to an array with one string, genre",
      "start": 16660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now this method doesn't actually modify the original data set.",
      "start": 16664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In fact it will create a new data set but without thisq",
      "start": 16668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call. So by convention we use a capital X to",
      "start": 16672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "represent that data set, so capital x equals this",
      "start": 16676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "expression. Now, let's inspect x,",
      "start": 16680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so as you can see our input set or x",
      "start": 16684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "includes these two columns, age and gender, it doesn't have the",
      "start": 16688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "output or predictions. Next we need to create our output set so,",
      "start": 16692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "once again we start with our data frame",
      "start": 16696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "using data, using square brackets we can get all the",
      "start": 16700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "values in a given column. In this case, genre. Once again this returns",
      "start": 16704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a new data set. By convention we use a lower case y",
      "start": 16708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to represent that. So that is our output",
      "start": 16712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "data. Let's inspect that as well. So,",
      "start": 16716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this data set we only have the predictions or the answers.",
      "start": 16720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So we have prepared our data, next we want to create a model using an",
      "start": 16724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "algorithm.",
      "start": 16728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The next step is to build a",
      "start": 16732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "model using a machine learning algorithm. There are so many algorithms out there, each algorithm",
      "start": 16736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "has its pros and cons, in terms of the performance and accuracy.",
      "start": 16740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this lecture we're going to use a very simple algorithm called decision tree.",
      "start": 16744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now the good news is we don't have to explicitly",
      "start": 16748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "program these algorithms, they're already implemented in a  library called side kick",
      "start": 16752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "learn. So, here on the top,",
      "start": 16756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from sklearn.tree",
      "start": 16760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's import the decision tree",
      "start": 16764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "classifier. So sklearn is the package",
      "start": 16768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that comes with sidekick learn library, this is the most popular machine learning library",
      "start": 16772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in python. In this package, we have a module called tree.",
      "start": 16776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And in this module we have a class called decision tree classifier.",
      "start": 16780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "This class implements the decision tree operator, okay?",
      "start": 16784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, now we need to create a new instance of this class.",
      "start": 16788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, at the end, let's create",
      "start": 16792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an object called models nd set it to anew instance of decision,",
      "start": 16796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tree classifier. Like this.",
      "start": 16800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So now we have a model, next we need to train it so it learns",
      "start": 16804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "patterns in the data, and that is pretty easy. You call model,",
      "start": 16808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".fit this method takes",
      "start": 16812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2 data set. The input set and the output set.",
      "start": 16816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So they are capital x, y.",
      "start": 16820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now finally, we need to ask our model to make a prediction, so we can",
      "start": 16824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ask it, what is the kind of music a 24 year old male likes? Now before",
      "start": 16828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we do that, let's temporarily inspect our initial data set. That is",
      "start": 16832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "music data. So, look what",
      "start": 16836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we got here. As I told you earlier, I've assumed",
      "start": 16840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that men between 20 and 25 like hip hop music but",
      "start": 16844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here we only have 3 samples for men age",
      "start": 16848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "20, 23,and 25. We don't have a sample for",
      "start": 16852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a 21 year old male. So if you ask our model to predict the kind of music",
      "start": 16856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that a 21 year old male likes, we expect it to say hip hop. Similarly,",
      "start": 16860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "I've assumed that women between 20 and 25 like dance music,",
      "start": 16864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "but we don' have a sample for a 22 year old female. So once again if",
      "start": 16868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you ask our model to predict the kind of music that a 22 year old woman",
      "start": 16872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "likes, we expect it to say dance.",
      "start": 16876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, with these assumptions let's go ahead and ask our model",
      "start": 16880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to make predictions. So let's remove",
      "start": 16884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the last line, and instead we're going to call model",
      "start": 16888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".predict. This method takes a",
      "start": 16892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2 dimensional array. So here's the outer array. In this array, each element",
      "start": 16896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is an array. So I'm going to pass",
      "start": 16900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "another array here, and in this array I'm going to pass a new input set.",
      "start": 16904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a 21 year old male. So 21, 1",
      "start": 16908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that is like a new record in this table. Okay? So,",
      "start": 16912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this is one input set, let's pass another input for a 22 year old",
      "start": 16916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "female. So here's another array, here,",
      "start": 16920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we add 22 comma 0, so we're asking our model to make 2 predictions",
      "start": 16924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "at the same time. We get the result and store it",
      "start": 16928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in a variable called predictions, and finally",
      "start": 16932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's inspect that in our notebook.",
      "start": 16936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Run, look what we got, our",
      "start": 16940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "model is saying that a 21 year old male likes hip hop, and a  22 year",
      "start": 16944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "old female likes dance music. So our model successfully",
      "start": 16948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "will make predictions here. But wait a minute, building a model that makes",
      "start": 16952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "predictions accurately is not always that easy.",
      "start": 16956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "After we build a model we need to measure it's accuracy.",
      "start": 16960.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And if it's not accurate enough, we should either fine tune it or build a model using a different",
      "start": 16964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "algorithm. So next lecture I'm going to show you how to measure the accuracy of",
      "start": 16968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a model.",
      "start": 16972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this lecture I'm going to show you",
      "start": 16976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "how to measure the accuracy of your models. Now in order to do so,",
      "start": 16980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "first we need to split our data set into two sets. One for training and the other",
      "start": 16984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for testing, because right now, we are passing the entire data set,",
      "start": 16988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for training the model and we're using 2 samples for",
      "start": 16992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "making predictions. That is not enough to calculate the",
      "start": 16996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "accuracy of a model. A general rule of thumb is to annotate",
      "start": 17000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "70-80% of our data to training, and another20-30%",
      "start": 17004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for testing, then instead of passing only two samples for",
      "start": 17008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "making predictions, we can pass the data set for testing",
      "start": 17012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we'll get the predictions and then compare the predictions with the actual values.",
      "start": 17016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In the test set. Based on that, we can calculate the",
      "start": 17020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "accuracy. That's really easy, all we have to do is import a couple functions and",
      "start": 17024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "call them in this code. Let me show you. So first on this top",
      "start": 17028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from sklearn.model",
      "start": 17032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "underline selection module we import a function called",
      "start": 17036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "train test split. With this function we can easily split our",
      "start": 17040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "data set into two sets. So training and testing,",
      "start": 17044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now, right here, after we define x and y,",
      "start": 17048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sets, we call this funciton, so train",
      "start": 17052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "test split. We give it 3",
      "start": 17056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "arguments, x, y, ad a keyword argument that specifies",
      "start": 17060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the size of our test dataset. So test",
      "start": 17064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "_size we set it to 0.2 So we're allocating 20%",
      "start": 17068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of our data for testing. Now this functions returns a",
      "start": 17072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tuple, so we can unpack it into 4 variables",
      "start": 17076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "right here. x_train",
      "start": 17080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x_test y_train and y",
      "start": 17084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "_test. so the first two variables",
      "start": 17088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "are the input sets for training and testing.",
      "start": 17092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And the other are the output sets for training and testing,",
      "start": 17096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now, when training our model,",
      "start": 17100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "instead of passing the entire data set we want to pass only the training data set.",
      "start": 17104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, x_train,",
      "start": 17108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and y_train. Also, when making predictions",
      "start": 17112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "instead of passing these two samples, we pass",
      "start": 17116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "x_test. So thats the datas set.",
      "start": 17120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "That contains input values for testing. Now we get",
      "start": 17124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the predictions. To calculate the accuracy we simply have to compare these predictions",
      "start": 17128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with the actual values we have in the output set",
      "start": 17132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for testing. That is very easy. First on the top,",
      "start": 17136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we need to import a funciton, so, from sklearn.metric",
      "start": 17140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".metrics import accuracy",
      "start": 17144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "_score. Now at the end.",
      "start": 17148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We call this function, so accuracy score and",
      "start": 17152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "give it two arguments y_test.",
      "start": 17156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Which contains the expected values and",
      "start": 17160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "predictions which contains the actual value.",
      "start": 17164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now this functions returns an accuracy score between 0",
      "start": 17168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to 1. So we can store it here,",
      "start": 17172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and simply display it on the console. So let's go ahead",
      "start": 17176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and run this program. So, the accuracy score",
      "start": 17180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is 1 or a 100% but if we run this one more time, we're going to see a different result",
      "start": 17184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "because every time we split our data set into",
      "start": 17188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "training a test sets. We'll have different data sets, because this function",
      "start": 17192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "randomly picks data for training and testing. Let me show you, so put the cursor",
      "start": 17196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in the cell, now we can see this is activated",
      "start": 17200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "note that if you click this button here, it will run the cell and also insert a new",
      "start": 17204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "cell below this cell. Let me show you. So if I go to this second cell",
      "start": 17208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "press the skip button, now we are in the command mode,",
      "start": 17212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "press d twice, okay now it's deleted, if we",
      "start": 17216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "click the run button, we can see, this code was",
      "start": 17220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "executed, and now we have a new cell, so if you want to run our cell multiple times",
      "start": 17224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "every time you have to click this and then run",
      "start": 17228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it, and then click again, and run it, it's a little bit tedious. So I'll show you a shortcut.",
      "start": 17232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Activate the first cell, and press control and enter",
      "start": 17236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this runs the current cell without",
      "start": 17240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "adding a new cell below it. So, back here, lets run it multiple times",
      "start": 17244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "okay, now look the accuracy dropped to 0.75, it's",
      "start": 17248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "still good, so the cuuracey scored here, is somewhere",
      "start": 17252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "between 75% to a hundred %. But let me show you something, if I",
      "start": 17256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "change the test size, from 0.2 to 0.",
      "start": 17260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "8, so essentially we're using only 20 percent of our data,",
      "start": 17264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for training this model. And you're using the other 80%",
      "start": 17268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for testing. Now let's see what happens when we run this cell multiple",
      "start": 17272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "times. SO, control and enter, look, the accuracy immediately",
      "start": 17276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "dropped to 0.4 One more time, now 46%",
      "start": 17280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "40%, 26%",
      "start": 17284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it's really, really bad. The reason this is happening is because",
      "start": 17288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you are using very little data for training this model. This is one of",
      "start": 17292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the key concepts in machine learning, the more data we give to our model and the cleaner",
      "start": 17296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the data is, we get the better result, so if you have duplicates,",
      "start": 17300.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "irrelevant data, or incomplete values, our",
      "start": 17304.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "model will learn back patterns in our data. That's why it's really important to clean",
      "start": 17308.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "before training our model. Now let's change this back to 0.",
      "start": 17312.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2, run this one more time, okay, now",
      "start": 17316.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the accuracy is 1, 75%, now we drop to 50%",
      "start": 17320.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "again, the reason this is happening, is because we don't have enough data.",
      "start": 17324.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Some machine learning problems, require, thousands or even millions",
      "start": 17328.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of samples, to train model, the more complex a problem is,",
      "start": 17332.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the more data we need. For example, here we're only dealing with a table of three",
      "start": 17336.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "columns, but if you want to build a model to tell if a picture of a cat or a dog or a horse,",
      "start": 17340.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or a lion, we will need millions of pictures, the more animal",
      "start": 17344.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "it will support the more pictures we need. In the next lecture, we're going to talk about",
      "start": 17348.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "model persistence.",
      "start": 17352.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is a",
      "start": 17356.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "very basic implementation of building a training a model to make a prediction.",
      "start": 17360.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now to simplify things I have removed all the code that you wrote in the last lecture for",
      "start": 17364.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "calculating the accuracy, because in this lecture, you're going to",
      "start": 17368.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "focus on a different topic, So basically we import our data set.",
      "start": 17372.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Create a  model, train it, and then",
      "start": 17376.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ask it to make predictions, now this piece of code that you see here, is not what we",
      "start": 17380.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "want to run everytime we have a new user or",
      "start": 17384.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "every time we want to make recommendations to an existing user",
      "start": 17388.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sometimes it's really time consuming. In this example, we're dealing with a",
      "start": 17392.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "very small data set that only has 20 records. But in a  real application,",
      "start": 17396.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you might have a data set with thousands or trillions of examples, training for that",
      "start": 17400.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "might take seconds or minutes or even hours.",
      "start": 17404.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "And that is wy model persistence is important, once in a while,",
      "start": 17408.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you build and train our model and then we save it to a file.",
      "start": 17412.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, next time we want to make predictions, we simply load the model from the file and",
      "start": 17416.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "ask it to make predictions. That model is already trained",
      "start": 17420.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you don't need to retrain it, it's like an intelligent person. So let me show you",
      "start": 17424.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "how to do this. it's very very easy. On the top,",
      "start": 17428.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from sklearn.externals module",
      "start": 17432.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we import joblib. This",
      "start": 17436.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "job lib object has methods for saving and loading modules. So,",
      "start": 17440.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "after we train our model we'll simply call",
      "start": 17444.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "job lib .dump and give it",
      "start": 17448.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "two arguments. Our model and the name of the file",
      "start": 17452.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in which we want to store this model. Let's call this music",
      "start": 17456.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "-recommender.job lib",
      "start": 17460.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "That's all we have to do. Now temporarily I'm going to comment",
      "start": 17464.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "out this line, we don't want to make any predictions, we just want to store",
      "start": 17468.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "train model in a file. So let's run this cell with control,",
      "start": 17472.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and slash, okay, look, in the output",
      "start": 17476.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we have an array that contains the name of our model file.",
      "start": 17480.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is the return value of the dump method. Now back to our",
      "start": 17484.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "desktop, right next to my notebook we can see our job lib file, this is where our model is stored.",
      "start": 17488.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "It's simply a binary file. Now back to our",
      "start": 17492.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "jupiter notebook. As I told you before in a real application we don't want to",
      "start": 17496.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "train model every time. So let's comment out",
      "start": 17500.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these few lines, on Mac, we can press",
      "start": 17504.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "command and slash and on windows control slash.",
      "start": 17508.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay, these lines are commented out, now this time, instead of dumping",
      "start": 17512.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our model, we're going to load it, so we call the load method, we don't have the model, we simply",
      "start": 17516.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "pass the name of our model file. This",
      "start": 17520.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "returns our trained model. Now with this",
      "start": 17524.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "two lines we can simply make predictions, so, earlier,",
      "start": 17528.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we assumed that men between 20-25 like hip hop music.",
      "start": 17532.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's print predictions and see if our model is behaving",
      "start": 17536.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so control",
      "start": 17540.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so this is how we persist and load models.",
      "start": 17544.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Earlier in this section, I told you that decision trees are the easiest",
      "start": 17552.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to understand. And that's why we started machine learning with decision trees. In this lecture, we're going to",
      "start": 17556.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "export our model in visual format, so you will see",
      "start": 17560.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "how this model makes predictions, that is really, really cool.",
      "start": 17564.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Let me show you. So once again I've simplified this code",
      "start": 17568.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so we simply import our data set, create",
      "start": 17572.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "input and output sets, create a model, and",
      "start": 17576.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "train it, that's all we are doing, now I want you to",
      "start": 17580.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "follow along with me, type everything exactly as I show you in this lecture. Don't",
      "start": 17584.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "worry about what everything means we'll come back to it shortly. So on the top,",
      "start": 17588.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "from sklearnimport",
      "start": 17592.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "tree, this object has a method for exporting",
      "start": 17596.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our decision tree in a  graphical format. So after we",
      "start": 17600.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "train our model, let's call tree",
      "start": 17604.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "_graph vis. Now here are a few arguments we need",
      "start": 17608.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to pass. The first argument is our model,",
      "start": 17612.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the second is the name oft he output file. So here we're going to use keyword",
      "start": 17616.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "arguments, because this method takes so many parameters, and we want to selectively pass",
      "start": 17620.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "keyword arguments without worrying about their order. So,",
      "start": 17624.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the parameter we're going to set it out_file",
      "start": 17628.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's set this to music-recommend",
      "start": 17632.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".dot. This is the dot format, which is the",
      "start": 17636.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "graph format, which is a graph description language, you will see that shortly.",
      "start": 17640.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now the other parameter you want to set is feature",
      "start": 17644.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "_names. We set this to an array of two strings,",
      "start": 17648.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "age and gender. These are the features",
      "start": 17652.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or the columns of our data set. So they are properties or features of",
      "start": 17656.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our data. Okay? The other parameter",
      "start": 17660.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is class names. So class_names",
      "start": 17664.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we should set this to the list of classes or labels we have",
      "start": 17668.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in our output data set, like hip hop, jazz, classical and so on.",
      "start": 17672.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, this y data set includes all the genre",
      "start": 17676.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or all the classes of our data, but they are repeated a few times in this data set.",
      "start": 17680.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, here we call y.unit this returns",
      "start": 17684.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "the unique list of classes, now we should sort this alphabetically.",
      "start": 17688.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, we call the sorted function, and pass the",
      "start": 17692.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "result a y.unique.",
      "start": 17696.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "The next parameter is labeled, we set",
      "start": 17700.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this to a string, all, once again don't worry,",
      "start": 17704.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "about the details of these parameters, we're going to come back to these shortly. So,",
      "start": 17708.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "set label to all, then round it,",
      "start": 17712.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "to true, and finally field to true. So,",
      "start": 17716.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so this is the end result, now let's run this sound",
      "start": 17720.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "using control and enter, okay,",
      "start": 17724.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "here we have a nw file music recommender .. that's a little",
      "start": 17728.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "bit funny. So we want to open this file with vs code.",
      "start": 17732.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So drag and drop this into a vs code window.",
      "start": 17736.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Okay, here's a dot format, it's",
      "start": 17740.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a textural language for describing graphs",
      "start": 17744.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now to visualize this graph we need to install an extension in vs code.",
      "start": 17748.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So on the left side, click extensions panel and search",
      "start": 17752.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for dot, dot. Look at this second extension here.",
      "start": 17756.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "graphvis or .language",
      "start": 17760.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "by stephon vs. Go ahead and install this extension",
      "start": 17764.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and then reload vs code. Once you do that, you can visualize",
      "start": 17768.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this dot file. So let me close this tab.",
      "start": 17772.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Alright, look at this ... on the right side. Click this,",
      "start": 17776.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you should have a new menu, open preview to the side. So like that",
      "start": 17780.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "alright, here's the visualization of our decision tree,",
      "start": 17784.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's close the dot file, there you go. This is exactly",
      "start": 17788.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "how our model makes predictions. So we have this",
      "start": 17792.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "binary tree, which means every node can have a maximum of two children.",
      "start": 17796.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "On top of each note we have a condition",
      "start": 17800.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "if this condition is true we go to the child node on the left side. Otherwise we",
      "start": 17804.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "go to the child node on the right side. So let's see what's happening here, the first condition",
      "start": 17808.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is age less then or equal to 30",
      "start": 17812.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".5. If this condition is false, that means that user is 30 years",
      "start": 17816.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "or older, so the genre of the music that their interested in is classical.",
      "start": 17820.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So here we're classifying people based",
      "start": 17824.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "on their profile. That is the reason we have the word class here,",
      "start": 17828.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so a user who is 30 years or older, belongs to the class of",
      "start": 17832.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "classical. Or people who like classical music. Now what if this condition",
      "start": 17836.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is true. That means that user is younger then",
      "start": 17840.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "30, so, now we check the gender, if it's less then 0.5,",
      "start": 17844.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "which basically means it equals to 0, then",
      "start": 17848.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we're dealing with a female. So we go to the child node here,",
      "start": 17852.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now once again we have another condition, so we are dealing with a female",
      "start": 17856.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "who is younger than 30. Once again we ned to check their age so",
      "start": 17860.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is the age less then 25.5? If that's the case",
      "start": 17864.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "then that user likes dance music, otherwise they like acoustic music.",
      "start": 17868.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this is a decision tree that our model uses to make predictions",
      "start": 17872.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now if you're wondering why we have these floating point numbers",
      "start": 17876.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "like 25.5 These are basically the rules",
      "start": 17880.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that our model generates, based on the patterns in our dataset.",
      "start": 17884.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "As we give our model more data, these rules will change so they are not always the same.",
      "start": 17888.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So they are not always the same, also the more columns or the more features",
      "start": 17892.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we have, our decision tree is going to get more complex.",
      "start": 17896.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We only have two features, age, and gender. Now back to our code",
      "start": 17900.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let me quickly explain the meaning of all these parameters, we set field to true",
      "start": 17904.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so each box or each node is filled with a color. We set",
      "start": 17908.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "rounded to true, so they have rounded corners. We set label to all",
      "start": 17912.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "so every node has labels that we can read.",
      "start": 17916.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "We set class names to the unique list of genres",
      "start": 17920.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and that's for displaying the class for each note, right here, and we set",
      "start": 17924.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "feature names to age and gender, sow e can see the rules",
      "start": 17928.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in our notes. So that was a short and",
      "start": 17932.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "sweet introduction to machien learning. Now you can use the materials that you learn in this section",
      "start": 17936.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and apply them to solve a different set of problems. Now here's a question for you:",
      "start": 17940.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "What ideas do you have for machine learning? What kind of problems do you want to solve",
      "start": 17944.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "with machine learning? Use the comments box below and let me know. I love to",
      "start": 17948.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "hear about your ideas! Next we're going to use python and a popular framework called",
      "start": 17952.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "django. To build a web application. Are you ready, let's get started",
      "start": 17956.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "In this turorial, I'm going to show you how to create your first website with python, and A",
      "start": 17964.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and a very popular framework called django. So it's spelled with a silent D,",
      "start": 17968.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and is pronounced django. it's a web framework for",
      "start": 17972.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "perfectionists with deadlines. So if you're a perfectionist and you want to quickly put together",
      "start": 17976.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a website that is fast, scaleable and secure,",
      "start": 17980.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "django is your best friend. And here are the popular websites",
      "start": 17984.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "built with Django. Like Instagram, Spotify",
      "start": 17988.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "YouTube, Washington Post, and so on. Now you might say",
      "start": 17992.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "what is a framework, and why do we need a framework to build a web application or a web site?",
      "start": 17996.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Well, the framework is essentially a library of reusable modules",
      "start": 18000.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "these modules provide functionality for common tasks",
      "start": 18004.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "for example, in the case of a web framework like django we have modules to work with http requests",
      "start": 18008.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "url's, sessions, cookies and so on.",
      "start": 18012.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "These are the concerns of pretty much every website or",
      "start": 18016.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "application out there. So all this functionality is baked into django, we don't have to",
      "start": 18020.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "code it from scratch, that is why we use a framework like django. Now,",
      "start": 18024.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "django. Now technically a framework is more then a library,",
      "start": 18028.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "apart from providing these modules it also provides a structure for each application",
      "start": 18032.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "It tells us what folders or files we should have in our project. So this",
      "start": 18036.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "provides a consistency among various django projects. So as you",
      "start": 18040.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "move from one company to another and work on different projects, you can easily transition from one",
      "start": 18044.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "project to another, because all these applications follow the same structure",
      "start": 18048.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "now, with that interaction, let's create our first",
      "start": 18052.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "django project. So back to pycharm, close the hello world",
      "start": 18056.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "project, and create a new project, create a new project,",
      "start": 18060.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's call this new project pyshop",
      "start": 18064.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "go ahead, alright, now down at the bottom let's",
      "start": 18068.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "open up a terminal window, in this window we're going to",
      "start": 18072.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "install django. So we use pip to install",
      "start": 18076.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "django. But be sure to add two equal signs here followed by",
      "start": 18080.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2.1 With this we are telling pip that we want to install django version",
      "start": 18084.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "2.1. The reason I'm doing this, is because in the future when you're watching this video,",
      "start": 18088.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "chances are there is a newer version django out there. I",
      "start": 18092.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "want to make sure that you can easily follow these tutorials, even though what I'm going to show you",
      "start": 18096.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in these tutorials will most likely work with the latest version of django. I just want to",
      "start": 18100.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "be on the safe side. So let's go ahead",
      "start": 18104.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "alright, django is installed,",
      "start": 18108.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "next we need to create a django project, so here press control and L",
      "start": 18112.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this cleans up our terminal window, you don't have to do it, but it's just",
      "start": 18116.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "easier to see. To create a django project, we need to execute this command, django,",
      "start": 18120.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "-admin space",
      "start": 18124.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "start project space, you're going to call this",
      "start": 18128.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "project pyshop space period.",
      "start": 18132.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So when we install django, django brings a",
      "start": 18136.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "command line utility called django admin so this is a utility or program",
      "start": 18140.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that we can execute form the command line or terminal, right here.",
      "start": 18144.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "Now, this program takes various arguments, in this case",
      "start": 18148.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we want to use this argument start project, with this we're going to create",
      "start": 18152.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "a project called pushup in the current folder.",
      "start": 18156.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So this period is imported here, that means the current folder, if",
      "start": 18160.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "you don't add this period, this utility is going to create an extra folder and that",
      "start": 18164.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "looks a little bit repetitive, so let's go ahead with this,",
      "start": 18168.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "alright, now, back to the project panel, if you expand py",
      "start": 18172.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "shop we can see that this is our project that we created in pycharm",
      "start": 18176.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "and in this folder we have these files.",
      "start": 18180.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "So, init.py, you have seen this before, that means",
      "start": 18184.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this folder is package, so we can import various modules,",
      "start": 18188.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of this package into other modules, and in this module,",
      "start": 18192.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we define various settings for our application, you're going to see this later in",
      "start": 18196.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this course. You also have this url's module, and with this module",
      "start": 18200.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we define what should the user see when they see slash",
      "start": 18204.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "about/contact/products/shopping cart",
      "start": 18208.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "again, we're going to work with this only. And finally we have this module,",
      "start": 18212.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that wsgi, that is short for web server gateway",
      "start": 18216.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "interface. The purpose of this module is to provide a standard interface",
      "start": 18220.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "between applications built with django and web servers. This is",
      "start": 18224.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "an advanced topic, so for now, don't worry about it. Now, outside of this folder,",
      "start": 18228.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "of this folder you also have this new folder in our project",
      "start": 18232.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "manage.py. As the name implies, we use this to manage",
      "start": 18236.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this django project. With this we can start our web server,",
      "start": 18240.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we can work with our data base, again, we're going to work with this soon,",
      "start": 18244.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "let's open up the terminal window one more time, now,",
      "start": 18248.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "type out this command, python if you're on windows or python",
      "start": 18252.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "3 if you're on Mac, because as I told you at the beginning of the course, Mac by",
      "start": 18256.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "default comes with an installation of python, that is python 2. But that is",
      "start": 18260.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "this course is python 3. So python 3 space manage",
      "start": 18264.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": ".py space run",
      "start": 18268.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "server. What is going on here? So with python interpreter",
      "start": 18272.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "we are running this program manage.py and passing run server",
      "start": 18276.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "as an argument. This manage.py is essentially the same program",
      "start": 18280.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "that we worked with here, django admin.",
      "start": 18284.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "But we use django admin before creating a django project, now we have a django project, so now",
      "start": 18288.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "in this project we work with manage.py this",
      "start": 18292.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "is a module that contains some python code, so we use this module to manage",
      "start": 18296.0,
      "duration": 4.0,
      "language": "en"
    },
    {
      "text": "our django project. So let's go ahead and",
      "start": 18300.0,
      "duration": 4.0,
      "language": "en"
    }
  ]
}